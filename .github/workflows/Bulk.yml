name: Bulk branch
on:
  push:
    branches:
      - bulk
jobs:
  build-linux:
    name: Bulk Linux Builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 15
      matrix:
        runner: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
    - uses: actions/checkout@v1

    - name: Fetch common.sh
      run: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/bulk/common.sh

    - name: Restore cache
      id: cache
      uses: actions/cache@v1
      with:
        path: /home/runner/bioconda
        key: ${{ runner.os }}-BULK-${{ hashFiles('**/common.sh') }}

    - name: Setup Bioconda-utils
      if: steps.cache.outputs.cache-hit != 'true'
      uses: bioconda/bioconda-actions/bioconda_recipes_setup/@bulk

    - name: Build and upload
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        INVOLUCRO_AUTH: ${{ secrets.INVOLUCRO_AUTH }}
        QUAY_OAUTH_TOKEN: ${{ secrets.QUAY_OAUTH_TOKEN }}
        # Mimic circleci
        OSTYPE: "linux-gnu"
        CI: "true"
      run: |
        . /home/runner/bioconda/etc/profile.d/conda.sh
        conda activate base
        echo '============'
        conda info --all
        conda config --show-sources
        python -c 'import bioconda_utils.utils as u ; import pathlib as p ; print(*(f"{f}:\n{p.Path(f).read_text()}" for f in u.load_conda_build_config().exclusive_config_files), sep="\n")'
        echo '============'
        bioconda-utils build recipes config.yml \
          --worker-offset ${{ matrix.runner }} --n-workers 8 \
          --docker --mulled-test --anaconda-upload --mulled-upload-target biocontainers
        conda clean -y --all

  build-osx:
    name: Bulk OSX Builds
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        runner: [0, 1, 2, 3, 4]
    steps:
    - uses: actions/checkout@v1

    - name: Fetch common.sh
      run: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/bulk/common.sh

    - name: Restore cache
      id: cache
      uses: actions/cache@v1
      with:
        path: /Users/runner/bioconda
        key: ${{ runner.os }}--BULK-${{ hashFiles('**/common.sh') }}

    - name: Setup Bioconda-utils
      if: steps.cache.outputs.cache-hit != 'true'
      uses: bioconda/bioconda-actions/bioconda_recipes_setup/@bulk

    - name: OSX stuff
      run: |
        . /Users/runner/bioconda/etc/profile.d/conda.sh
        conda activate base
        # This is taken from conda-forge-ci-setup
        curl -L -O https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.9.sdk.tar.xz
        tar -xf MacOSX10.9.sdk.tar.xz -C /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
        # set minimum sdk version to our target
        plutil -replace MinimumSDKVersion -string 10.9 $(xcode-select -p)/Platforms/MacOSX.platform/Info.plist
        plutil -replace DTSDKName -string macosx10.9internal $(xcode-select -p)/Platforms/MacOSX.platform/Info.plist
        export CONDA_PREFIX="${CONDA_PREFIX:-$(conda info --json | jq -r .root_prefix)}"
        export CONDA_BUILD_SYSROOT="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk"
        mkdir -p ${CONDA_PREFIX}/etc/conda/activate.d
        echo "export CONDA_BUILD_SYSROOT=\"$CONDA_BUILD_SYSROOT\"" > "${CONDA_PREFIX}/etc/conda/activate.d/bioconda-ci-setup-activate.sh"
        conda list

    - name: Build and upload
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        INVOLUCRO_AUTH: ${{ secrets.INVOLUCRO_AUTH }}
        QUAY_OAUTH_TOKEN: ${{ secrets.QUAY_OAUTH_TOKEN }}
        # Mimic circleci
        OSTYPE: "darwin"
        CI: "true"
      run: |
        . /Users/runner/bioconda/etc/profile.d/conda.sh
        conda activate base
        echo '============'
        conda info --all
        conda config --show-sources
        python -c 'import bioconda_utils.utils as u ; import pathlib as p ; print(*(f"{f}:\n{p.Path(f).read_text()}" for f in u.load_conda_build_config().exclusive_config_files), sep="\n")'
        echo '============'
        bioconda-utils build recipes config.yml \
          --worker-offset ${{ matrix.runner }} --n-workers 5 \
          --anaconda-upload
        conda clean -y --all
