name: Upload (osx-arm64)
on:
  push:
    branches:
      - target-for-arm-osx

jobs:
  build_and_upload-osx-arm64:
    name: build_and_upload-osx-arm64
    if: github.repository == 'bioconda/bioconda-recipes'
    runs-on: macOS-14 # M1
    strategy:
      fail-fast: false
      max-parallel: 4
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # bail if there's no osx-arm64 recipes
      - name: Check for Additional Platforms
        id: additional_platforms
        run: ./.github/check-for-additional-platforms.sh "${GITHUB_SHA}~1 ${GITHUB_SHA}" "build_and_upload"

      - name: set path
        run: echo "/opt/mambaforge/bin" >> $GITHUB_PATH

      - name: Fetch conda install script
        if: steps.additional_platforms.outputs.skip_build != 'true'
        run: |
          wget https://raw.githubusercontent.com/bioconda/bioconda-common/master/{install-and-set-up-conda,configure-conda,common}.sh

      - name: Restore cache
        id: cache
        if: steps.additional_platforms.outputs.skip_build != 'true'
        uses: actions/cache@v4
        with:
          path: /opt/mambaforge
          key: ${{ runner.os }}--master--${{ hashFiles('install-and-set-up-conda.sh', 'common.sh', 'configure-conda.sh') }}

      - name: Set up bioconda-utils
        if: steps.cache.outputs.cache-hit != 'true' && steps.additional_platforms.outputs.skip_build != 'true'
        run: bash install-and-set-up-conda.sh

      # This script can be used to reconfigure conda to use the right channel setup.
      # This has to be done after the cache is restored, because
      # the channel setup is not cached as it resides in the home directory.
      # We could use a system-wide (and therefore cached) channel setup,
      # but mamba does not support that at the time of implementation
      # (it ignores settings made with --system).
      - name: Configure conda
        if: steps.additional_platforms.outputs.skip_build != 'true'
        run: bash configure-conda.sh

      - name: Build and Upload
        if: steps.additional_platforms.outputs.skip_build != 'true'
        env:
          QUAY_LOGIN: ${{ secrets.QUAY_LOGIN }}
          QUAY_OAUTH_TOKEN: ${{ secrets.QUAY_OAUTH_TOKEN }}
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          INVOLUCRO_AUTH: ${{ secrets.INVOLUCRO_AUTH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Mimic circleci
          OSTYPE: "darwin"
          CI: "true"
        run: |
          set -e
          eval "$(conda shell.bash hook)"
          conda activate bioconda

          # Use SDK with arm64 support
          export MACOSX_DEPLOYMENT_TARGET=11.0

          # The SDK isn't actually cached, so reinstall it
          run_conda_forge_build_setup

          bioconda-utils handle-merged-pr recipes config.yml \
            --repo bioconda/bioconda-recipes \
            --git-range ${GITHUB_SHA}~1 ${GITHUB_SHA} \
            --fallback build \
            --artifact-source github-actions \
            --dryrun
          # TODO: remove dry-run after testing
