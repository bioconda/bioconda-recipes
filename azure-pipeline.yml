pr:
  autoCancel: true
trigger:
  branches:
    exclude:
      - master

stages:
- stage: 'lint'
  jobs:
  - job: 'lint'  
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 8

    steps:
    - script: |
        git remote add upstream https://github.com/bioconda/bioconda-recipes
        git checkout master
        git pull upstream master
        source=$(Build.SourceBranch)
        git checkout ${source#"refs/heads/"}

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH

    - bash: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh
      displayName: Fetch common.sh

    - task: Cache@2
      inputs:
        path: "/usr/share/miniconda/envs/bioconda"
        key: '"$(Agent.OS)" | **/common.sh'
        cacheHitVar: CACHE_RESTORED
      displayName: Restore cache

    - script: .azure-pipelines/createEnv.py
      condition: ne(variables.CACHE_RESTORED, 'true')
      displayName: Install bioconda-utils

    - bash: |
          source activate bioconda
          set -e
          bioconda-utils lint --loglevel debug --full-report --git-range master HEAD
      displayName: Lint

- stage: 'test_linux'
  jobs:
  - job: 'test_linux'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 8

    steps:
      - script: |
          git remote add upstream https://github.com/bioconda/bioconda-recipes
          git checkout master
          git pull upstream master
          source=$(Build.SourceBranch)
          git checkout ${source#"refs/heads/"}

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to PATH

      - bash: |
          wget https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh
        displayName: Fetch common.sh

      - task: Cache@2
        inputs:
          path: "/usr/share/miniconda/envs/bioconda"
          key: '"$(Agent.OS)" | **/common.sh'
          cacheHitVar: CACHE_RESTORED
        displayName: Restore cache

      - script: .azure-pipelines/createEnv.py
        condition: ne(variables.CACHE_RESTORED, 'true')
        displayName: Install bioconda-utils

      - bash: |
          set -e
          source activate bioconda
          # This is needed so the wrong conda doesn't get used!
          export CONDA_EXE=${CONDA_PREFIX}/bin/conda
          export CONDA_PYTHON_EXE=${CONDA_PREFIX}/bin/python

          conda config --system --add channels defaults
          conda config --system --add channels bioconda
          conda config --system --add channels conda-forge
          docker pull quay.io/dpryan79/mulled_container:latest
          mkdir -p ${CONDA_PREFIX}/conda-bld

          bioconda-utils build recipes config.yml \
              --docker --mulled-test \
              --git-range master HEAD
          docker rmi quay.io/dpryan79/mulled_container:latest
        displayName: Test

      - bash: |
          mkdir -p /tmp/artifacts/packages
          env
          ls -l $CONDA
          cd $CONDA_PREFIX/conda-bld || exit 0
          find -name .cache | xargs rm -rf || true
          for n in rss.xml index.html channeldata.json linux-64 osx-64 noarch broken; do
            cp -rv $n /tmp/artifacts/packages || true
          done
          if command -V docker >/dev/null; then
            mkdir -p /tmp/artifacts/images
            cd /tmp/artifacts/images
            docker image ls --format='{{.Repository}}:{{.Tag}}' | \
              { grep biocontainers || true ; } | \
              xargs -n1 -P4 bash -c '
                test -n "${1+x}" || exit 0
                echo "Start compressing docker image ${1} ..."
                docker save "${1}" | gzip -c > "${1##*/}.tar.gz"
                echo "Finished compressing docker image ${1} ."
                ' --
          fi
          ) || true

      - publish: /tmp/artifacts
        artifact: LinuxArtifacts

- stage: 'test_osx'
  jobs:
  - job: 'test_osx'  
    pool:
      vmImage: 'macOS-latest'
    strategy:
      maxParallel: 4

    steps:
    - script: |
        git remote add upstream https://github.com/bioconda/bioconda-recipes
        git checkout master
        git pull upstream master
        source=$(Build.SourceBranch)
        git checkout ${source#"refs/heads/"}

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH

    - bash: sudo chown -R $USER $CONDA
      displayName: Take ownership of conda installation

    - bash: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh
      displayName: Fetch common.sh

    - task: Cache@2
      inputs:
        path: "$CONDA/envs/bioconda"
        key: '"$(Agent.OS)" | **/common.sh'
        cacheHitVar: CACHE_RESTORED
      displayName: Restore cache

    - script: .azure-pipelines/createEnv.py
      condition: ne(variables.CACHE_RESTORED, 'true')
      displayName: Install bioconda-utils

    - bash: |
        set -e
        source activate bioconda
        # This is needed so the wrong conda doesn't get used!
        export CONDA_EXE=${CONDA_PREFIX}/bin/conda
        export CONDA_PYTHON_EXE=${CONDA_PREFIX}/bin/python

        conda config --system --add channels defaults
        conda config --system --add channels bioconda
        conda config --system --add channels conda-forge
        mkdir -p ${CONDA_PREFIX}/conda-bld

        bioconda-utils build recipes config.yml \
            --git-range master HEAD
      displayName: Test
