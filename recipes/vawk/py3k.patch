diff --git a/vawk b/vawk
index ffde84c..7941711 100755
--- a/vawk
+++ b/vawk
@@ -126,7 +126,7 @@ class Sample(object):
         elif len(s_tok) == 2:
             self.field = s_tok[1]
         else:
-            print 'Error: format should be S$[ID]$[FMT]'
+            print('Error: format should be S$[ID]$[FMT]')
             exit(1)
         return
 
@@ -159,9 +159,9 @@ def vawk(debug, header, var, info_col, vawk_string, vcf_file):
     (begin, perline, end) = parse(vawk_string[0])
 
     if debug:
-        print 'begin:', begin
-        print 'perline:', perline
-        print 'end:', end
+        print('begin:', begin)
+        print('perline:', perline)
+        print('end:', end)
 
     # get the requested info keys from the command line (format: I$FIELD)
     # [\w]: any word character  [a-zA-Z0-9_]
@@ -191,9 +191,9 @@ def vawk(debug, header, var, info_col, vawk_string, vcf_file):
         sample_queries.append(s_obj)
 
         if debug:
-            print "name_raw: " + s_obj.name_raw
-            print "name_clean: " + s_obj.name_clean
-            print "name_escaped: " + s_obj.name_escaped
+            print("name_raw: " + s_obj.name_raw)
+            print("name_clean: " + s_obj.name_clean)
+            print("name_escaped: " + s_obj.name_escaped)
 
     # parse the per-sample data fields
     for s_obj in sample_queries:
@@ -249,12 +249,12 @@ def vawk(debug, header, var, info_col, vawk_string, vcf_file):
 
     cmd = ['gawk'] + var_list + [vawk_string, vcf_file]
     if debug:
-        print ' '.join(cmd)
+        print(' '.join(cmd))
     
     p = Popen(cmd, stdout=PIPE, stderr=STDOUT)
 
     for line in iter(p.stdout.readline, b''):
-       print line.rstrip()
+        print(line.rstrip().decode("utf-8"))
 
     return
 
@@ -272,6 +272,6 @@ def main():
 if __name__ == '__main__':
     try:
         sys.exit(main())
-    except IOError, e:
+    except IOError as e:
         if e.errno != 32:  # ignore SIGPIPE
             raise
