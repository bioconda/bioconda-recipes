{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppparallel
  # Note that conda versions cannot contain -, so any -'s in the version have
  # been replaced with _'s.
  version: "4.3.20"

source:
  fn: RcppParallel_4.3.20.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/RcppParallel_4.3.20.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_4.3.20.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/
  skip: True  # [osx]
# Suggests: Rcpp, RUnit, knitr, rmarkdown
requirements:
  build:
    - r-base
    - r-bh >=1.60.0_1
    - posix               # [win]
    - {{native}}toolchain # [win]
    - gcc                 # [not win]

  run:
    - r-base
    - r-bh >=1.60.0_1

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppParallel')" # [not win]
    - "\"%R%\" -e \"library('RcppParallel')\"" # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel
  license: GPL-2
  summary: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()'
    function can be used to convert the work of a standard serial "for" loop into a
    parallel one and the 'parallelReduce()' function can be used for accumulating aggregate
    or other values.
  license_family: GPL2

# The original CRAN metadata for this package was:

# Package: RcppParallel
# Type: Package
# Title: Parallel Programming Tools for 'Rcpp'
# Version: 4.3.20
# Authors@R: c( person("JJ", "Allaire", role = c("aut"), email = "jj@rstudio.com"), person("Romain", "Francois", role = c("aut", "cph")), person("Kevin", "Ushey", role = c("aut", "cre"), email = "kevin@rstudio.com"), person("Gregory", "Vandenbrouck", role = "aut"), person("Marcus", "Geelnard", role = c("aut", "cph"), comment = "TinyThread library, http://tinythreadpp.bitsnbites.eu/"), person(family = "RStudio", role = "cph"), person(family = "Intel", role = c("aut", "cph"), comment = "Intel TBB library, https://www.threadingbuildingblocks.org/"), person(family = "Microsoft", role = "cph") )
# Description: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial "for" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values.
# Depends: R (>= 3.0.2)
# Suggests: Rcpp, RUnit, knitr, rmarkdown
# LinkingTo: BH (>= 1.60.0-1)
# SystemRequirements: GNU make, Windows: cmd.exe and cscript.exe, Solaris: g++ is required
# License: GPL-2
# URL: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel
# Collate: 'build.R' 'hooks.R' 'options.R'
# NeedsCompilation: yes
# Packaged: 2016-08-15 21:55:38 UTC; kevin
# Author: JJ Allaire [aut], Romain Francois [aut, cph], Kevin Ushey [aut, cre], Gregory Vandenbrouck [aut], Marcus Geelnard [aut, cph] (TinyThread library, http://tinythreadpp.bitsnbites.eu/), RStudio [cph], Intel [aut, cph] (Intel TBB library, https://www.threadingbuildingblocks.org/), Microsoft [cph]
# Maintainer: Kevin Ushey <kevin@rstudio.com>
# Repository: CRAN
# Date/Publication: 2016-08-16 19:13:58

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
