diff --git a/meson.build b/meson.build
index d7b253a..ac5ca5d 100644
--- a/meson.build
+++ b/meson.build
@@ -22,41 +22,42 @@ static_build = get_option('static')
 
 cc = meson.get_compiler('cpp')
 
-# fastahack_dep = cc.find_library('libfastahack')
 lzma_dep = dependency('liblzma', static: static_build)
 thread_dep = dependency('threads', static: static_build)
-wfa2lib_dep = cc.find_library('libwfa2') # need to link for vcflib code
+wfa2lib_dep = cc.find_library('wfa2') # need to link for vcflib code
 zlib_dep = dependency('zlib', static: static_build)
 htslib_dep = dependency('htslib', static: static_build, required: false)
-vcflib_dep = cc.find_library('libvcflib', required: false)
+vcflib_dep = cc.find_library('vcflib', required: false)
 seqlib_dep = dependency('libseqlib', static: static_build, required: false)
 tabixpp_dep = cc.find_library('tabixpp', required: false, static: static_build)
 
 # later versions of vcflib have Variant.hpp in a system subdirectory
 fs = import('fs')
-if fs.is_dir('/usr/include/vcflib')
-  message('Using /usr/include/vcflib dir')
-  vcflib_inc = include_directories('/usr/include/vcflib')
+if fs.is_dir('${PREFIX}/include/vcflib')
+  message('Using ${PREFIX}/include/vcflib')
+  vcflib_inc = include_directories('${PREFIX}/include/vcflib')
 else
   vcflib_inc = files()
 endif
 
 
 if get_option('prefer_system_deps') # defaults to true, otherwise use git modules and local sources
-  fastahack_dep = cc.find_library('libfastahack', required: true) # also link in for vcflib
-  smithwaterman_dep = cc.find_library('libsmithwaterman')
-  if fs.is_dir('/usr/include/fastahack')
-    message('Using /usr/include/fastahack dir')
-    fastahack_inc = include_directories('/usr/include/fastahack')
+  fastahack_dep = cc.find_library('libfastahack', required: false) # also link in for vcflib
+  smithwaterman_dep = cc.find_library('libsmithwaterman', required: false)
+  if fs.is_dir('${SRC_DIR}/freebayes/contrib/fastahack')
+    message('Using ${SRC_DIR}/freebayes/contrib/fastahack dir')
+    fastahack_inc = include_directories('${SRC_DIR}/freebayes/contrib/fastahack')
   else
     fastahack_inc = files()
   endif
+  multichoose_inc = files()
 
 else
   # uses the minimal local git submodules or checkout trees in ./contrib/
   # see `git submodule`
   # htslib and vcflib have to come from the underlying distro
   fastahack_dep = dependency('', required : false)
+  smithwaterman_dep = dependency('', required : false)
 
   fastahack_inc = include_directories('contrib/fastahack')
   fastahack_src = files(
@@ -150,7 +151,7 @@ extra_cpp_args = cc.get_supported_arguments(
 freebayes_lib = static_library(
     'freebayes_common',
     freebayes_common_src,
-    include_directories : [incdir, vcflib_inc, fastahack_inc],
+    include_directories : [incdir, vcflib_inc, fastahack_inc, multichoose_inc],
     cpp_args : extra_cpp_args,
     dependencies : [zlib_dep, lzma_dep, thread_dep, htslib_dep, tabixpp_dep,
                     vcflib_dep, wfa2lib_dep, seqlib_dep],
@@ -160,12 +161,12 @@ freebayes_lib = static_library(
 if static_build
   link_arguments = '-static'
 else
-  link_arguments = []
+  link_arguments = ['-ltabixpp', '-lwfa2', '-lvcflib']
 endif
 
 executable('freebayes',
            [freebayes_src],
-           include_directories : [incdir, vcflib_inc, fastahack_inc],
+           include_directories : [incdir, vcflib_inc, fastahack_inc, multichoose_inc],
            cpp_args : extra_cpp_args,
            link_args: link_arguments,
            dependencies: [zlib_dep,
