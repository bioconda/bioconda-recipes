package:
  name: outrigger
  version: "0.2.9"

source:
  fn: outrigger-0.2.9.tar.gz
  url: https://pypi.python.org/packages/aa/16/6cf8b51f4233b85fd2e20018c94033bb062297bcf71078bca1a3b78ff0a9/outrigger-0.2.9.tar.gz
  md5: 987ce3ebef2df2501483d176d5cf0c95
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - outrigger = outrigger:main
    #
    # Would create an entry point called outrigger that calls outrigger.main()

    - outrigger = outrigger.commandline:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pytest
    - pandas >=0.17.0
    - coverage
    - graphlite
    - gffutils >=0.8.7.1
    - pybedtools
    - biopython
    - joblib
    - pysam

  run:
    - python
    - pytest
    - pandas >=0.17.0
    - coverage
    - graphlite
    - gffutils >=0.8.7.1
    - pybedtools
    - biopython
    - joblib
    - pysam

test:
  # Python imports
  imports:
    - outrigger
    - outrigger.index
    - outrigger.io
    - outrigger.psi
    - outrigger.validate

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - outrigger --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - flake8
    - pytest
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/yeolab/outrigger
  license: BSD License
  summary: 'Outrigger is a tool to de novo annotate splice sites and exons'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
