{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-tidygenomics
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/tidygenomics_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/tidygenomics/tidygenomics_{{ version }}.tar.gz
  sha256: 966095c07f7f9e9e9a33585c6fa81e3e35038acd55fd6c2c536fd506bfa8d358

build:
  merge_build_host: True  # [win]

  number: 2

  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('cxx') }}      # [not win]
    - {{native}}toolchain        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - bioconductor-iranges
    - r-rcpp
    - r-dplyr
    - r-fuzzyjoin >=0.1.3
    - r-purrr
    - r-tidyr

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - bioconductor-iranges
    - r-rcpp
    - r-dplyr
    - r-fuzzyjoin >=0.1.3
    - r-purrr
    - r-tidyr

test:
  commands:

    - $R -e "library('tidygenomics')"           # [not win]
    - "\"%R%\" -e \"library('tidygenomics')\""  # [win]

about:
  home: https://github.com/const-ae/tidygenomics
  license: GPL-3
  summary: Handle genomic data within data frames just as you would with 'GRanges'. This packages
    provides method to deal with genomic intervals the "tidy-way" which makes it simpler
    to integrate in the the general data munging process. The API is inspired by the
    popular 'bedtools' and the genome_join() method from the 'fuzzyjoin' package.
  license_family: GPL3
extra:
  recipe-maintainers:
    - MathiasHaudgaard
    - FrodePedersen
    - ArneKr
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
