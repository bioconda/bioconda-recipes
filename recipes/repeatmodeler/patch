diff --git a/BuildDatabase b/BuildDatabase
index df70509..eb64ce1 100755
--- a/BuildDatabase
+++ b/BuildDatabase
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) BuildDatabase.pl
diff --git a/LTRPipeline b/LTRPipeline
index 894d3ad..d22bf2c 100755
--- a/LTRPipeline
+++ b/LTRPipeline
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) LTRPipeline
diff --git a/NeedlemanWunschGotohAlgorithm.pm b/NeedlemanWunschGotohAlgorithm.pm
index 5276067..79acb4f 100755
--- a/NeedlemanWunschGotohAlgorithm.pm
+++ b/NeedlemanWunschGotohAlgorithm.pm
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!/usr/bin/env perl -w
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) NeedlemanWunschGotohAlgorithm.pm
diff --git a/Refiner b/Refiner
index 64a731c..3466cae 100755
--- a/Refiner
+++ b/Refiner
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) Refiner
diff --git a/RepeatClassifier b/RepeatClassifier
index 7ab5392..a12bb95 100755
--- a/RepeatClassifier
+++ b/RepeatClassifier
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) RepeatClassifier
diff --git a/RepeatModeler b/RepeatModeler
index 7cc4a0f..b0d8d8e 100755
--- a/RepeatModeler
+++ b/RepeatModeler
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) RepeatModeler
diff --git a/TRFMask b/TRFMask
index 01fed4d..3dad631 100755
--- a/TRFMask
+++ b/TRFMask
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/usr/bin/env perl
 ##---------------------------------------------------------------------------##
 ##  File:
 ##      @(#) TRFMask
--- a/README.md
+++ b/README.md
@@ -53,7 +53,7 @@ Source Distribution Installation
     with version 5.8.8.
 
   RepeatMasker & Libraries
-    Developed and tested with open-4.0.9. The program is available at 
+    Developed and tested with open-4.1.4. The program is available at 
     http://www.repeatmasker.org/RMDownload.html and is distributed with
     Dfam - an open database of transposable element families.
 
@@ -77,7 +77,7 @@ Source Distribution Installation
   RMBlast - A modified version of NCBI Blast for use with RepeatMasker
     and RepeatModeler.  Precompiled binaries and source can be found at
     http://www.repeatmasker.org/RMBlast.html
-    We recommend using 2.9.0-p2 or higher.
+    We highly recommend using 2.13.0 or higher.
 
   UCSC genome browser command-line utilities - Some tools included with
     RepeatModeler work with files in the 'twobit' file format using
@@ -85,12 +85,6 @@ Source Distribution Installation
     Precompiled binaries and source for these programs can be found at
     http://hgdownload.soe.ucsc.edu/downloads.html#utilities_downloads.
 
-**Optional. Additional search engine:**
-  
-  ABBlast - Sequence Search Engine, W. Gish et al.
-    Developed and tested with 2.0 [04-May-2006]. The latest versions
-    of ABBlast may be downloaded from: http://blast.advbiocomp.com/licensing/
-
 **Optional. Required for running LTR structural search pipeline:**
 
   LtrHarvest - The LtrHarvest program is part of the GenomeTools suite.  We
@@ -164,8 +158,7 @@ from Genbank ( approx 11MB ) into a file called elephant.fa.
 
   1. Create a Database for RepeatModeler
 
-     RepeatModeler uses a NCBI BLASTDB or a ABBlast XDF database 
-     ( depending on the search engine used ) as input to the
+     RepeatModeler uses a NCBI BLASTDB as input to the
      repeat modeling pipeline.  A utility is provided to assist
      the user in creating a single database from several 
      types of input structures.  
@@ -188,15 +181,15 @@ from Genbank ( approx 11MB ) into a file called elephant.fa.
      input sequence.  For best results run this on a single machine with
      a moderate amount of memory > 32GB and multiple processors.  
      Our setup is Xeon(R) CPU E5-2680 v4 @ 2.40GHz - 28 cores, 128GB RAM.
-     To specify a run using 20 parallel jobs, and including the new 
+     To specify a run using 20 threads (at most), and including the new 
      LTR discovery pipeline:
      
             nohup <RepeatModelerPath>/RepeatModeler -database elephant 
-            -pa 20 -LTRStruct >& run.out &
+            -threads 20 -LTRStruct >& run.out &
 
-     The nohup is used on our machines when running long ( > 3-4 hour ) 
+     The nohup (or screen) is used on our machines when running long 
      jobs.  The log output is saved to a file and the process is backgrounded.
-     For typical runtimes ( can be > 2 days with this configuration on a
+     For typical runtimes ( can be > 2-3 days with this configuration on a
      well assembled mammalian genome ) see the run statistics section of 
      this file.  It is important to save the log output for later usage.  
      It contains the random number generator seed so that the sampling 
@@ -213,15 +206,16 @@ from Genbank ( approx 11MB ) into a file called elephant.fa.
 
      and remains after each run for debugging purposes or for the purpose
      of resuming runs if a failure occures. At the succesful completion 
-     of a run, two files are generated:
+     of a run, three files are generated:
 
                <database_name>-families.fa  : Consensus sequences
                <database_name>-families.stk : Seed alignments
+               <database_name>-rmod.log     : A summarized log of the run
 
      The seed alignment file is in a Dfam compatible Stockholm format and
      may be uploaded to the Dfam database by submiting the data to 
-     help@dfam.org.  In the near future we will provide a tool for uploading
-     families directly to the database.
+     help@dfam.org or by going to dfam.org/login and creating an upload
+     account.
 
      The fasta format is useful for running quick custom library searches
      using RepeatMasker.  Ie.:
@@ -278,6 +272,18 @@ from Genbank ( approx 11MB ) into a file called elephant.fa.
 Caveats
 -------
 
+  + RMBlast uses the NCBI stat reporting mechanism to report
+    usage statistics back over the net.  If RepeatModeler is 
+    taking in inordinate amount of time to complete 
+    ( > 1 week on a multi-core machine ) or you do not have
+    an outside network connection to the machine, you should
+    disable this reporting feature by setting the environment
+    variable BLAST_USAGE_REPORT=false or by creating a .ncbirc
+    file in the users home directory with the stanza:
+
+    [BLAST]
+    BLAST_USAGE_REPORT=false
+
   + RepeatModeler is designed to run on assemblies rather
     than genome reads. At the start of a run a quick analysis
     is performed on the input database to ascertain the 
-- 
2.40.0
