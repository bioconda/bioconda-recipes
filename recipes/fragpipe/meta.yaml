{% set name = "FragPipe" %}
{% set version = "19.1" %}
{% set philosopher_version = "4.8.1" %}
{% set msfragger_version = "3.7" %}
{% set ionquant_version = "1.8.10" %}

package:
  name: fragpipe
  version: {{ version }}

build:
  number: 0
  noarch: generic

source:
  - url: https://github.com/Nesvilab/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.zip
    sha256: 242c45abe590ceee29d9afee4a0571fa2b8737b4040a751b6833fa4987c7334d
    folder: fragpipe_source
  - url: https://github.com/Nesvilab/philosopher/releases/download/v{{ philosopher_version }}/philosopher_v{{ philosopher_version }}_linux_amd64.zip
    sha256: c0c85126ad9c3b1a034aca772e9617175693617a0c8809dc681522daf7f9b52f
    folder: philosopher_source

build:
  number: 0
  script:
    - if [ -z "$NAME" ]; then export NAME=${USERNAME:-bioconda}; fi
    - if [ -z "$EMAIL" ]; then export EMAIL=${NAME}@${HOSTNAME:-bioconda.org}; fi
    - if [ -z "$INSTITUTION" ]; then export INSTITUTION=${HOSTNAME:-bioconda.org}; fi
    - mkdir -p $PREFIX/
    - cp  -rp fragpipe_source/* $PREFIX/
    - cp ${RECIPE_DIR}/fragpipe_cli $PREFIX/bin
    - mkdir -p $PREFIX/bin
    - chmod ugo+x philosopher_source/philosopher
    - cp philosopher_source/philosopher philosopher_source/philosopher.yml $PREFIX/bin
    #- ${RECIPE_DIR}/academic_install.py -n galaxy -e "$EMAIL" -o "$INSTITUTION" -i '1.8.10' -p ${PREFIX}/tools
    #- ${RECIPE_DIR}/academic_install.py -n galaxy -e "$EMAIL" -o "$INSTITUTION" -m '3.7' -p ${PREFIX}/tools
  missing_dso_whitelist:
    - /lib64/libgomp.so.1
    - /lib64/libdl.so.2
    - /lib64/librt.so.1
    - /lib64/libpthread.so.0
    - /lib64/libm.so.6
    - /lib64/libc.so.6
    - /lib64/ld-linux-x86-64.so.2
    - /lib64/libdl.so.2
    - /lib64/librt.so.1
    - /lib64/libm.so.6
    - /lib64/libpthread.so.0
    - /lib64/libstdc++.so.6
    - /lib64/libgcc_s.so.1
    - /lib64/libc.so.6
    - /lib64/ld-linux-x86-64.so.2

requirements:
  host:
  run:
    - openjdk >=11
    - python >=3.10
    - pandas =1.0.5
    - numpy =1.18.5
    - msfragger =3.7.0
    - ionquant =1.8.10
    #- numpy >=1.17

#test:
#  commands:
#    # - which fragpipe
#    - fragpipe --help  2>&1 | grep 'FragPipe'

about:
  home: https://github.com/Nesvilab/FragPipe
  license: GNU General Public License v3.0
  license_family: GPL
  summary:  Pipeline for comprehensive analysis of shotgun proteomics data
  description: |
    FragPipe is a Java Graphical User Interface (GUI) for a suite of computational tools
    enabling comprehensive analysis of mass spectrometry-based proteomics data.
    It is powered by MSFragger - an ultrafast proteomic search engine suitable
    for both conventional and "open" (wide precursor mass tolerance) peptide identification.
    FragPipe includes the Philosopher toolkit for downstream post-processing of
    MSFragger search results (PeptideProphet, iProphet, ProteinProphet), FDR filtering,
    label-based quantification, and multi-experiment summary report generation.
    Crystal-C and PTM-Shepherd are included to aid interpretation of open search results.
    Also included in FragPipe binary are TMT-Integrator for TMT/iTRAQ isobaric
    labeling-based quantification, IonQuant for label-free quantification with
    match-between-run (MBR) functionality, SpectraST and EasyPQP spectral library building modules,
    and DIA-Umpire SE module for direct analysis of data independent acquisition (DIA) data.

extra:
  notes: |
    For example run it with "IonQuant -Xms512m -Xmx16g"
  identifiers:
    - biotools:fragpipe
    - doi:10.1074/mcp.TIR120.002048
