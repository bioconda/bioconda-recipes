From 95b048c1b01e9e6a9911411a1e563b0c2002d003 Mon Sep 17 00:00:00 2001
From: Elmar Pruesse <elmar.pruesse@ucdenver.edu>
Date: Wed, 15 May 2019 17:18:48 -0600
Subject: [PATCH 2/3] Rewrite gzipFileBuf without gnu ext usage (breaks osx)

---
 src/CMakeLists.txt                    | 2 +-
 src/jgi_summarize_bam_contig_depths.h | 9 ++++++---
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 3048617..62555d2 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1,5 +1,5 @@
 set(Boost_USE_STATIC_LIBS   ON)
-find_package(Boost 1.55.0 COMPONENTS program_options filesystem system graph serialization REQUIRED)
+find_package(Boost 1.55.0 COMPONENTS iostreams program_options filesystem system graph serialization REQUIRED)
 find_package(OpenMP)
 
 if (OPENMP_FOUND)
diff --git a/src/jgi_summarize_bam_contig_depths.h b/src/jgi_summarize_bam_contig_depths.h
index afffd8a..e15159d 100644
--- a/src/jgi_summarize_bam_contig_depths.h
+++ b/src/jgi_summarize_bam_contig_depths.h
@@ -10,7 +10,6 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <unistd.h>
-#include <ext/stdio_filebuf.h>
 #include <getopt.h>
 #include <stdint.h>
 
@@ -28,6 +27,8 @@
 #include <boost/unordered_map.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/shared_ptr.hpp>
+#include <boost/iostreams/device/file_descriptor.hpp>
+#include <boost/iostreams/stream.hpp>
 
 #include "OpenMP.h"
 #include "BamUtils.h"
@@ -151,7 +152,8 @@ public:
 };
 
 typedef vector< vector< VarianceType > > VarianceTypeMatrix;
-typedef __gnu_cxx::stdio_filebuf<char> gzipFileBuf;
+
+typedef boost::iostreams::stream_buffer<boost::iostreams::file_descriptor_sink> gzipFileBuf;
 typedef boost::shared_ptr< gzipFileBuf > gzipFileBufPtr;
 
 
@@ -270,7 +272,8 @@ public:
 gzipFileBufPtr gzipOutputFile(string fileName, int level = 1) {
 	string command = "gzip -" + boost::lexical_cast<string>(level) + " -c >" + fileName;
 	FILE *file = popen(command.c_str(), "w");
-	gzipFileBufPtr filebuf( new gzipFileBuf(file, std::ios_base::out) );
+	boost::iostreams::file_descriptor_sink sink(fileno(file), boost::iostreams::close_handle);
+	gzipFileBufPtr filebuf(new gzipFileBuf(sink, std::ios_base::out));
 	return filebuf;
 }
 
-- 
2.14.0

