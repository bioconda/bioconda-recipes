From 504e5998c2f4910ec68452cd8f1298b8aab0dc22 Mon Sep 17 00:00:00 2001
From: Matthias De Smet <11850640+matthdsm@users.noreply.github.com>
Date: Wed, 27 Oct 2021 09:05:06 +0200
Subject: [PATCH] gcc patch

---
 configure.ac                                     |  8 ++++----
 src/libmaus2/aio/OFStreamOutputStreamFactory.hpp |  6 +++---
 src/libmaus2/aio/PosixFdOutputStreamFactory.hpp  |  6 +++---
 .../parallel/threadpool/bam/BamHeaderSeqData.hpp |  6 +++---
 src/libmaus2/util/ArgInfo.cpp                    |  2 +-
 src/libmaus2/util/PathTools.cpp                  | 16 ++++++++--------
 src/test/testThreadPoolCramEncode.cpp            | 14 +++++++-------
 7 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/src/libmaus2/aio/OFStreamOutputStreamFactory.hpp b/src/libmaus2/aio/OFStreamOutputStreamFactory.hpp
index 008100d1..40640f6b 100644
--- a/src/libmaus2/aio/OFStreamOutputStreamFactory.hpp
+++ b/src/libmaus2/aio/OFStreamOutputStreamFactory.hpp
@@ -21,7 +21,7 @@
 
 #include <libmaus2/aio/OutputStreamFactory.hpp>
 #include <libmaus2/exception/LibMausException.hpp>
-#include <filesystem>
+#include <experimental/filesystem>
 #include <fstream>
 #include <cstring>
 
@@ -72,8 +72,8 @@ namespace libmaus2
 			}
 			virtual void mkdir(std::string const & name, uint64_t const mode)
 			{
-				std::filesystem::create_directory(name,std::filesystem::current_path());
-				std::filesystem::permissions(name,static_cast<std::filesystem::perms>(mode));
+				std::experimental::filesystem::create_directory(name, std::experimental::filesystem::current_path());
+				std::experimental::filesystem::permissions(name, static_cast<std::experimental::filesystem::perms>(mode));
 			}
 		};
 	}
diff --git a/src/libmaus2/aio/PosixFdOutputStreamFactory.hpp b/src/libmaus2/aio/PosixFdOutputStreamFactory.hpp
index 083fad49..9251a126 100644
--- a/src/libmaus2/aio/PosixFdOutputStreamFactory.hpp
+++ b/src/libmaus2/aio/PosixFdOutputStreamFactory.hpp
@@ -21,7 +21,7 @@
 
 #include <libmaus2/aio/OutputStreamFactory.hpp>
 #include <libmaus2/aio/PosixFdOutputStream.hpp>
-#include <filesystem>
+#include <experimental/filesystem>
 
 namespace libmaus2
 {
@@ -88,8 +88,8 @@ namespace libmaus2
 			}
 			virtual void mkdir(std::string const & name, uint64_t const mode)
 			{
-				std::filesystem::create_directory(name,std::filesystem::current_path());
-				std::filesystem::permissions(name,static_cast<std::filesystem::perms>(mode));
+				std::experimental::filesystem::create_directory(name, std::experimental::filesystem::current_path());
+				std::experimental::filesystem::permissions(name, static_cast<std::experimental::filesystem::perms>(mode));
 			}
 		};
 	}
diff --git a/src/libmaus2/parallel/threadpool/bam/BamHeaderSeqData.hpp b/src/libmaus2/parallel/threadpool/bam/BamHeaderSeqData.hpp
index e740798e..aa06565d 100644
--- a/src/libmaus2/parallel/threadpool/bam/BamHeaderSeqData.hpp
+++ b/src/libmaus2/parallel/threadpool/bam/BamHeaderSeqData.hpp
@@ -20,7 +20,7 @@
 
 #include <cassert>
 #include <regex>
-#include <filesystem>
+#include <experimental/filesystem>
 #include <libmaus2/exception/LibMausException.hpp>
 #include <libmaus2/aio/InputStreamInstance.hpp>
 
@@ -120,10 +120,10 @@ namespace libmaus2
 
 							std::string const m5 = it_M5->second;
 
-							std::filesystem::path dictpath = ref_cache_path;
+							std::experimental::filesystem::path dictpath = ref_cache_path;
 							dictpath /= m5;
 
-							if ( ! std::filesystem::exists(dictpath) )
+							if (!std::experimental::filesystem::exists(dictpath))
 								needfascan = true;
 						}
 
diff --git a/src/libmaus2/util/ArgInfo.cpp b/src/libmaus2/util/ArgInfo.cpp
index 3802cbb7..41c7c707 100644
--- a/src/libmaus2/util/ArgInfo.cpp
+++ b/src/libmaus2/util/ArgInfo.cpp
@@ -24,7 +24,7 @@
 #include <libmaus2/demangle/Demangle.hpp>
 #include <libmaus2/network/GetHostName.hpp>
 #include <libmaus2/util/PathTools.hpp>
-#include <filesystem>
+#include <experimental/filesystem>
 
 bool libmaus2::util::ArgInfo::helpRequested() const
 {
diff --git a/src/libmaus2/util/PathTools.cpp b/src/libmaus2/util/PathTools.cpp
index af1b3188..0fbda2c4 100644
--- a/src/libmaus2/util/PathTools.cpp
+++ b/src/libmaus2/util/PathTools.cpp
@@ -16,27 +16,27 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 #include <libmaus2/util/PathTools.hpp>
-#include <filesystem>
+#include <experimental/filesystem>
 
 std::string libmaus2::util::PathTools::getAbsPath(std::string const fn)
 {
-	if ( ! fn.size() )
-		return fn;
-	else
-		return std::filesystem::absolute(std::filesystem::path(fn)).string();
+    if (!fn.size())
+        return fn;
+    else
+        return std::experimental::filesystem::absolute(std::experimental::filesystem::path(fn)).string();
 }
 
 std::string libmaus2::util::PathTools::getCurDir()
 {
-	return std::filesystem::current_path().string();
+    return std::experimental::filesystem::current_path().string();
 }
 
 std::string libmaus2::util::PathTools::sbasename(std::string const & s)
 {
-	return std::filesystem::path(s).filename().string();
+    return std::experimental::filesystem::path(s).filename().string();
 }
 
 std::string libmaus2::util::PathTools::sdirname(std::string const & s)
 {
-	return std::filesystem::path(s).remove_filename().string();
+    return std::experimental::filesystem::path(s).remove_filename().string();
 }
diff --git a/src/test/testThreadPoolCramEncode.cpp b/src/test/testThreadPoolCramEncode.cpp
index 2ff71e4a..8dab72b4 100644
--- a/src/test/testThreadPoolCramEncode.cpp
+++ b/src/test/testThreadPoolCramEncode.cpp
@@ -21,7 +21,7 @@
 #include <libmaus2/util/GetFileSize.hpp>
 #include <libmaus2/parallel/NumCpus.hpp>
 #include <regex>
-#include <filesystem>
+#include <experimental/filesystem>
 #include <libmaus2/fastx/FastAReader.hpp>
 #include <libmaus2/digest/md5.hpp>
 
@@ -59,10 +59,10 @@ int main(int argc, char * argv[])
 			return EXIT_FAILURE;
 		}
 
-		std::filesystem::path ref_cache_path(ref_cache);
-		std::set<std::filesystem::path> Spathseen;
+		std::experimental::filesystem::path ref_cache_path(ref_cache);
+		std::set<std::experimental::filesystem::path> Spathseen;
 
-		while ( std::filesystem::exists(ref_cache_path) && std::filesystem::is_symlink(ref_cache_path) )
+		while (std::experimental::filesystem::exists(ref_cache_path) && std::experimental::filesystem::is_symlink(ref_cache_path))
 		{
 			if ( Spathseen.find(ref_cache_path) != Spathseen.end() )
 			{
@@ -72,12 +72,12 @@ int main(int argc, char * argv[])
 
 			Spathseen.insert(ref_cache_path);
 
-			auto n_ref_cache_path = std::filesystem::read_symlink(ref_cache_path);
+			auto n_ref_cache_path = std::experimental::filesystem::read_symlink(ref_cache_path);
 
 			ref_cache_path = n_ref_cache_path;
 		}
 
-		if ( !std::filesystem::exists(ref_cache_path) )
+		if (!std::experimental::filesystem::exists(ref_cache_path))
 		{
 			std::cerr << "[E] REF_CACHE directory " << ref_cache_path << " does not exist" << std::endl;
 			return EXIT_FAILURE;
@@ -112,7 +112,7 @@ int main(int argc, char * argv[])
 					return EXIT_FAILURE;
 				}
 
-				std::filesystem::path dictpath = ref_cache_path;
+				std::experimental::filesystem::path dictpath = ref_cache_path;
 				dictpath /= digest;
 
 				std::cerr << "[V] writing " << dictpath << " for " << pat.sid << " in " << ref << std::endl;
-- 
2.33.0

