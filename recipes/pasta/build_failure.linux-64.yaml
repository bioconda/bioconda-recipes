recipe_sha: 65e7d2e1e37f5d09b369b83c2b28d55d132f52dfa10e858233a874f106158aa3  # The hash of the recipe's meta.yaml at which this recipe failed to build.
skiplist: true # Set to true to skiplist this recipe so that it will be ignored as long as its latest commit is the one given above.
category: test failure
log: |2-
      xorg-inputproto:           2.3.2-h7f98852_1002       conda-forge
      xorg-kbproto:              1.0.7-h7f98852_1002       conda-forge
      xorg-libice:               1.1.1-hd590300_0          conda-forge
      xorg-libsm:                1.2.4-h7391055_0          conda-forge
      xorg-libx11:               1.8.9-h8ee46fc_0          conda-forge
      xorg-libxau:               1.0.11-hd590300_0         conda-forge
      xorg-libxdmcp:             1.1.3-h7f98852_0          conda-forge
      xorg-libxext:              1.3.4-h0b41bf4_2          conda-forge
      xorg-libxfixes:            5.0.3-h7f98852_1004       conda-forge
      xorg-libxi:                1.7.10-h7f98852_0         conda-forge
      xorg-libxrender:           0.9.11-hd590300_0         conda-forge
      xorg-libxt:                1.3.0-hd590300_1          conda-forge
      xorg-libxtst:              1.2.3-h7f98852_1002       conda-forge
      xorg-recordproto:          1.14.2-h7f98852_1002      conda-forge
      xorg-renderproto:          0.11.1-h7f98852_1002      conda-forge
      xorg-xextproto:            7.3.0-h0b41bf4_1003       conda-forge
      xorg-xproto:               7.0.31-h7f98852_1007      conda-forge
      xz:                        5.2.6-h166bdaf_0          conda-forge
      zlib:                      1.3.1-h4ab18f5_1          conda-forge
      zstd:                      1.5.6-ha6fb4c9_0          conda-forge

  Preparing transaction: ...working... done
  Verifying transaction: ...working... done
  Executing transaction: ...working... done
  export PREFIX=/opt/conda/conda-bld/pasta_1718122849359/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
  export SRC_DIR=/opt/conda/conda-bld/pasta_1718122849359/test_tmp
  import: 'pasta'
  import: 'pasta'
   clustalw2 -help
   grep OPTIONS
  -OPTIONS            :list the command line parameters
   hmmalign -h
   grep HMMER
  # HMMER 3.1b2 (February 2015); http://hmmer.org/
   hmmbuild -h
   grep HMMER
  # HMMER 3.1b2 (February 2015); http://hmmer.org/
   muscle -version
   grep -i MUSCLE
  MUSCLE v3.8.1551 by Robert C. Edgar
   prank -help
   grep prank
  prank v.170427. Minimal usage: 'prank sequence_file'
  Advanced usage: 'prank [optional parameters] -d=sequence_file [optional parameters]'
   raxml -h
   grep -i raxml
  This is RAxML version 8.2.12 released by Alexandros Stamatakis on May 2018.
  Please also consult the RAxML-manual
  Please report bugs via the RAxML google group!
  raxmlHPC[-SSE3|-AVX|-PTHREADS|-PTHREADS-SSE3|-PTHREADS-AVX|-HYBRID|-HYBRID-SSE3|HYBRID-AVX]
        -A      Specify one of the secondary structure substitution models implemented in RAxML.
        -c      Specify number of distinct rate catgories for RAxML when model of rate heterogeneity
                "-f c": check if the alignment can be properly read by RAxML
                        in the two tree files. A file called RAxML_bipartitionFrequencies.outpuFileName
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
        -K      Specify one of the multi-state substitution models (max 32 states) implemented in RAxML.
                with RAxML using the -f e tree evaluation option. The file name should be:
                RAxML_binaryModelParameters.runID
        -w      FULL (!) path to the directory into which RAxML shall write its output files
                CAUTION: unlike in version 7.0.4 RAxML will conduct rapid BS replicates under
                RAxML will only do a randomized stepwise addition order parsimony tree reconstruction
        -y      If you want to only compute a parsimony starting tree with RAxML specify "-y",
        --flag-check When using this option, RAxML will only check if all command line flags specifed are available and then exit
                    RAxML will test all available prot subst. models except for LG4M, LG4X and GTR-based models, with and without empirical base frequencies.
        --print-identical-sequences specify that RAxML shall automatically generate a .reduced alignment with all
   grep -i raxml
   raxmlp -h
  This is RAxML version 8.2.12 released by Alexandros Stamatakis on May 2018.
  Please also consult the RAxML-manual
  Please report bugs via the RAxML google group!
  raxmlHPC[-SSE3|-AVX|-PTHREADS|-PTHREADS-SSE3|-PTHREADS-AVX|-HYBRID|-HYBRID-SSE3|HYBRID-AVX]
        -A      Specify one of the secondary structure substitution models implemented in RAxML.
        -c      Specify number of distinct rate catgories for RAxML when model of rate heterogeneity
                "-f c": check if the alignment can be properly read by RAxML
                        in the two tree files. A file called RAxML_bipartitionFrequencies.outpuFileName
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
   export PASTA_LOGGING_LEVEL=DEBUG
   PASTA_LOGGING_LEVEL=DEBUG
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
        -K      Specify one of the multi-state substitution models (max 32 states) implemented in RAxML.
   export PASTA_LOGGING_FORMAT=RICH
                with RAxML using the -f e tree evaluation option. The file name should be:
   PASTA_LOGGING_FORMAT=RICH
                RAxML_binaryModelParameters.runID
        -w      FULL (!) path to the directory into which RAxML shall write its output files
                CAUTION: unlike in version 7.0.4 RAxML will conduct rapid BS replicates under
                RAxML will only do a randomized stepwise addition order parsimony tree reconstruction
   run_pasta.py -i /opt/conda/conda-bld/pasta_1718122849359/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl/share/pasta/data/small.fasta
        -y      If you want to only compute a parsimony starting tree with RAxML specify "-y",
        --flag-check When using this option, RAxML will only check if all command line flags specifed are available and then exit
                    RAxML will test all available prot subst. models except for LG4M, LG4X and GTR-based models, with and without empirical base frequencies.
        --print-identical-sequences specify that RAxML shall automatically generate a .reduced alignment with all
  PASTA ERROR: PASTA is exiting because of an error:
  invalid mode: 'rU'
  PASTA INFO: Reading input sequences from '$PREFIX/share/pasta/data/small.fasta'...
  WARNING: Tests failed for pasta-1.9.0-py311hfad2c56_1.tar.bz2 - moving package to /opt/conda/conda-bld/broken
  TESTS FAILED: pasta-1.9.0-py311hfad2c56_1.tar.bz2
# Last 100 lines of the build log.
