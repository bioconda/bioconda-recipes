recipe_sha: 65e7d2e1e37f5d09b369b83c2b28d55d132f52dfa10e858233a874f106158aa3  # The hash of the recipe's meta.yaml at which this recipe failed to build.
skiplist: true # Set to true to skiplist this recipe so that it will be ignored as long as its latest commit is the one given above.
category: test failure
log: |2-
      libzlib:            1.3.1-h87427d6_1          conda-forge
      llvm-openmp:        18.1.7-h15ab845_0         conda-forge
      mafft:              7.526-hec52a4b_0          conda-forge
      mpfr:               4.2.1-h4f6b447_1          conda-forge
      muscle:             3.8.1551-hb280591_6       bioconda
      ncurses:            6.5-h5846eda_0            conda-forge
      openjdk:            22.0.1-h2d185b6_0         conda-forge
      openssl:            3.3.1-h87427d6_0          conda-forge
      pasta:              1.9.0-py311h29d3010_1     local
      pcre:               8.45-he49afe7_0           conda-forge
      prank:              170427-h85dcccf_0         bioconda
      pymongo:            4.7.3-py311hbafa61a_0     conda-forge
      python:             3.11.9-h657bba9_0_cpython conda-forge
      python_abi:         3.11-4_cp311              conda-forge
      raxml:              8.2.13-h2413b67_1         bioconda
      readline:           8.2-h9e318b2_1            conda-forge
      sniffio:            1.3.1-pyhd8ed1ab_0        conda-forge
      tk:                 8.6.13-h1abcd95_1         conda-forge
      tzdata:             2024a-h0c530f3_0          conda-forge
      xz:                 5.2.6-h775f41a_0          conda-forge

  Preparing transaction: ...working... done
  Verifying transaction: ...working... done
  Executing transaction: ...working... done
   clustalw2 -help
   grep OPTIONS
   hmmalign -h
   grep HMMER
   hmmbuild -h
   grep HMMER
   muscle -version
   grep -i MUSCLE
   prank -help
   grep prank
   raxml -h
   grep -i raxml
   raxmlp -h
   grep -i raxml
   export PASTA_LOGGING_LEVEL=DEBUG
   PASTA_LOGGING_LEVEL=DEBUG
   export PASTA_LOGGING_FORMAT=RICH
   PASTA_LOGGING_FORMAT=RICH
   run_pasta.py -i /opt/mambaforge/envs/bioconda/conda-bld/pasta_1718123761694/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/share/pasta/data/small.fasta
  PASTA ERROR: PASTA is exiting because of an error:
  invalid mode: 'rU'
  WARNING: Tests failed for pasta-1.9.0-py311h29d3010_1.tar.bz2 - moving package to /opt/mambaforge/envs/bioconda/conda-bld/broken
  TESTS FAILED: pasta-1.9.0-py311h29d3010_1.tar.bz2
  export PREFIX=/opt/mambaforge/envs/bioconda/conda-bld/pasta_1718123761694/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla
  export SRC_DIR=/opt/mambaforge/envs/bioconda/conda-bld/pasta_1718123761694/test_tmp
  import: 'pasta'
  import: 'pasta'
  -OPTIONS            :list the command line parameters
  # HMMER 3.1b2 (February 2015); http://hmmer.org/
  # HMMER 3.1b2 (February 2015); http://hmmer.org/
  MUSCLE v3.8.1551 by Robert C. Edgar
  prank v.170427. Minimal usage: 'prank sequence_file'
  Advanced usage: 'prank [optional parameters] -d=sequence_file [optional parameters]'
  This is RAxML version 8.2.12 released by Alexandros Stamatakis on May 2018.
  Please also consult the RAxML-manual
  Please report bugs via the RAxML google group!
  raxmlHPC[-SSE3|-AVX|-PTHREADS|-PTHREADS-SSE3|-PTHREADS-AVX|-HYBRID|-HYBRID-SSE3|HYBRID-AVX]
        -A      Specify one of the secondary structure substitution models implemented in RAxML.
        -c      Specify number of distinct rate catgories for RAxML when model of rate heterogeneity
                "-f c": check if the alignment can be properly read by RAxML
                        in the two tree files. A file called RAxML_bipartitionFrequencies.outpuFileName
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
        -K      Specify one of the multi-state substitution models (max 32 states) implemented in RAxML.
                with RAxML using the -f e tree evaluation option. The file name should be:
                RAxML_binaryModelParameters.runID
        -w      FULL (!) path to the directory into which RAxML shall write its output files
                CAUTION: unlike in version 7.0.4 RAxML will conduct rapid BS replicates under
                RAxML will only do a randomized stepwise addition order parsimony tree reconstruction
        -y      If you want to only compute a parsimony starting tree with RAxML specify "-y",
        --flag-check When using this option, RAxML will only check if all command line flags specifed are available and then exit
                    RAxML will test all available prot subst. models except for LG4M, LG4X and GTR-based models, with and without empirical base frequencies.
        --print-identical-sequences specify that RAxML shall automatically generate a .reduced alignment with all
  This is RAxML version 8.2.12 released by Alexandros Stamatakis on May 2018.
  Please also consult the RAxML-manual
  Please report bugs via the RAxML google group!
  raxmlHPC[-SSE3|-AVX|-PTHREADS|-PTHREADS-SSE3|-PTHREADS-AVX|-HYBRID|-HYBRID-SSE3|HYBRID-AVX]
        -A      Specify one of the secondary structure substitution models implemented in RAxML.
        -c      Specify number of distinct rate catgories for RAxML when model of rate heterogeneity
                "-f c": check if the alignment can be properly read by RAxML
                        in the two tree files. A file called RAxML_bipartitionFrequencies.outpuFileName
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
                        you will need to start RAxML with a non-comprehensive reference tree and an alignment containing all sequences (reference  query)
        -K      Specify one of the multi-state substitution models (max 32 states) implemented in RAxML.
                with RAxML using the -f e tree evaluation option. The file name should be:
                RAxML_binaryModelParameters.runID
        -w      FULL (!) path to the directory into which RAxML shall write its output files
                CAUTION: unlike in version 7.0.4 RAxML will conduct rapid BS replicates under
                RAxML will only do a randomized stepwise addition order parsimony tree reconstruction
        -y      If you want to only compute a parsimony starting tree with RAxML specify "-y",
        --flag-check When using this option, RAxML will only check if all command line flags specifed are available and then exit
                    RAxML will test all available prot subst. models except for LG4M, LG4X and GTR-based models, with and without empirical base frequencies.
        --print-identical-sequences specify that RAxML shall automatically generate a .reduced alignment with all
  PASTA INFO: Reading input sequences from '$PREFIX/share/pasta/data/small.fasta'...
# Last 100 lines of the build log.
