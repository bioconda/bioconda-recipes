diff --git a/asset.c b/asset.c
index abf1c45..5f2dd63 100644
--- a/asset.c
+++ b/asset.c
@@ -29,13 +29,22 @@
  *********************************************************************************/
 #include <string.h>
 #include <stdio.h>
+#include <stddef.h>
+#include <stdlib.h>
 #include <assert.h>
 #include <unistd.h>
 #include <sys/resource.h>
 #include <sys/time.h>
 
+#include <mach/mach.h>
+
 #include "asset.h"
 
+vm_statistics64_data_t  vm_stat, last;
+vm_size_t pageSize = 4096;  /* set to 4k default */
+
+void get_stats(vm_statistics64_t stat);
+
 double cputime(void)
 {
     struct rusage r;
@@ -61,6 +70,8 @@ double realtime(void)
     return tp.tv_sec + tp.tv_usec * 1e-6;
 }
 
+// OSX compatibility patch from https://bugs.freedesktop.org/attachment.cgi?id=115565 
+
 void ram_limit(long *total, long *avail)
 {
     long t, a, a1;
@@ -69,9 +80,16 @@ void ram_limit(long *total, long *avail)
     a = lim.rlim_cur;
     getrlimit(RLIMIT_AS, &lim);
     a = MAX(a, (long) lim.rlim_cur);
+#if defined(CTL_HW) && defined(HW_MEMSIZE)
+    get_stats(&vm_stat);
+    a = a1 = (long) m_stat.free_count * (long) pageSize;
+    t = (long) m_stat.free_count + (long) m_stat.active_count + (long) m_stat.inactive_count;
+    t *= (long) pageSize;
+#elif defined(_SC_AVPHYS_PAGES) && defined(_SC_PAGE_SIZE)
     a1 = (long) (sysconf(_SC_AVPHYS_PAGES) * sysconf(_SC_PAGESIZE));
     a = a > 0? MIN(a, a1) : a1;
     t = sysconf(_SC_PHYS_PAGES) * sysconf(_SC_PAGESIZE);
+#endif
     *avail = a;
     *total = t;
 }
