build:
  number: 0
  skip: True # [osx]

package:
  name: pypore
  version: "0.0.5.dev20160304220337"

source:
  fn: pypore-0.0.5.dev20160304220337.tar.gz
  url: https://pypi.python.org/packages/source/p/pypore/pypore-0.0.5.dev20160304220337.tar.gz
  md5: 173ebb6a8ca721630468ffd5940029fd
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pypore = pypore:main
    #
    # Would create an entry point called pypore that calls pypore.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy

  run:
    - python
    - numpy

test:
  # Python imports
  imports:
    - pypore
    - pypore.filetypes
    - pypore.filetypes.tests
    - pypore.i_o
    - pypore.i_o.tests
    - pypore.sampledata
    - pypore.sampledata.tests
    - pypore.strategies
    - pypore.strategies.tests
    - pypore.tests
    - pyporegui
    - pyporegui.graphicsItems
    - pyporegui.graphicsItems.tests
    - pyporegui.tests
    - pyporegui.widgets
    - pyporegui.widgets.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - nose
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://parkin.github.io/pypore/
  license: Apache License, Version 2.0
  summary: 'Pythonic/Cythonic Nanopore Translocation Analysis'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
