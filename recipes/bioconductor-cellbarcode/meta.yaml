{% set version = "1.8.0" %}
{% set name = "CellBarcode" %}
{% set bioc = "3.18" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name|lower }}/bioconductor-{{ name|lower }}_{{ version }}_src_all.tar.gz'
  md5: d219d9d5c998fda5f5c02f817361c56a
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  run_exports: '{{ pin_subpackage("bioconductor-cellbarcode", max_pin="x.x") }}'
# Suggests: BiocStyle, testthat (>= 3.0.0), knitr, rmarkdown
requirements:
  host:
    - 'bioconductor-biostrings >=2.70.0,<2.71.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-shortread >=1.60.0,<1.61.0'
    - 'bioconductor-zlibbioc >=1.48.0,<1.49.0'
    - r-base
    - r-bh
    - r-ckmeans.1d.dp
    - 'r-data.table >=1.12.6'
    - r-egg
    - r-ggplot2
    - r-magrittr
    - r-plyr
    - 'r-rcpp >=1.0.5'
    - r-seqinr
    - r-stringr
    - libblas
    - liblapack
  run:
    - 'bioconductor-biostrings >=2.70.0,<2.71.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-shortread >=1.60.0,<1.61.0'
    - 'bioconductor-zlibbioc >=1.48.0,<1.49.0'
    - r-base
    - r-bh
    - r-ckmeans.1d.dp
    - 'r-data.table >=1.12.6'
    - r-egg
    - r-ggplot2
    - r-magrittr
    - r-plyr
    - 'r-rcpp >=1.0.5'
    - r-seqinr
    - r-stringr
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'MIT + file LICENSE'
  summary: 'Cellular DNA Barcode Analysis toolkit'
  description: 'The package CellBarcode performs Cellular DNA Barcode analysis. It can handle all kinds of DNA barcodes, as long as the barcode is within a single sequencing read and has a pattern that can be matched by a regular expression. \code{CellBarcode} can handle barcodes with flexible lengths, with or without UMI (unique molecular identifier). This tool also can be used for pre-processing some amplicon data such as CRISPR gRNA screening, immune repertoire sequencing, and metagenome data.'
  license_file: LICENSE

