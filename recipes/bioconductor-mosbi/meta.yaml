{% set version = "1.6.0" %}
{% set name = "mosbi" %}
{% set bioc = "3.17" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name }}/bioconductor-{{ name }}_{{ version }}_src_all.tar.gz'
  md5: b333ac572e9c67bf00a326e4be6cec60
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
# Suggests: knitr, rmarkdown, BiocGenerics, runibic, BiocStyle, testthat (>= 3.0.0)
# SystemRequirements: C++17, GNU make
requirements:
  host:
    - 'bioconductor-fabia >=2.46.0,<2.47.0'
    - 'bioconductor-qubic >=1.28.0,<1.29.0'
    - r-akmbiclust
    - r-base
    - r-bh
    - r-biclust
    - r-igraph
    - r-isa2
    - r-rcolorbrewer
    - r-rcpp
    - r-rcppparallel
    - r-xml2
    - libblas
    - liblapack
  run:
    - 'bioconductor-fabia >=2.46.0,<2.47.0'
    - 'bioconductor-qubic >=1.28.0,<1.29.0'
    - r-akmbiclust
    - r-base
    - r-bh
    - r-biclust
    - r-igraph
    - r-isa2
    - r-rcolorbrewer
    - r-rcpp
    - r-rcppparallel
    - r-xml2
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'AGPL-3 + file LICENSE'
  summary: 'Molecular Signature identification using Biclustering'
  description: 'This package is a implementation of biclustering ensemble method MoSBi (Molecular signature Identification from Biclustering). MoSBi provides standardized interfaces for biclustering results and can combine their results with a multi-algorithm ensemble approach to compute robust ensemble biclusters on molecular omics data. This is done by computing similarity networks of biclusters and filtering for overlaps using a custom error model. After that, the louvain modularity it used to extract bicluster communities from the similarity network, which can then be converted to ensemble biclusters. Additionally, MoSBi includes several network visualization methods to give an intuitive and scalable overview of the results. MoSBi comes with several biclustering algorithms, but can be easily extended to new biclustering algorithms.'
  license_file: LICENSE

