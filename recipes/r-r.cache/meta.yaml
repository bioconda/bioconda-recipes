package:
  name: r-r.cache
  # Note that conda versions cannot contain -, so any -'s in the version have
  # been replaced with _'s.
  version: "0.12.0"

source:
  fn: R.cache_0.12.0.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/R.cache_0.12.0.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/R.cache/R.cache_0.12.0.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/


requirements:
  build:
    - r-base
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.19.0
    - r-r.utils >=2.1.0
    - r-digest >=0.6.8

  run:
    - r-base
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.19.0
    - r-r.utils >=2.1.0
    - r-digest >=0.6.8

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('R.cache')" # [not win]
    - "\"%R%\" -e \"library('R.cache')\"" # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: !!python/unicode 'https://github.com/HenrikBengtsson/R.cache'

  license: LGPL (>= 2.1)
  summary: !!python/unicode 'Memoization can be used to speed up repetitive and computational
    expensive function calls.  The first time a function that implements memoization
    is called the results are stored in a cache memory.  The next time the function
    is called with the same set of parameters, the results are momentarily retrieved
    from the cache avoiding repeating the calculations.  With this package, any R object
    can be cached in a key-value storage where the key can be an arbitrary set of R
    objects.  The cache memory is persistent (on the file system).'


# The original CRAN metadata for this package was:

# Package: R.cache
# Version: 0.12.0
# Depends: R (>= 2.5.0)
# Imports: utils, R.methodsS3 (>= 1.7.0), R.oo (>= 1.19.0), R.utils (>= 2.1.0), digest (>= 0.6.8)
# Date: 2015-11-12
# Title: Fast and Light-Weight Caching (Memoization) of Objects and Results to Speed Up Computations
# Authors@R: c(person("Henrik", "Bengtsson", role=c("aut", "cre", "cph"), email = "henrikb@braju.com"))
# Author: Henrik Bengtsson [aut, cre, cph]
# Maintainer: Henrik Bengtsson <henrikb@braju.com>
# Description: Memoization can be used to speed up repetitive and computational expensive function calls.  The first time a function that implements memoization is called the results are stored in a cache memory.  The next time the function is called with the same set of parameters, the results are momentarily retrieved from the cache avoiding repeating the calculations.  With this package, any R object can be cached in a key-value storage where the key can be an arbitrary set of R objects.  The cache memory is persistent (on the file system).
# License: LGPL (>= 2.1)
# LazyLoad: TRUE
# URL: https://github.com/HenrikBengtsson/R.cache
# BugReports: https://github.com/HenrikBengtsson/R.cache/issues
# NeedsCompilation: no
# Packaged: 2015-11-12 16:06:08 UTC; hb
# Repository: CRAN
# Date/Publication: 2015-11-12 19:00:04

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
