diff --git a/cifparse-obj-v7.0/src/DICParserBase.C b/cifparse-obj-v7.0/src/DICParserBase.C
index f731d85..5d1351f 100644
--- a/cifparse-obj-v7.0/src/DICParserBase.C
+++ b/cifparse-obj-v7.0/src/DICParserBase.C
@@ -30,64 +30,64 @@ not limited to, any and all claims alleging products liability.
 /*
                RCSB PDB SOFTWARE LICENSE AGREEMENT
 
-BY CLICKING THE ACCEPTANCE BUTTON OR INSTALLING OR USING 
-THIS "SOFTWARE, THE INDIVIDUAL OR ENTITY LICENSING THE  
-SOFTWARE ("LICENSEE") IS CONSENTING TO BE BOUND BY AND IS 
-BECOMING A PARTY TO THIS AGREEMENT.  IF LICENSEE DOES NOT 
+BY CLICKING THE ACCEPTANCE BUTTON OR INSTALLING OR USING
+THIS "SOFTWARE, THE INDIVIDUAL OR ENTITY LICENSING THE
+SOFTWARE ("LICENSEE") IS CONSENTING TO BE BOUND BY AND IS
+BECOMING A PARTY TO THIS AGREEMENT.  IF LICENSEE DOES NOT
 AGREE TO ALL OF THE TERMS OF THIS AGREEMENT
 THE LICENSEE MUST NOT INSTALL OR USE THE SOFTWARE.
 
 1. LICENSE AGREEMENT
 
-This is a license between you ("Licensee") and the Protein Data Bank (PDB) 
-at Rutgers, The State University of New Jersey (hereafter referred to 
-as "RUTGERS").   The software is owned by RUTGERS and protected by 
-copyright laws, and some elements are protected by laws governing 
-trademarks, trade dress and trade secrets, and may be protected by 
-patent laws. 
+This is a license between you ("Licensee") and the Protein Data Bank (PDB)
+at Rutgers, The State University of New Jersey (hereafter referred to
+as "RUTGERS").   The software is owned by RUTGERS and protected by
+copyright laws, and some elements are protected by laws governing
+trademarks, trade dress and trade secrets, and may be protected by
+patent laws.
 
 2. LICENSE GRANT
 
-RUTGERS grants you, and you hereby accept, non-exclusive, royalty-free 
-perpetual license to install, use, modify, prepare derivative works, 
-incorporate into other computer software, and distribute in binary 
-and source code format, or any derivative work thereof, together with 
-any associated media, printed materials, and on-line or electronic 
-documentation (if any) provided by RUTGERS (collectively, the "SOFTWARE"), 
-subject to the following terms and conditions: (i) any distribution 
-of the SOFTWARE shall bind the receiver to the terms and conditions 
-of this Agreement; (ii) any distribution of the SOFTWARE in modified 
-form shall clearly state that the SOFTWARE has been modified from 
-the version originally obtained from RUTGERS.  
-
-2. COPYRIGHT; RETENTION OF RIGHTS.  
-
-The above license grant is conditioned on the following: (i) you must 
-reproduce all copyright notices and other proprietary notices on any 
-copies of the SOFTWARE and you must not remove such notices; (ii) in 
-the event you compile the SOFTWARE, you will include the copyright 
-notice with the binary in such a manner as to allow it to be easily 
-viewable; (iii) if you incorporate the SOFTWARE into other code, you 
-must provide notice that the code contains the SOFTWARE and include 
-a copy of the copyright notices and other proprietary notices.  All 
-copies of the SOFTWARE shall be subject to the terms of this Agreement.  
-
-3. NO MAINTENANCE OR SUPPORT; TREATMENT OF ENHANCEMENTS 
-
-RUTGERS is under no obligation whatsoever to: (i) provide maintenance 
-or support for the SOFTWARE; or (ii) to notify you of bug fixes, patches, 
-or upgrades to the features, functionality or performance of the 
-SOFTWARE ("Enhancements") (if any), whether developed by RUTGERS 
-or third parties.  If, in its sole discretion, RUTGERS makes an 
-Enhancement available to you and RUTGERS does not separately enter 
-into a written license agreement with you relating to such bug fix, 
-patch or upgrade, then it shall be deemed incorporated into the SOFTWARE 
-and subject to this Agreement. You are under no obligation whatsoever 
-to provide any Enhancements to RUTGERS or the public that you may 
-develop over time; however, if you choose to provide your Enhancements 
-to RUTGERS, or if you choose to otherwise publish or distribute your 
-Enhancements, in source code form without contemporaneously requiring 
-end users or RUTGERS to enter into a separate written license agreement 
+RUTGERS grants you, and you hereby accept, non-exclusive, royalty-free
+perpetual license to install, use, modify, prepare derivative works,
+incorporate into other computer software, and distribute in binary
+and source code format, or any derivative work thereof, together with
+any associated media, printed materials, and on-line or electronic
+documentation (if any) provided by RUTGERS (collectively, the "SOFTWARE"),
+subject to the following terms and conditions: (i) any distribution
+of the SOFTWARE shall bind the receiver to the terms and conditions
+of this Agreement; (ii) any distribution of the SOFTWARE in modified
+form shall clearly state that the SOFTWARE has been modified from
+the version originally obtained from RUTGERS.
+
+2. COPYRIGHT; RETENTION OF RIGHTS.
+
+The above license grant is conditioned on the following: (i) you must
+reproduce all copyright notices and other proprietary notices on any
+copies of the SOFTWARE and you must not remove such notices; (ii) in
+the event you compile the SOFTWARE, you will include the copyright
+notice with the binary in such a manner as to allow it to be easily
+viewable; (iii) if you incorporate the SOFTWARE into other code, you
+must provide notice that the code contains the SOFTWARE and include
+a copy of the copyright notices and other proprietary notices.  All
+copies of the SOFTWARE shall be subject to the terms of this Agreement.
+
+3. NO MAINTENANCE OR SUPPORT; TREATMENT OF ENHANCEMENTS
+
+RUTGERS is under no obligation whatsoever to: (i) provide maintenance
+or support for the SOFTWARE; or (ii) to notify you of bug fixes, patches,
+or upgrades to the features, functionality or performance of the
+SOFTWARE ("Enhancements") (if any), whether developed by RUTGERS
+or third parties.  If, in its sole discretion, RUTGERS makes an
+Enhancement available to you and RUTGERS does not separately enter
+into a written license agreement with you relating to such bug fix,
+patch or upgrade, then it shall be deemed incorporated into the SOFTWARE
+and subject to this Agreement. You are under no obligation whatsoever
+to provide any Enhancements to RUTGERS or the public that you may
+develop over time; however, if you choose to provide your Enhancements
+to RUTGERS, or if you choose to otherwise publish or distribute your
+Enhancements, in source code form without contemporaneously requiring
+end users or RUTGERS to enter into a separate written license agreement
 for such Enhancements, then you hereby grant RUTGERS a non-exclusive,
 royalty-free perpetual license to install, use, modify, prepare
 derivative works, incorporate into the SOFTWARE or other computer
@@ -105,37 +105,37 @@ and conditions.  Upon termination, Licensee shall destroy all
 copies of the SOFTWARE.
 
 6. PROPRIETARY RIGHTS.  Title, ownership rights, and intellectual
-property rights in the Product shall remain with RUTGERS.  Licensee 
-acknowledges such ownership and intellectual property rights and will 
-not take any action to jeopardize, limit or interfere in any manner 
-with RUTGERS' ownership of or rights with respect to the SOFTWARE.  
-The SOFTWARE is protected by copyright and other intellectual 
-property laws and by international treaties.  Title and related 
-rights in the content accessed through the SOFTWARE is the property 
-of the applicable content owner and is protected by applicable law.  
+property rights in the Product shall remain with RUTGERS.  Licensee
+acknowledges such ownership and intellectual property rights and will
+not take any action to jeopardize, limit or interfere in any manner
+with RUTGERS' ownership of or rights with respect to the SOFTWARE.
+The SOFTWARE is protected by copyright and other intellectual
+property laws and by international treaties.  Title and related
+rights in the content accessed through the SOFTWARE is the property
+of the applicable content owner and is protected by applicable law.
 The license granted under this Agreement gives Licensee no rights to such
 content.
 
-7. DISCLAIMER OF WARRANTY.  THE SOFTWARE IS PROVIDED FREE OF 
-CHARGE, AND, THEREFORE, ON AN "AS IS" BASIS, WITHOUT WARRANTY OF 
-ANY KIND, INCLUDING WITHOUT LIMITATION THE WARRANTIES THAT IT 
-IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE 
-OR NON-INFRINGING.  THE ENTIRE RISK AS TO THE QUALITY AND 
-PERFORMANCE OF THE SOFTWARE IS BORNE BY LICENSEE.  SHOULD THE 
-SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, THE LICENSEE AND NOT 
-LICENSOR ASSUMES THE ENTIRE COST OF ANY SERVICE AND REPAIR.  
-THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF 
-THIS AGREEMENT.  NO USE OF THE PRODUCT IS AUTHORIZED HEREUNDER 
+7. DISCLAIMER OF WARRANTY.  THE SOFTWARE IS PROVIDED FREE OF
+CHARGE, AND, THEREFORE, ON AN "AS IS" BASIS, WITHOUT WARRANTY OF
+ANY KIND, INCLUDING WITHOUT LIMITATION THE WARRANTIES THAT IT
+IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE
+OR NON-INFRINGING.  THE ENTIRE RISK AS TO THE QUALITY AND
+PERFORMANCE OF THE SOFTWARE IS BORNE BY LICENSEE.  SHOULD THE
+SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, THE LICENSEE AND NOT
+LICENSOR ASSUMES THE ENTIRE COST OF ANY SERVICE AND REPAIR.
+THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF
+THIS AGREEMENT.  NO USE OF THE PRODUCT IS AUTHORIZED HEREUNDER
 EXCEPT UNDER THIS DISCLAIMER.
 
 8. LIMITATION OF LIABILITY.  TO THE MAXIMUM EXTENT PERMITTED BY
-APPLICABLE LAW,  IN NO EVENT WILL LICENSOR BE LIABLE FOR ANY 
-INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING 
-OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, INCLUDING, 
-WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK 
-STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL 
+APPLICABLE LAW,  IN NO EVENT WILL LICENSOR BE LIABLE FOR ANY
+INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, INCLUDING,
+WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK
+STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL
 OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF ADVISED OF THE
-POSSIBILITY THEREOF. 
+POSSIBILITY THEREOF.
 */
 
 
@@ -146,7 +146,7 @@ POSSIBILITY THEREOF.
 */
 
 
-/* 
+/*
   PURPOSE:    A DDL 2.1 compliant CIF file parser.
 */
 
@@ -692,7 +692,7 @@ void DICParser::ProcessValueList(void)
     _curValueNo = 0;
 
   }
-  
+
 }
 
 
@@ -838,7 +838,7 @@ void DICParser::ProcessItemValuePair(void)
    } else {
      _tbl->UpdateCell(_curRow-1, keywordName, CifString::UnknownValue);
    }
-  
+
     }
   }
   else {
@@ -890,14 +890,14 @@ void DICParser::ProcessItemValuePair(void)
     {
     if (_tbl->GetNumRows() == 0)
         _tbl->AddRow();
-    
+
     _tbl->UpdateCell(_tbl->GetNumRows() - 1, keywordName, _pBufValue);
     }
     else
     {
     if (_tbl->GetNumRows() == 0)
         _tbl->AddRow();
-    
+
     _tbl->UpdateCell(_tbl->GetNumRows() - 1, keywordName, CifString::InapplicableValue);
     }
   }
@@ -905,7 +905,7 @@ void DICParser::ProcessItemValuePair(void)
   {
     if (_tbl->GetNumRows() == 0)
         _tbl->AddRow();
-    
+
     _tbl->UpdateCell(_tbl->GetNumRows() - 1, keywordName, CifString::UnknownValue);
   }
 
@@ -926,7 +926,7 @@ void DICParser::ProcessLoopDeclarationSave(void)
 {
   string categoryName;
 
-  _curItemNoSave = 0;  _curValueNoSave = 0; 
+  _curItemNoSave = 0;  _curValueNoSave = 0;
   CifString::GetCategoryFromCifItem(categoryName, _tBufKeyword);
   if (categoryName.empty())
   {
@@ -946,7 +946,7 @@ void DICParser::ProcessLoopDeclarationSave(void)
       tablePresent = block.IsTablePresent(categoryName);
   }
 
-  if (tablePresent) { 
+  if (tablePresent) {
     log << "Duplicate category name in a save frame " << categoryName << " at line " << NDBlineNo << endl;
     errorLog += "Duplicate category name in a save frame ";
     errorLog += categoryName;
@@ -1111,7 +1111,7 @@ void DICParser::ProcessItemValuePairSave(void)
       Block& block = _saveobj->GetBlock(_curDataBlockNameSave);
       tablePresent = block.IsTablePresent(categoryName);
   }
-  
+
   if (tablePresent) { //  duplicates a persistent table?
     log << "Duplicate category name in a save frame " << categoryName << " at line " << NDBlineNo << endl;
     errorLog += "Duplicate category name in a save frame ";
@@ -1174,12 +1174,12 @@ void DICParser::ProcessItemValuePairSave(void)
   if (!_pBufValue.empty()) {
     if (_savetbl->GetNumRows() == 0)
         _savetbl->AddRow();
- 
+
     _savetbl->UpdateCell(_savetbl->GetNumRows() - 1, keywordName, _pBufValue);
 
     if (_tBufKeyword == "_category.id")
         if (_pBufValue != _curDataBlockNameSave)
-            log << "ERROR - In save frame \"save_" << _curDataBlockNameSave << 
+            log << "ERROR - In save frame \"save_" << _curDataBlockNameSave <<
               "\", \"_catgory.id\" has value \"" << _pBufValue <<
               "\" at line " << NDBlineNo << endl;
     } else
@@ -1348,7 +1348,7 @@ void  DICParser::CheckDDL(void)
           if (!_tbl->IsColumnPresent(keywordName))
               _tbl->AddColumn(keywordName);
         }
-        
+
         for (int i=numRows; i>0; i--)
         {
             _tbl->UpdateCell(numRows2-i, keywordName, elem);
@@ -1420,7 +1420,7 @@ void  DICParser::CheckDDL(void)
           if (!_tbl->IsColumnPresent(keywordName))
               _tbl->AddColumn(keywordName);
         }
-        
+
         for (int i=numRows; i>0; i--)
         {
             _tbl->UpdateCell(numRows2-i, keywordName, elem);
@@ -1528,7 +1528,7 @@ void DICParser::ProcessSaveEnd(void)
       delete _savetbl;
       _savetbl = NULL;
   }
-  _pBufValue = Glob_pBufValueDIC; 
+  _pBufValue = Glob_pBufValueDIC;
 }
 
 void DICParser::ProcessDataBlockName(void)
@@ -1536,7 +1536,7 @@ void DICParser::ProcessDataBlockName(void)
   _numDataBlocks++;
   _nTablesInBlock=0;
 
-  if (&(Glob_dataBlockNameDIC)[5] && (strlen(&(Glob_dataBlockNameDIC)[5])>0)) {
+  if (Glob_dataBlockNameDIC != NULL && strlen(Glob_dataBlockNameDIC) > 5) {
     _curDataBlockName = &(Glob_dataBlockNameDIC)[5];
     _fobj->AddBlock(_curDataBlockName);
   } else {
@@ -1676,7 +1676,7 @@ void DICParser::InsertImplicitOrdinalItems()
         const string& itemName = (*itemTableP)(foundIndices[foundI], "name");
 
         string attrName;
-        CifString::GetItemFromCifItem(attrName, itemName); 
+        CifString::GetItemFromCifItem(attrName, itemName);
 
         if (!catTableP->IsColumnPresent(attrName))
         {
