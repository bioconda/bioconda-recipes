package:
  name: bioconductor-sscu
  version: 2.6.0
source:
  fn: sscu_2.6.0.tar.gz
  url:
    - http://bioconductor.org/packages/3.5/bioc/src/contrib/sscu_2.6.0.tar.gz
    - https://bioarchive.galaxyproject.org/sscu_2.6.0.tar.gz
    - https://depot.galaxyproject.org/software/sscu/sscu_2.6.0_src_all.tar.gz
  md5: 7bdf279b3cfb60538d13df4e4fa25eb2
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
requirements:
  build:
    - 'bioconductor-biocgenerics >=0.16.1'
    - 'bioconductor-biostrings >=2.36.4'
    - r-base
    - 'r-seqinr >=3.1-3'
  run:
    - 'bioconductor-biocgenerics >=0.16.1'
    - 'bioconductor-biostrings >=2.36.4'
    - r-base
    - 'r-seqinr >=3.1-3'
test:
  commands:
    - '$R -e "library(''sscu'')"'
about:
  home: http://bioconductor.org/packages/3.5/bioc/html/sscu.html
  license: 'GPL (>= 2)'
  summary: 'The package calculates the indexes for selective stength in codon usage
    in bacteria species. (1) The package can calculate the strength of selected codon
    usage bias (sscu, also named as s_index) based on Paul Sharp''s method. The method
    take into account of background mutation rate, and focus only on four pairs of
    codons with universal translational advantages in all bacterial species. Thus
    the sscu index is comparable among different species. (2) The package can detect
    the strength of translational accuracy selection by Akashi''s test. The test tabulating
    all codons into four categories with the feature as conserved/variable amino acids
    and optimal/non-optimal codons. (3) Optimal codon lists (selected codons) can
    be calculated by either op_highly function (by using the highly expressed genes
    compared with all genes to identify optimal codons), or op_corre_CodonW/op_corre_NCprime
    function (by correlative method developed by Hershberg & Petrov). Users will have
    a list of optimal codons for further analysis, such as input to the Akashi''s
    test. (4) The detailed codon usage information, such as RSCU value, number of
    optimal codons in the highly/all gene set, as well as the genomic gc3 value, can
    be calculate by the optimal_codon_statistics and genomic_gc3 function. (5) Furthermore,
    we added one test function low_frequency_op in the package. The function try to
    find the low frequency optimal codons, among all the optimal codons identified
    by the op_highly function.'
