diff --git a/src/shorah/b2w.cpp b/src/shorah/b2w.cpp
index be21bab..21d1b92 100644
--- src/shorah/b2w.cpp
+++ src/shorah/b2w.cpp
@@ -178,7 +178,7 @@ int main(int argc, char* argv[])
                 break;
             case 'h':
                 fprintf(stderr, "%s", help_string);
-                return 1;
+                return 0;
         }
     }
     if (argc < 11 || argc > 12) {
diff --git a/src/shorah/contain.cpp b/src/shorah/contain.cpp
index c6efdfb..20e292c 100644
--- src/shorah/contain.cpp
+++ src/shorah/contain.cpp
@@ -46,11 +46,11 @@ struct Read
     std::string seq;
 };
 
-void help(void)
+void help(const int status = 1)
 {
     std::cout << "Usage: contain -f basename\n";
     std::cout << "Expects basename.read, outputs basename.rest\n";
-    exit(1);
+    exit(status);
 }
 
 void getReads(std::istream& infile, std::vector<Read>& ans)
@@ -154,7 +154,7 @@ int main(int argc, char** argv)
                 help();
                 break;
             case 'h':
-                help();
+                help(0);
                 break;
             default:
                 help();
diff --git a/src/shorah/dpm_sampler.cpp b/src/shorah/dpm_sampler.cpp
index 383cdc5..d0c47e4 100644
--- src/shorah/dpm_sampler.cpp
+++ src/shorah/dpm_sampler.cpp
@@ -2156,7 +2156,7 @@ int parsecommandline(int argc, char** argv)
 
     char c;
     while ((c = getopt(argc, argv, "i:j:a:t:o:m:K:k:R:c:Hh")) != -1) {
-
+        int err_status = -1;
         switch (c) {
             case 'i':
                 filein = optarg;
@@ -2189,6 +2189,8 @@ int parsecommandline(int argc, char** argv)
             case 'R':
                 randseed = atoi(optarg);
                 break;
+            case 'h':
+                err_status = 0;
             default:
                 fprintf(stdout,
                         "%s [options]\n"
@@ -2205,7 +2207,7 @@ int parsecommandline(int argc, char** argv)
                         "-----------------------------------------------------\n"
                         "\t-h\t\t this help!\n",
                         argv[0]);
-                exit(-1);
+                exit(err_status);
         }
     }
     if (HISTORY > iter) HISTORY = iter;
diff --git a/src/shorah/freqEst.cpp b/src/shorah/freqEst.cpp
index 71d540e..c8ebabf 100644
--- src/shorah/freqEst.cpp
+++ src/shorah/freqEst.cpp
@@ -391,12 +391,12 @@ double EM(std::vector<double>& newP, std::vector<std::vector<double> > const& Z,
     }
     return newEll;
 }
-void help(void)
+void help(const int status = 1)
 {
     std::cout << "Usage: freqEst -f basename [-p precision -i maxiter -r runs -h -k kill -?]\n";
     std::cout << "Expects basename.read and basename.geno\n";
     std::cout << "Outputs to basename.popl\n";
-    exit(1);
+    exit(status);
 }
 
 int main(int argc, char** argv)
@@ -439,7 +439,7 @@ int main(int argc, char** argv)
                 help();
                 break;
             case 'h':
-                help();
+                help(0);
                 break;
             default:
                 help();
