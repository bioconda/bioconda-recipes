--- maker_mpi_init	1970-01-01 01:00:00.000000000 +0100
+++ maker_mpi_init	2018-09-20 17:01:25.041188751 +0200
@@ -0,0 +1,18 @@
+#!/usr/bin/env perl
+
+use FindBin;
+use lib "$FindBin::RealBin/../src/inc/perl/lib"; #micelaneous
+use lib "$FindBin::RealBin/../lib";
+use lib "$FindBin::RealBin/../perl/lib";
+
+
+#now load everyting else
+use strict "vars";
+use strict "refs";
+use Carp;
+use Parallel::Application::MPI qw(:all);
+
+#--Start MPI
+carp "Calling MPI_Init";
+MPI_Init();
+
--- src/bin/maker
+++ src/bin/maker
@@ -198,6 +198,11 @@ Options:
      -cpus|c  <integer>  Tells how many cpus to use for BLAST analysis.
                          Note: this is for BLAST and not for MPI!
 
+     -mpi                Forces MAKER to use MPI (overriding MPI autodetection).
+                         Useful if MAKER doesn't correctly detect that it was
+                         launched using an MPI process manager, or if running
+                         in a Singularity container.
+
      -force|f            Forces MAKER to delete old files before running again.
 			 This will require all blast analyses to be rerun.
 
@@ -247,7 +252,8 @@ my %OPT;
 carp "Calling GetOptions pre-init" if($main::debug);
 Getopt::Long::Configure(qw(pass_through));
 GetOptions("MPICC=s" => \$OPT{MPICC}, #hidden
-	   "MPIDIR=s" => \$OPT{MPIDIR},); #hidden
+	   "MPIDIR=s" => \$OPT{MPIDIR},   #hidden
+	   "mpi" => \$main::mpi);
 
 #--set MPI configuration if specified on the command line
 if($OPT{MPICC} || $OPT{MPIDIR}){
--- src/lib/Parallel/Application/MPI.pm
+++ src/lib/Parallel/Application/MPI.pm
@@ -165,7 +165,7 @@ sub _load {
     require Proc::Signal;
 
     my $name = Proc::Signal::get_pname_by_id($$);
-    if($name =~ /(mpiexec|mpirun|mpdrun|mpdexec|mpd|smpd|orted|orterun|pmi_proxy|hydra|mpispawn|exec\d+)$/){
+    if($main::mpi or $name =~ /(mpiexec|mpirun|mpdrun|mpdexec|mpd|smpd|orted|orterun|pmi_proxy|hydra|mpispawn|exec\d+)$/){
 	require MAKER::ConfigData;
 	my $mpi_support = MAKER::ConfigData->feature('mpi_support');
 	if(! $mpi_support){
@@ -232,7 +232,9 @@ sub _bind {
 
     eval{
 	#this comment is just a way to force Inline::C to recompile on changing MPICC and MPIDIR
-	my $comment = "void _comment() {\nchar comment[] = \"MPICC=$mpicc, MPIDIR=$mpidir, CCFLAGSEX=$extra\";\n}\n"; 
+	# Commented for bioconda as 1) MPI directories will be different after installation 2) we're sure we don't want to rebuild it anyway
+	#my $comment = "void _comment() {\nchar comment[] = \"MPICC=$mpicc, MPIDIR=$mpidir, CCFLAGSEX=$extra\";\n}\n";
+    my $comment = "";
 	Inline->bind(C => $CODE . $comment,
 		     NAME => 'Parallel::Application::MPI',
 		     DIRECTORY => $loc,
