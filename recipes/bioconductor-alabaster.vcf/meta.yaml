{% set version = "1.2.0" %}
{% set name = "alabaster.vcf" %}
{% set bioc = "3.18" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name }}/bioconductor-{{ name }}_{{ version }}_src_all.tar.gz'
  md5: e0873ba68051843f6a35b01fef673423
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  run_exports: '{{ pin_subpackage("bioconductor-alabaster.vcf", max_pin="x.x") }}'
  noarch: generic
# Suggests: knitr, rmarkdown, BiocStyle, testthat
requirements:
  host:
    - 'bioconductor-alabaster.base >=1.2.0,<1.3.0'
    - 'bioconductor-alabaster.se >=1.2.0,<1.3.0'
    - 'bioconductor-alabaster.string >=1.2.0,<1.3.0'
    - 'bioconductor-rsamtools >=2.18.0,<2.19.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-variantannotation >=1.48.0,<1.49.0'
    - r-base
  run:
    - 'bioconductor-alabaster.base >=1.2.0,<1.3.0'
    - 'bioconductor-alabaster.se >=1.2.0,<1.3.0'
    - 'bioconductor-alabaster.string >=1.2.0,<1.3.0'
    - 'bioconductor-rsamtools >=2.18.0,<2.19.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-variantannotation >=1.48.0,<1.49.0'
    - r-base
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'MIT + file LICENSE'
  summary: 'Save and Load Variant Data to/from File'
  description: 'Save variant calling SummarizedExperiment to file and load them back as VCF objects. This is a more portable alternative to serialization of such objects into RDS files. Each artifact is associated with metadata for further interpretation; downstream applications can enrich this metadata with context-specific properties.'
  license_file: LICENSE

