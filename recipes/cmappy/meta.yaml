package:
  name: cmappy
  version: "1.0.1"

source:
  fn: cmapPy-1.0.1.tar.gz
  url: https://pypi.python.org/packages/42/e3/3c6d2ad66f0c2b48e08c5f4b031f52f8f3a72cbc7499bfda807ec1da8082/cmapPy-1.0.1.tar.gz
  md5: f8cfcc4f70a49ab76e8f40e1eb80f753
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cmappy = cmappy:main
    #
    # Would create an entry point called cmappy that calls cmappy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.11.2
    - pandas >=0.18
    - h5py >=2.6.0
    - requests >=2.13.0

  run:
    - python
    - numpy >=1.11.2
    - pandas >=0.18
    - h5py >=2.6.0
    - requests >=2.13.0

test:
  # Python imports
  imports:
    - cmapPy
    - cmapPy.clue_api_client
    - cmapPy.pandasGEXpress

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - unittest
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/cmap/cmapPy
  license: MIT License
  summary: 'Assorted tools for interacting with .gct, .gctx files and other Connectivity Map (Broad Institute) data/tools'
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
