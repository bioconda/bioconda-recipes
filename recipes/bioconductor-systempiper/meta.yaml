{% set version = "2.12.0" %}
{% set name = "systemPipeR" %}
{% set bioc = "3.20" %}

about:
  description: systemPipeR is a multipurpose data analysis workflow environment that unifies R with command-line tools. It enables scientists to analyze many types of large- or small-scale data on local or distributed computer systems with a high level of reproducibility, scalability and portability. At its core is a command-line interface (CLI) that adopts the Common Workflow Language (CWL). This design allows users to choose for each analysis step the optimal R or command-line software. It supports both end-to-end and partial execution of workflows with built-in restart functionalities. Efficient management of complex analysis tasks is accomplished by a flexible workflow control container class. Handling of large numbers of input samples and experimental designs is facilitated by consistent sample annotation mechanisms. As a multi-purpose workflow toolkit, systemPipeR enables users to run existing workflows, customize them or design entirely new ones while taking advantage of widely adopted data structures within the Bioconductor ecosystem. Another important core functionality is the generation of reproducible scientific analysis and technical reports. For result interpretation, systemPipeR offers a wide range of plotting functionality, while an associated Shiny App offers many useful functionalities for interactive result exploration. The vignettes linked from this page include (1) a general introduction, (2) a description of technical details, and (3) a collection of workflow templates.
  home: https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html
  license: Artistic-2.0
  summary: 'systemPipeR: Workflow Environment for Data Analysis and Report Generation'

build:
  noarch: generic
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  run_exports: '{{ pin_subpackage("bioconductor-systempiper", max_pin="x.x") }}'

extra:
  identifiers:
    - biotools:systempiper
  parent_recipe:
    name: bioconductor-systempiper
    path: recipes/bioconductor-systempiper
    version: 1.14.0

package:
  name: bioconductor-{{ name|lower }}
  version: '{{ version }}'

# Suggests: BiocStyle, knitr, rmarkdown, systemPipeRdata, GenomicAlignments, grid, dplyr, testthat, rjson, annotate, AnnotationDbi, kableExtra, GO.db, GenomeInfoDb, DT, rtracklayer, limma, edgeR, DESeq2, IRanges, batchtools, GenomicFeatures, txdbmaker, VariantAnnotation (>= 1.25.11)
# SystemRequirements: systemPipeR can be used to run external command-line software (e.g. short read aligners), but the corresponding tool needs to be installed on a system.
requirements:
  host:
    - bioconductor-biocgenerics >=0.52.0,<0.53.0
    - bioconductor-biostrings >=2.74.0,<2.75.0
    - bioconductor-genomicranges >=1.58.0,<1.59.0
    - bioconductor-rsamtools >=2.22.0,<2.23.0
    - bioconductor-s4vectors >=0.44.0,<0.45.0
    - bioconductor-shortread >=1.64.0,<1.65.0
    - bioconductor-summarizedexperiment >=1.36.0,<1.37.0
    - r-base
    - r-crayon
    - r-ggplot2
    - r-htmlwidgets
    - r-magrittr
    - r-stringr
    - r-yaml
  run:
    - bioconductor-biocgenerics >=0.52.0,<0.53.0
    - bioconductor-biostrings >=2.74.0,<2.75.0
    - bioconductor-genomicranges >=1.58.0,<1.59.0
    - bioconductor-rsamtools >=2.22.0,<2.23.0
    - bioconductor-s4vectors >=0.44.0,<0.45.0
    - bioconductor-shortread >=1.64.0,<1.65.0
    - bioconductor-summarizedexperiment >=1.36.0,<1.37.0
    - r-base
    - r-crayon
    - r-ggplot2
    - r-htmlwidgets
    - r-magrittr
    - r-stringr
    - r-yaml

source:
  md5: cc9cef185e84097abc4a6bb73036a50d
  url:
    - https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz
    - https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz
    - https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz
    - https://depot.galaxyproject.org/software/bioconductor-{{ name|lower }}/bioconductor-{{ name|lower }}_{{ version }}_src_all.tar.gz

test:
  commands:
    - $R -e "library('{{ name }}')"

