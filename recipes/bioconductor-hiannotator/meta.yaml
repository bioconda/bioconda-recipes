{% set version = "1.22.0" %}
{% set name = "hiAnnotator" %}
{% set bioc = "3.11" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name|lower }}/bioconductor-{{ name|lower }}_{{ version }}_src_all.tar.gz'
  md5: 33b877c4d0c92e3c926b96a20ec9c511
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  noarch: generic
# Suggests: knitr, doParallel, testthat, BiocGenerics
requirements:
  host:
    - 'bioconductor-bsgenome >=1.56.0,<1.57.0'
    - 'bioconductor-genomicranges >=1.40.0,<1.41.0'
    - 'bioconductor-rtracklayer >=1.48.0,<1.49.0'
    - r-base
    - r-dplyr
    - r-foreach
    - r-ggplot2
    - r-iterators
    - r-scales
  run:
    - 'bioconductor-bsgenome >=1.56.0,<1.57.0'
    - 'bioconductor-genomicranges >=1.40.0,<1.41.0'
    - 'bioconductor-rtracklayer >=1.48.0,<1.49.0'
    - r-base
    - r-dplyr
    - r-foreach
    - r-ggplot2
    - r-iterators
    - r-scales
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'GPL (>= 2)'
  summary: 'Functions for annotating GRanges objects'
  description: 'hiAnnotator contains set of functions which allow users to annotate a GRanges object with custom set of annotations. The basic philosophy of this package is to take two GRanges objects (query & subject) with common set of seqnames (i.e. chromosomes) and return associated annotation per seqnames and rows from the query matching seqnames and rows from the subject (i.e. genes or cpg islands). The package comes with three types of annotation functions which calculates if a position from query is: within a feature, near a feature, or count features in defined window sizes. Moreover, each function is equipped with parallel backend to utilize the foreach package. In addition, the package is equipped with wrapper functions, which finds appropriate columns needed to make a GRanges object from a common data frame.'
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
extra:
  identifiers:
    - biotools:hiannotator
    - doi:10.1038/nmeth.3252
  parent_recipe:
    name: bioconductor-hiannotator
    path: recipes/bioconductor-hiannotator
    version: 1.14.0

