package:
  name: samsifter
  version: "1.0.0"

source:
  fn: SamSifter-1.0.0.tar.gz
  url: https://pypi.python.org/packages/source/S/SamSifter/SamSifter-1.0.0.tar.gz
  md5: 883df68d2f989c4c431ebb253ca104f7
#  patches:
   # List any patch files here
   # - fix.patch

build:
  skip: True # [py27]
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - samsifter = samsifter:main
    #
    # Would create an entry point called samsifter that calls samsifter.main()

    - compile_stats=samsifter.stats.compile_stats:main
    - count_taxon_reads=samsifter.tools.count_taxon_reads:main
    - filter_read_conservation=samsifter.tools.filter_read_conservation:main
    - filter_read_list=samsifter.tools.filter_read_list:main
    - filter_ref_coverage=samsifter.tools.filter_ref_coverage:main
    - filter_ref_identity=samsifter.tools.filter_ref_identity:main
    - filter_ref_list=samsifter.tools.filter_ref_list:main
    - filter_ref_pmds=samsifter.tools.filter_ref_pmds:main
    - filter_taxon_list=samsifter.tools.filter_taxon_list:main
    - filter_taxon_pmds=samsifter.tools.filter_taxon_pmds:main
    - pmdtools_mod=pmdtools.pmdtools_mod:main
    - summarize_stats=samsifter.stats.summarize_stats:main
    - samsifter=samsifter.samsifter:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - matplotlib >=1.3.1
    - pandas >=0.14.1
    - numpy >=1.6.1

  run:
    - python
    - matplotlib >=1.3.1
    - pandas >=0.14.1
    - numpy >=1.6.1

test:
  # Python imports
  imports:
    - pmdtools
    - samsifter
    - samsifter.gui
    - samsifter.models
    - samsifter.resources
    - samsifter.stats
    - samsifter.tools
    - samsifter.util
    - samsifter.views

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - compile_stats --help
    - count_taxon_reads --help
    - filter_read_conservation --help
    - filter_read_list --help
    - filter_ref_coverage --help
    - filter_ref_identity --help
    - filter_ref_list --help
    - filter_ref_pmds --help
    - filter_taxon_list --help
    - filter_taxon_pmds --help
    - pmdtools_mod --help
    - summarize_stats --help
    - samsifter --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/SamSifter/
  license: GNU General Public License v3 (GPLv3)
  summary: 'Workflow editor for metagenomic analysis'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
