--- a/setup.py
+++ b/setup.py
@@ -7,10 +7,6 @@ import platform
 import pkg_resources
 from setuptools import setup, Extension
 
-if sys.version_info.major == 2 and sys.version_info.minor != 7:
-    sys.stderr.write("ERROR: cyvcf2 is only for python 2.7 or greater you are running %d.%d\n", (sys.version_info.major, sys.version_info.minor))
-    sys.exit(1)
-
 import numpy as np
 
 
@@ -42,18 +38,8 @@ def no_cythonize(extensions, **_ignore):
     return extensions
 
 
-# Build the Cython extension by statically linking to the bundled htslib
-sources = [
-    x for x in glob.glob('htslib/*.c')
-    if not any(e in x for e in ['irods', 'plugin'])
-]
-sources += glob.glob('htslib/cram/*.c')
-sources += glob.glob('htslib/htscodecs/htscodecs/*.c')
-# Exclude the htslib sources containing main()'s
-sources = [x for x in sources if not x.endswith(('htsfile.c', 'tabix.c', 'bgzip.c'))]
-sources.append('cyvcf2/helpers.c')
-
-extra_libs = []
+sources = ['cyvcf2/helpers.c']
+extra_libs = ['hts']
 if platform.system() != 'Darwin':
     extra_libs.append('crypt')
 if bool(int(os.getenv("LIBDEFLATE", 0))):
@@ -65,7 +51,7 @@ extensions = [Extension("cyvcf2.cyvcf2",
                         extra_compile_args=["-Wno-sign-compare", "-Wno-unused-function",
                             "-Wno-strict-prototypes",
                             "-Wno-unused-result", "-Wno-discarded-qualifiers"],
-                        include_dirs=['htslib', 'cyvcf2', np.get_include()])]
+                        include_dirs=['cyvcf2', np.get_include()])]
 
 
 CYTHONIZE = bool(int(os.getenv("CYTHONIZE", 0)))
