# !! THIS FILE WAS AUTOMATICALLY GENERATED BY THE SBT-BIOCONDA PLUGIN !!
# !!                       DO NOT EDIT MANUALLY                       !!

package:
  name: biopet-fastqsplitter
  version: '0.1'
source:
  url: https://github.com/biopet/fastqsplitter/releases/download/v0.1/FastqSplitter-assembly-0.1.jar
  sha256: 72328c7693e05c8d5519fb14f43b3e82128f00b9c49080146281e596c43e8666
build:
  noarch: generic
  number: 2
requirements:
  run:
  - openjdk >=8,<9
  - python
about:
  home: https://github.com/biopet/fastq-splitter
  license: MIT
  summary: This tool divides a fastq file into smaller fastq files, based on the number of output files specified.
  description: |-
    This tool divides a fastq file into smaller fastq files, based on the number of output files specified. For ecample,
    if one specifies 5 output files, it will split the fastq into 5 files of equal size. This can be very useful if one
    wants to use the chunking option in a pipeline: FastqSplitter can generate the exact number of fastq files
    (chunks) as needed.

    FastqSplitter will read groups of reads (100 reads per group)
    and distribute this evenly over the output FASTQ
    files. FastqSplitter will iterate over all the output files while writing the
    read groups.

    Example:
    A fastq file is split with a group size of 100 and three output files.
    read 1-100 will be assigned to output1
    read 101-200 will be assigned to output2
    read 201-300 will be assigned to output3
    read 301-400 will be assigned to output1
    read 401-500 will be assigned to output2
    etc.

    This will make sure the output fastq files are of equal size and there is no positional bias in each
    output file.

    For documentation and manuals visit our github.io page: https://biopet.github.io/fastq-splitter
test:
  commands:
  - biopet-fastqsplitter --version
  - biopet-fastqsplitter --help
extra:
  notes: 'biopet-fastqsplitter is a Java program that comes with a custom wrapper
    shell script. By default ''no default java option'' is set in the wrapper. The
    command that runs the program is ''biopet-fastqsplitter''. If you want to overwrite
    it you can specify memory options directly after your binaries. If you have _JAVA_OPTIONS
    set globally this will take precedence. For example run it with ''biopet-fastqsplitter
    -Xms512m -Xmx1g''. '

