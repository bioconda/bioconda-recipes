diff --git a/Bio/DB/Fasta.pm b/Bio/DB/Fasta.pm
index e150d20dc..3731b0191 100644
--- a/Bio/DB/Fasta.pm
+++ b/Bio/DB/Fasta.pm
@@ -292,7 +292,7 @@ sub subseq {
     seek($fh, $filestart,0);
     read($fh, $data, $filestop-$filestart+1);
 
-    $data = Bio::DB::IndexedBase::_strip_crnl($data);
+    $data =~ tr/\n\r//d; #strip control characters
 
     if ($strand == -1) {
         # Reverse-complement the sequence
@@ -334,7 +334,7 @@ sub header {
     read($fh, $data, $headerlen);
     # On Windows chomp remove '\n' but leaves '\r'
     # when reading '\r\n' in binary mode
-    $data = Bio::DB::IndexedBase::_strip_crnl($data);
+    $data =~ tr/\n\r//d; #strip control characters
     substr($data, 0, 1) = '';
     return $data;
 }
diff --git a/Bio/DB/IndexedBase.pm b/Bio/DB/IndexedBase.pm
index 88aea4a1e..14f20175d 100644
--- a/Bio/DB/IndexedBase.pm
+++ b/Bio/DB/IndexedBase.pm
@@ -267,46 +267,6 @@ use constant PROTEIN   => 3;
 # You can avoid dying if you want but you may get incorrect results
 use constant DIE_ON_MISSMATCHED_LINES => 1;
 
-# Remove carriage returns (\r) and newlines (\n) from a string.  When
-# called from subseq, this can take a signficiant portion of time, in
-# Variant Effect Prediction. Therefore we compile the match portion.
-sub _strip_crnl {
-    eval 'require Inline::C';
-    if ( $INC{'Inline/C.pm'} ) {
-        # C can do _strip_crnl much faster. But this requires the
-        # Inline::C module which we don't require people to have. So we make
-        # this optional by wrapping the C code in an eval. If the eval works,
-        # the Perl strip_crnl() function is overwritten.
-        Inline->bind(
-            C => q(
-        /*
-        Strip all newlines (\n) and carriage returns (\r) from the string
-        */
-        char* _strip_crnl(char* str) {
-          char *s;
-          char *s2 = str;
-          for (s = str; *s; *s++) {
-            if (*s != '\n' && *s != '\r') {
-              *s2++ = *s;
-            }
-          }
-          *s2 = '\0';
-          return str;
-        }
-        )
-        );
-    } else {
-        # "tr" is much faster than the regex, with "s"
-        *Bio::DB::IndexedBase::_strip_crnl = sub {
-            my $str = shift;
-            $str =~ tr/\n\r//d;
-            return $str;
-        };
-    }
-
-    return _strip_crnl(@_);
-}
-
 =head2 new
 
  Title   : new
diff --git a/Bio/DB/Qual.pm b/Bio/DB/Qual.pm
index 729d7bc68..adc6abd46 100644
--- a/Bio/DB/Qual.pm
+++ b/Bio/DB/Qual.pm
@@ -335,7 +335,7 @@ sub subqual {
     read($fh, $data, $filestop-$filestart+1);
 
     # Process quality score
-    Bio::DB::IndexedBase::_strip_crnl($data);
+    $data =~ tr/\n\r//d; #strip control characters
     my $subqual = 0;
     $subqual = 1 if ( $start || $stop );
     my @data;
@@ -379,8 +379,7 @@ sub header {
     read($fh, $data, $headerlen);
     # On Windows chomp remove '\n' but leaves '\r'
     # when reading '\r\n' in binary mode,
-    # _strip_crnl removes both
-    $data = Bio::DB::IndexedBase::_strip_crnl($data);
+    $data =~ tr/\n\r//d; #strip control characters
     substr($data, 0, 1) = '';
     return $data;
 }
