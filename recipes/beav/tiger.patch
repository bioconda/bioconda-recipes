--- TIGER-TIGER2.1/bin/ice.pl
+++ TIGER-TIGER2.1/bin/ice.pl
@@ -13,7 +13,7 @@ $file = File::Spec->rel2abs($file);
 die unless $file =~ /([^\/]+)\/([^\/]+)$/; ($name, $nick) = ($1, $2); $name =~ s/\.x//; $nick =~ s/\.fa//;
 
 mkdir 'protein';
-system "$dir/hmmsearch --domtbl protein/${name}_ICE.domtbl $dir/../db/ICE.hmm $file &> /dev/null";
+system "hmmsearch --domtbl protein/${name}_ICE.domtbl $dir/../db/ICE.hmm $file &> /dev/null";
 system "perl $dir/tater.pl -extraDoms protein/${name}_ICE.domtbl $file" unless -f "$nick.gff";
 
 for (`cat $dir/../db/ICEhmm.txt`){chomp; my @g = split "\t"; push @ICE_list, $g[0];}
--- TIGER-TIGER2.1/bin/integrase_finder.pl
+++ TIGER-TIGER2.1/bin/integrase_finder.pl
@@ -14,7 +14,7 @@ Options(); # See bottom of script; help and other messages, Getopt
 my (%ints, %intAssoc, @order);
 my $base = $faa; $base =~ s/\.faa$//g;
 my $doms = join (',', "$base.domtbl", (split ',', $extraDoms));
-RunCommand("$dir/hmmsearch --domtblout $base.domtbl --cpu $cpu --cut_tc $pfam $base.faa > /dev/null", "$base.domtbl");
+RunCommand("hmmsearch --domtblout $base.domtbl --cpu $cpu --cut_tc $pfam $base.faa > /dev/null", "$base.domtbl");
 RunCommand("perl $dir/dom_to_gff.pl -gffin $gff -dom $doms -protgff $base.pfam.gff -domgff $base.domains.gff", "$base.pfam.gff");
 my $gffct = LoadTRs("$base.pfam.gff");
 print "$gffct gffs\n",  scalar(keys %ints), " tyrosine recombinase family members\n";
@@ -80,7 +80,7 @@ sub Remove_xers {
 }
 
 sub IntegronsIn {
- RunCommand("$dir/hmmsearch --acc --tblout $base.integron.tbl --cpu $cpu --cut_tc $integron $faa > /dev/null", "$base.integron.tbl");
+ RunCommand("hmmsearch --acc --tblout $base.integron.tbl --cpu $cpu --cut_tc $integron $faa > /dev/null", "$base.integron.tbl");
  for (@{Read_file("$base.integron.tbl")}) {
   next if /^#/;
   my @f = split /\s+/;
--- TIGER-TIGER2.1/bin/introns.pl
+++ TIGER-TIGER2.1/bin/introns.pl
@@ -147,7 +147,7 @@ sub Trna {
 
 sub Aragorn1 {
  warn "Finding split tRNA gene calls\n";
- RunCommand("$binpath/aragorn1.1 -w -t -l -i -seq -o introns.aragorn $file", "introns.aragorn");  # aragorn1.1
+ RunCommand("aragorn -w -t -l -i -seq -o introns.aragorn $file", "introns.aragorn");  # aragorn1.1
  for (`cat introns.aragorn`) {
   if (/^>(\S+)/) {$dna = $1; $id = ''}
   elsif (/^T /) {$id = ''}
@@ -250,7 +250,7 @@ sub Tloop {
   print OUT ">$id\n${presplice}$n{$id}{cca}\n";
  }
  close OUT;
- my $call = "$binpath/aragorn1.2.40 -w -br -t -l -i -e -o preT.aragorn preT.fa";
+ my $call = "aragorn -w -br -t -l -i -e -o preT.aragorn preT.fa";
  RunCommand($call, "preT.aragorn");
  my ($seq, $ttc, $str, $torig, $ttcold);
  for (`cat preT.aragorn`) {
@@ -272,7 +272,7 @@ sub Tloop {
 }
 
 sub Aragorn2 {
- my $call = "$binpath/aragorn1.2.40 -w -br -t -l -i -e -o spliced.aragorn spliced.fa";
+ my $call = "aragorn -w -br -t -l -i -e -o spliced.aragorn spliced.fa";
  #>trna2.4Ug
  #1 gene found
  #1   tRNA-Asn                        [1,75]      113.6   33      (gtt)
@@ -417,7 +417,7 @@ sub Ghost {
             ">$id.1prime\n", $seqs{"$id.1prime"}, "\n"
  }
  close OUT;
- my $call = "$binpath/aragorn1.1 -w -t -l -i -seq -o ghost.aragorn ghost.fa" unless -f "ghost.aragorn";  # aragorn1.1
+ my $call = "aragorn -w -t -l -i -seq -o ghost.aragorn ghost.fa" unless -f "ghost.aragorn";  # aragorn1.1
  RunCommand($call, "ghost.aragorn");
  for (`cat ghost.aragorn`) {
   $id = $1 if /^>(\S+)/;
--- TIGER-TIGER2.1/bin/tater.pl
+++ TIGER-TIGER2.1/bin/tater.pl
@@ -45,10 +45,10 @@ sub FindGenes {
  unlink qw/protein.err protein.ffn protein.fna protein.fsa protein.gbk protein.sqn protein.tbl protein.txt/;
  open OUT, ">../temp.fa"; for (`cat protein.gff`) {print OUT $_ if s/(\S+)\t/$origs{$1}\t/} close OUT;
  `mv ../temp.fa protein.gff`;
- RunCommand("$dir/hmmsearch --domtblout protein.domtbl --cpu $cpu --cut_tc $hmm protein.faa &> /dev/null", "protein.domtbl");
+ RunCommand("hmmsearch --domtblout protein.domtbl --cpu $cpu --cut_tc $hmm protein.faa &> /dev/null", "protein.domtbl");
  RunCommand("perl $dir/integrase_finder.pl -faa protein.faa -gff protein.gff -integron $dbpath/intI_Cterm.hmm -pfam $hmm -xer $dbpath/xers.prf -intDoms $dbpath/integrase_domain_pfams.txt -cpu $cpu $extraDoms $force $verbose", "protein.phage");
- RunCommand("$dir/hmmsearch --tblout tnp.tbl --noali --cut_tc --cpu $cpu $dbpath/TnpPred_HMM_Profiles.hmm protein.faa &> /dev/null", "tnp.tbl");
- RunCommand("$dir/hmmsearch --domtbl is607.domtbl --noali --cut_ga --cpu $cpu $dbpath/is607.hmm protein.faa &> /dev/null", "is607.domtbl");
+ RunCommand("hmmsearch --tblout tnp.tbl --noali --cut_tc --cpu $cpu $dbpath/TnpPred_HMM_Profiles.hmm protein.faa &> /dev/null", "tnp.tbl");
+ RunCommand("hmmsearch --domtbl is607.domtbl --noali --cut_ga --cpu $cpu $dbpath/is607.hmm protein.faa &> /dev/null", "is607.domtbl");
 }
 
 sub RunCommand {
--- TIGER-TIGER2.1/bin/tfind.pl
+++ TIGER-TIGER2.1/bin/tfind.pl
@@ -18,7 +18,7 @@ $cmd = "perl $binpath/trna.pl genome.fa trna $tax &> trna/trna.log";    RunComma
 chdir 'trna';
 mkdir 'anal';
 `awk -F"\\t" '\$6 == 100 {print}' rfind.gff > anal/tmPure.gff`;
-my %support; my %supptype = (qw/cmscan rfam aragorn1.2.40 aragorn/);
+my %support; my %supptype = (qw/cmscan rfam aragorn/);
 for (`intersectBed -nonamecheck -wo -f 0.1 -F 0.1 -e -s -a anal/tmPure.gff -b rfam.gff`, `intersectBed -nonamecheck -wo -f 0.1 -F 0.1 -e -s -a anal/tmPure.gff -b tmrna.gff`) {
  my @f = split "\t"; my $id = "$f[0].$f[3]";
  unless ($support{$id}{$f[10]} and $support{$id}{$f[10]} > $f[14]) {
--- TIGER-TIGER2.1/bin/tmrna.pl
+++ TIGER-TIGER2.1/bin/tmrna.pl
@@ -21,7 +21,7 @@ exit unless keys %final;
 open OUT, ">tmrna.raw.gff";
 for my $id (sort keys %final) {
  $serials{final} ++;
- print OUT join("\t", $t{$id}{dna}, 'aragorn1.2.40', @{$t{$id}}{qw/type L R score ori/}, '.', "ID=aragorn.$serials{final};");
+ print OUT join("\t", $t{$id}{dna}, 'aragorn', @{$t{$id}}{qw/type L R score ori/}, '.', "ID=aragorn.$serials{final};");
  for (qw/ivs_L ivs_R trunc_start trunc_end tag tag_L tag_R seq cca struct/)
  {if (defined $t{$id}{$_}) {print OUT "$_=$t{$id}{$_};"} else {print OUT "$_=;"}}
  warn join("\n", @{$t{$id}{notes}}) if $t{$id}{notes};
@@ -42,7 +42,7 @@ close FINAL;
 # SUBROUTINES
 sub Tmrna {
  #warn "Finding aragorn tmRNA gene calls\n";
- RunCommand("$binpath/aragorn1.2.40 -w -br -seq -e -m -l -o tmrna.aragorn $infile", "tmrna.aragorn");  # aragorn1.2.40
+ RunCommand("aragorn -w -br -seq -e -m -l -o tmrna.aragorn $infile", "tmrna.aragorn");  # aragorn1.2.40
  for (`cat tmrna.aragorn`) {
   chomp;
   if (/^>(\S+)/) {$dna = $1; $id = ''}
--- TIGER-TIGER2.1/bin/integrase_finder.pl
+++ TIGER-TIGER2.1/bin/integrase_finder.pl
@@ -71,7 +71,7 @@ sub Remove_xers {
  my $xerct = 0;
  open OUT, ">$base.xer";
  for my $prot (keys %fasta) {
-  my $run = "echo '>$prot\n$fasta{$prot}' | $dir/pfscan -f - $xer";
+  my $run = "echo '>$prot\n$fasta{$prot}' | pfscan -f - $xer";
   next unless `$run`; # To Do: collect score
   print OUT "$ints{$prot}{line}"; $xerct++; delete $ints{$prot};
  }
