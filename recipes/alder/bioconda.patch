diff --git a/Alder.cpp b/Alder.cpp
index 2b64c09..b621c22 100644
--- a/Alder.cpp
+++ b/Alder.cpp
@@ -40,7 +40,7 @@ namespace ALD {
 
   double sq(double x) { return x*x; }
 
-  Alder::AffineData::AffineData(int n=0, int _num_refs=0) {
+  Alder::AffineData::AffineData(int n, int _num_refs) {
     count = 0;
     ws = ss = s2 = 0.0;
     wg = gg = gs = vector <double> (n);
diff --git a/Alder.hpp b/Alder.hpp
index 9e9b6f6..eb5457b 100644
--- a/Alder.hpp
+++ b/Alder.hpp
@@ -36,7 +36,7 @@ namespace ALD {
       vector <double> wg, gg, gs;
       vector < vector <double> > gigj;
       int num_refs;
-      AffineData(int n, int _num_refs);
+      AffineData(int n=0, int _num_refs=0);
     };
 
     // constants for determining LD correlation extent
diff --git a/AlderParams.cpp b/AlderParams.cpp
index d4e44db..47bd92a 100644
--- a/AlderParams.cpp
+++ b/AlderParams.cpp
@@ -172,7 +172,7 @@ namespace ALD {
     phandle *ph ;
 
     int i;
-    while ((i = getopt (argc, argv, "p:vV")) != -1) {
+    while ((i = getopt (argc, argv, "hp:vV")) != -1) {
       switch (i)
 	{
 	case 'p':
@@ -184,6 +184,9 @@ namespace ALD {
 	case 'V':
 	  verbose = YES ;
 	  break; 
+  case 'h':
+    printf ("Usage: alder -p <parameter file> \n") ;
+    exit(0);
 	case '?':
 	  printf ("Usage: bad params.... \n") ;
 	  fatalx("bad params\n") ;
diff --git a/admixtools_src/nicksrc/gds.c. b/admixtools_src/nicksrc/gds.c
index 92b0e57..18e1b24 100644
--- a/admixtools_src/nicksrc/gds.c
+++ b/admixtools_src/nicksrc/gds.c
@@ -339,17 +339,17 @@ static int ranb1 (int n, double p)
 int ewens(int *a, int n, double theta) 
 /**
  implements the Ewens sampler.  Categories 1...K
 */
 {
      int i, k, maxcat=0 ;
      double t, x ;
 
-    if (n==0) return ;
+    if (n==0) return 0;
     a[0] = maxcat = 1 ;
     for (i=1 ; i< n ; i++)  {
      t = theta/ ((double) i + theta) ;
      x = DRAND2() ;
      if (x > t)  {        
        k = ranmod(i) ;
        a[i] = a[k] ;
      }
