recipe_sha: f0decf0fef183264aa515b4255b61dfc06e7c852460672006e6b87b93e7e3c95  # The hash of the recipe's meta.yaml at which this recipe failed to build.
skiplist: true # Set to true to skiplist this recipe so that it will be ignored as long as its latest commit is the one given above.
log: |-
  OTOOL=arm64-apple-darwin20.0.0-otool
  PAGESTUFF=arm64-apple-darwin20.0.0-pagestuff
  RANLIB=arm64-apple-darwin20.0.0-ranlib
  REDO_PREBINDING=arm64-apple-darwin20.0.0-redo_prebinding
  SDKROOT=/Applications/Xcode_15.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk
  SEGEDIT=arm64-apple-darwin20.0.0-segedit
  SEG_ADDR_TABLE=arm64-apple-darwin20.0.0-seg_addr_table
  SEG_HACK=arm64-apple-darwin20.0.0-seg_hack
  SIZE=arm64-apple-darwin20.0.0-size
  STRINGS=arm64-apple-darwin20.0.0-strings
  STRIP=arm64-apple-darwin20.0.0-strip
  _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_arm64_apple_darwin20_0_0
  ac_cv_func_malloc_0_nonnull=yes
  ac_cv_func_realloc_0_nonnull=yes
  build_alias=arm64-apple-darwin20.0.0
  host_alias=arm64-apple-darwin20.0.0
  INFO: activate_clangxx_osx-arm64.sh made the following environmental changes:
  CLANGXX=arm64-apple-darwin20.0.0-clang
  CXX=arm64-apple-darwin20.0.0-clang
  CXXFLAGS=-ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe -stdlib=libc -fvisibility-inlines-hidden -fmessage-length=0 -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/cuttlefish-2.2.0 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
  CXX_FOR_BUILD=$BUILD_PREFIX/bin/arm64-apple-darwin20.0.0-clang
  DEBUG_CXXFLAGS=-ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe -stdlib=libc -fvisibility-inlines-hidden -fmessage-length=0 -Og -g -Wall -Wextra -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/cuttlefish-2.2.0 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
  -- The CXX compiler identification is Clang 18.1.8
  -- The C compiler identification is Clang 18.1.8
  -- Detecting CXX compiler ABI info
  -- Detecting CXX compiler ABI info - done
  -- Check for working CXX compiler: $BUILD_PREFIX/bin/arm64-apple-darwin20.0.0-clang - skipped
  -- Detecting CXX compile features
  -- Detecting CXX compile features - done
  -- Detecting C compiler ABI info
  -- Detecting C compiler ABI info - done
  -- Check for working C compiler: $BUILD_PREFIX/bin/arm64-apple-darwin20.0.0-clang - skipped
  -- Detecting C compile features
  -- Detecting C compile features - done
  -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
  -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
  -- Found Threads: TRUE
  -- Found ZLIB: $PREFIX/lib/libz.dylib (found version "1.3.1")
  -- Found BZip2: $PREFIX/lib/libbz2.dylib (found version "1.0.8")
  -- Looking for BZ2_bzCompressInit
  -- Looking for BZ2_bzCompressInit - found
  -- Found PkgConfig: /opt/homebrew/bin/pkg-config (found version "2.3.0")
  -- Found Jemalloc: $PREFIX/lib/libjemalloc.dylib (found suitable version "5.3.0-0-g54eaed1d8b56b1aa528be3bdd1877e59c56fa90c", minimum required is "5.2.1")
  -- Configuring done (13.4s)
  -- Generating done (0.0s)
  -- Build files have been written to: $SRC_DIR/build
  Change Dir: '$SRC_DIR/build'

  Run Build Command(s): $BUILD_PREFIX/bin/cmake -E env VERBOSE=1 $BUILD_PREFIX/bin/make -f Makefile -j2 install
  $BUILD_PREFIX/bin/cmake -S$SRC_DIR -B$SRC_DIR/build --check-build-system CMakeFiles/Makefile.cmake 0
  $BUILD_PREFIX/bin/cmake -E cmake_progress_start $SRC_DIR/build/CMakeFiles $SRC_DIR/build//CMakeFiles/progress.marks
  $BUILD_PREFIX/bin/make  -f CMakeFiles/Makefile2 all
  make[1]: Entering directory '$SRC_DIR/build'
  $BUILD_PREFIX/bin/make  -f CMakeFiles/prj_kmc.dir/build.make CMakeFiles/prj_kmc.dir/depend
  make[2]: Entering directory '$SRC_DIR/build'
  cd $SRC_DIR/build && $BUILD_PREFIX/bin/cmake -E cmake_depends "Unix Makefiles" $SRC_DIR $SRC_DIR $SRC_DIR/build $SRC_DIR/build $SRC_DIR/build/CMakeFiles/prj_kmc.dir/DependInfo.cmake "--color="
  make[2]: Leaving directory '$SRC_DIR/build'
  $BUILD_PREFIX/bin/make  -f CMakeFiles/prj_kmc.dir/build.make CMakeFiles/prj_kmc.dir/build
  make[2]: Entering directory '$SRC_DIR/build'
  [  1%] Creating directories for 'prj_kmc'
  $BUILD_PREFIX/bin/cmake -Dcfgdir= -P $SRC_DIR/build/prj_kmc-prefix/tmp/prj_kmc-mkdirs.cmake
  $BUILD_PREFIX/bin/cmake -E touch $SRC_DIR/build/prj_kmc-prefix/src/prj_kmc-stamp/prj_kmc-mkdir
  [  3%] Performing download step for 'prj_kmc'
  cd $SRC_DIR/external && curl -k -L https://github.com/refresh-bio/KMC/archive/refs/tags/v3.2.1.tar.gz -o KMC-3.2.1.tar.gz && tar -xzf KMC-3.2.1.tar.gz && rm KMC-3.2.1.tar.gz
  cd $SRC_DIR/external && $BUILD_PREFIX/bin/cmake -E touch $SRC_DIR/build/prj_kmc-prefix/src/prj_kmc-stamp/prj_kmc-download
  [  5%] No update step for 'prj_kmc'
  $BUILD_PREFIX/bin/cmake -E echo_append
  $BUILD_PREFIX/bin/cmake -E touch $SRC_DIR/build/prj_kmc-prefix/src/prj_kmc-stamp/prj_kmc-update
  [  7%] Performing patch step for 'prj_kmc'
  cd $SRC_DIR/external/KMC-3.2.1 && patch --strip 1 < $SRC_DIR/patches/kmc_patch.diff
  patching file Makefile
  patching file kmc_CLI/kmc.cpp
  patching file kmc_api/kmer_defs.h
  patching file kmc_core/cpu_info.cpp
  patching file kmc_core/defs.h
  patching file kmc_core/fastq_reader.h
  patching file kmc_core/intr_copy.h
  patching file kmc_core/queues.h
  cd $SRC_DIR/external/KMC-3.2.1 && $BUILD_PREFIX/bin/cmake -E touch $SRC_DIR/build/prj_kmc-prefix/src/prj_kmc-stamp/prj_kmc-patch
  [  8%] No configure step for 'prj_kmc'
  cd $SRC_DIR/external/KMC-3.2.1 && $BUILD_PREFIX/bin/cmake -E echo_append
  cd $SRC_DIR/external/KMC-3.2.1 && $BUILD_PREFIX/bin/cmake -E touch $SRC_DIR/build/prj_kmc-prefix/src/prj_kmc-stamp/prj_kmc-configure
  [ 10%] Performing build step for 'prj_kmc'
  cd $SRC_DIR/external/KMC-3.2.1 && make -j4 CC=clang simde && make -j4 CC=clang kmc
  make[3]: Entering directory '$SRC_DIR/external/KMC-3.2.1'
  curl -k -L https://github.com/simd-everywhere/simde/releases/download/v0.7.2/simde-amalgamated-0.7.2.tar.xz -o kmc_core/simde-amalgamated-0.7.2.tar.xz && \
      tar -C kmc_core -xvf kmc_core/simde-amalgamated-0.7.2.tar.xz && \
  rm  kmc_core/simde-amalgamated-0.7.2.tar.xz && \
  mv kmc_core/simde-amalgamated-0.7.2 kmc_core/simde
  make[3]: Leaving directory '$SRC_DIR/external/KMC-3.2.1'
  make[3]: Entering directory '$SRC_DIR/external/KMC-3.2.1'
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_CLI/kmc.cpp -o kmc_CLI/kmc.o
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_core/mem_disk_file.cpp -o kmc_core/mem_disk_file.o
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_core/rev_byte.cpp -o kmc_core/rev_byte.o
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_core/bkb_writer.cpp -o kmc_core/bkb_writer.o
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_core/cpu_info.cpp -o kmc_core/cpu_info.o
  clang -Wall -O3 -m64 -pthread -std=c14 -fPIC  -c kmc_core/bkb_reader.cpp -o kmc_core/bkb_reader.o
  make[3]: Leaving directory '$SRC_DIR/external/KMC-3.2.1'
  make[2]: Leaving directory '$SRC_DIR/build'
  make[1]: Leaving directory '$SRC_DIR/build'
# Last 100 lines of the build log.
category: |-
  compiler error
