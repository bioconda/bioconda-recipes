package:
  name: r-batch
  # Note that conda versions cannot contain -, so any -'s in the version have
  # been replaced with _'s.
  version: "1.1_4"

source:
  fn: batch_1.1-4.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/batch_1.1-4.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/batch/batch_1.1-4.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: parallel
requirements:
  build:
    - r

  run:
    - r

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('batch')" # [not win]
    - "\"%R%\" -e \"library('batch')\"" # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://sites.google.com/site/thomashoffmannproject/
  license: GPL
  summary: Functions to allow you to easily pass command-line arguments into R, and functions
    to aid in submitting your R code in parallel on a cluster and joining the results
    afterward (e.g. multiple parameter values for simulations running in parallel, splitting
    up a permutation test in parallel, etc.). See ``parseCommandArgs(...)`` for the main
    example of how to use this package.

# The original CRAN metadata for this package was:

# Package: batch
# Version: 1.1-4
# Date: 2013-06-04
# Title: Batching Routines in Parallel and Passing Command-Line Arguments to R
# Author: Thomas Hoffmann <tjhoffm@gmail.com>
# Maintainer: Thomas Hoffmann <tjhoffm@gmail.com>
# Description: Functions to allow you to easily pass command-line arguments into R, and functions to aid in submitting your R code in parallel on a cluster and joining the results afterward (e.g. multiple parameter values for simulations running in parallel, splitting up a permutation test in parallel, etc.). See `parseCommandArgs(...)' for the main example of how to use this package.
# Suggests: parallel
# Depends: R (>= 2.14)
# License: GPL
# URL: http://sites.google.com/site/thomashoffmannproject/
# LazyLoad: true
# Packaged: 2013-06-05 00:15:32 UTC; tom
# NeedsCompilation: no
# Repository: CRAN
# Date/Publication: 2013-06-05 07:56:07

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
