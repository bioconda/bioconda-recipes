{% set version = "0.1.0" %}

package: 
  name: poolsnp
  version: {{ version }}

source:
  git_url: https://github.com/capoony/PoolSNP.git                            # Asked authors for a release
  sha256: c630eb7d44805636322839e245fb7f566af737513a3170396b62a50018aa0008

requirements:
  host:
    - python
    - parallel
  run:
    - python
    - parallel
  
build:
  number: 0
  noarch: generic
  run_exports:
    - {{ pin_subpackage('poolsnp', max_pin='x.x') }}

test:
  source_files:
    - TestData/*
    - scripts/*
  commands:
    # Ensure the script is executable
    - test -x ${PREFIX}/bin/PoolSNP.sh
    - grep 'PoolSNP v.' ${PREFIX}/bin/PoolSNP.sh | awk '{print $3, $4}'
    # Check the contents of TestData directory
    - ls ${PREFIX}/share
    - ls ${PREFIX}/share/PoolSNP
    - ls ${PREFIX}/share/PoolSNP/TestData
    # Run PoolSNP.sh with a minimal set of parameters to ensure it executes
    - >
      bash ${PREFIX}/bin/PoolSNP.sh
      mpileup="${PREFIX}/share/PoolSNP/TestData/test.mpileup"
      reference="${PREFIX}/share/PoolSNP/TestData/test.fa"
      names=Sample1,Sample2
      max-cov=0.7
      min-cov=4
      min-count=4
      min-freq=0.01
      miss-frac=0.5
      jobs=4
      badsites=1
      allsites=1
      output=${PREFIX}/share/PoolSNP/TestResult/test
    # Optionally, check the output file to ensure it was created
    - test -f ${PREFIX}/share/PoolSNP/TestResult/test.vcf.gz


about: 
  summary: PoolSNP is a heuristic SNP caller, which uses an MPILEUP file and a reference genome in FASTA format as inputs.
  license: Apache-2.0
  license_file: LICENSE
  home: https://github.com/capoony/PoolSNP

extra:
  recipe-maintainers:
    - abhilesh
  skip-lints:
    - uses_vcs_url # Requested a release from author