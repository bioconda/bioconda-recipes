package:
  name: moca
  version: "0.2.9"

source:
  fn: moca-0.2.9.tar.gz
  url: https://pypi.python.org/packages/51/ac/ce62d1fc5e4170a5c965e9026a83f1291c866e6ab26caa4001c0c5f6104f/moca-0.2.9.tar.gz
  md5: 3ab8f5bef9e9256845a9ea405631f6c4
#  patches:
   # List any patch files here
   # - fix.patch

build:
  skip: True # [not py27 or osx]
  # noarch_python: True
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - moca = moca:main
    #
    # Would create an entry point called moca that calls moca.main()

    - mocacli=scripts.mocacli:cli

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy ==1.11.0
    - scipy ==0.17.1
    - matplotlib ==1.5.1
    - biopython ==1.66
    - click ==6.6
    - coverage ==4.1
    - cycler ==0.10.0
    - future ==0.15.2
    - pandas ==0.18.1
    - patsy ==0.4.1
    - py ==1.4.31
    - pybedtools ==0.7.7
    - pybigwig ==0.2.8
    - pycairo ==1.10.0
    - pyparsing ==2.1.4
    - pysam ==0.9.0
    - pytest ==2.9.1
    - pytest-cov ==2.2.1
    - pytest-mpl ==0.5
    - python-dateutil ==2.5.3
    - pytz ==2016.4
    - seaborn ==0.7.0
    - six ==1.10.0
    - statsmodels ==0.6.1
    - tqdm ==4.7.2

  run:
    - python
    - setuptools
    - numpy ==1.11.0
    - scipy ==0.17.1
    - matplotlib ==1.5.1
    - biopython ==1.66
    - click ==6.6
    - coverage ==4.1
    - cycler ==0.10.0
    - future ==0.15.2
    - pandas ==0.18.1
    - patsy ==0.4.1
    - py ==1.4.31
    - pybedtools ==0.7.7
    - pybigwig ==0.2.8
    - pycairo ==1.10.0
    - pyparsing ==2.1.4
    - pysam ==0.9.0
    - pytest ==2.9.1
    - pytest-cov ==2.2.1
    - pytest-mpl ==0.5
    - python-dateutil ==2.5.3
    - pytz ==2016.4
    - seaborn ==0.7.0
    - six ==1.10.0
    - statsmodels ==0.6.1
    - tqdm ==4.7.2

test:
  # Python imports
  imports:
    - moca
    - moca.bedoperations
    - moca.helpers
    - moca.pipeline
    - moca.plotter
    - moca.wigoperations
    - scripts

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - mocacli --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - pytest
    - pytest-cov
    - pytest-mpl
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/saketkc/moca
  license: ISC License (ISCL)
  summary: 'Tool for motif conservation analysis'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
