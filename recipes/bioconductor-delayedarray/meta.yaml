{% set version = "0.28.0" %}
{% set name = "DelayedArray" %}
{% set bioc = "3.18" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name|lower }}/bioconductor-{{ name|lower }}_{{ version }}_src_all.tar.gz'
  md5: 812e7575d6eaa61f5b68364cdf1da3d9
build:
  number: 2
  rpaths:
    - lib/R/lib/
    - lib/
  run_exports: '{{ pin_subpackage("bioconductor-delayedarray", max_pin="x.x") }}'
# Suggests: BiocParallel, HDF5Array (>= 1.17.12), genefilter, SummarizedExperiment, airway, lobstr, DelayedMatrixStats, knitr, rmarkdown, BiocStyle, RUnit
requirements:
  host:
    - 'bioconductor-biocgenerics >=0.48.0,<0.49.0'
    - 'bioconductor-iranges >=2.36.0,<2.37.0'
    - 'bioconductor-matrixgenerics >=1.14.0,<1.15.0'
    - 'bioconductor-s4arrays >=1.2.0,<1.3.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-sparsearray >=1.2.0,<1.3.0'
    - r-base
    - r-matrix
    - libblas
    - liblapack
  run:
    - 'bioconductor-biocgenerics >=0.48.0,<0.49.0'
    - 'bioconductor-iranges >=2.36.0,<2.37.0'
    - 'bioconductor-matrixgenerics >=1.14.0,<1.15.0'
    - 'bioconductor-s4arrays >=1.2.0,<1.3.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - 'bioconductor-sparsearray >=1.2.0,<1.3.0'
    - r-base
    - r-matrix
  build:
    - {{ compiler('c') }}
    - make
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: Artistic-2.0
  summary: 'A unified framework for working transparently with on-disk and in-memory array-like datasets'
  description: 'Wrapping an array-like object (typically an on-disk object) in a DelayedArray object allows one to perform common array operations on it without loading the object in memory. In order to reduce memory usage and optimize performance, operations on the object are either delayed or executed using a block processing mechanism. Note that this also works on in-memory array-like objects like DataFrame objects (typically with Rle columns), Matrix objects, ordinary arrays and, data frames.'
extra:
  additional-platforms:
    - linux-aarch64
  parent_recipe:
    name: bioconductor-delayedarray
    path: recipes/bioconductor-delayedarray
    version: 0.6.6

