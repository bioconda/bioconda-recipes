diff --git a/setup.py b/setup.py
index 877b729..200e00e 100644
--- a/setup.py
+++ b/setup.py
@@ -490,72 +490,7 @@ LIB_UCSC_FILES = [
 LIB_STAT = ['src/variant_tools/fisher2.c']
 
 EMBEDDED_BOOST = os.path.isdir('src/boost_1_49_0')
-if not EMBEDDED_BOOST:
-    def downloadProgress(count, blockSize, totalSize):
-        perc = count * blockSize * 100 // totalSize
-        if perc > downloadProgress.counter: 
-            sys.stdout.write('.' * (perc - downloadProgress.counter))
-            downloadProgress.counter = perc
-        sys.stdout.flush()
-    if sys.version_info.major == 2:
-        from urllib import urlretrieve
-    else:
-        from urllib.request import urlretrieve
-    import tarfile
-    downloadProgress.counter = 0
-    try:
-        BOOST_URL = 'http://downloads.sourceforge.net/project/boost/boost/1.49.0/boost_1_49_0.tar.gz?r=&ts=1435893980&use_mirror=iweb'
-        sys.stdout.write('Downloading boost C++ library 1.49.0 ')
-        sys.stdout.flush()
-        if not os.path.isfile('src/boost_1_49_0.tar.gz'):
-            urlretrieve(BOOST_URL, 'src/boost_1_49_0.tar.gz', downloadProgress)
-        sys.stdout.write('\n')
-        # extract needed files
-        with tarfile.open('src/boost_1_49_0.tar.gz', 'r:gz') as tar:
-            files = [h for h in tar.getmembers() if h.name.startswith('boost_1_49_0/boost') \
-                or h.name.startswith('boost_1_49_0/libs/iostreams') \
-                or h.name.startswith('boost_1_49_0/libs/regex') \
-                or h.name.startswith('boost_1_49_0/libs/filesystem') \
-                or h.name.startswith('boost_1_49_0/libs/detail') \
-                or h.name.startswith('boost_1_49_0/libs/system') ]
-            sys.stdout.write('Extracting %d files\n' % len(files))
-            tar.extractall(path='src', members=files)
-        os.remove('src/boost_1_49_0.tar.gz')
-        EMBEDDED_BOOST = True
-    except Exception as e:
-        print(e)
-        print('The boost C++ library version 1.49.0 is not found under the current directory. Will try to use the system libraries.')
-
-
 EMBEDDED_ZMQ= os.path.isdir('src/zeromq-4.0.3')
-if not EMBEDDED_ZMQ:
-    def downloadProgress(count, blockSize, totalSize):
-        perc = count * blockSize * 100 // totalSize
-        if perc > downloadProgress.counter:
-            sys.stdout.write('.' * (perc - downloadProgress.counter))
-            downloadProgress.counter = perc
-        sys.stdout.flush()
-    if sys.version_info.major == 2:
-        from urllib import urlretrieve
-    else:
-        from urllib.request import urlretrieve
-    import tarfile
-    downloadProgress.counter = 0
-    try:
-        BOOST_URL = 'http://download.zeromq.org/zeromq-4.0.3.tar.gz'
-        sys.stdout.write('Downloading ZeroMQ version 4.0.3')
-        sys.stdout.flush()
-        if not os.path.isfile('src/zeromq-4.0.3.tar.gz'):
-            urlretrieve(BOOST_URL, 'src/zeromq-4.0.3.tar.gz', downloadProgress)
-        sys.stdout.write('\n')
-        # extract needed files
-        with tarfile.open('src/zeromq-4.0.3.tar.gz', 'r:gz') as tar:
-            tar.extractall(path='src')
-        os.remove('src/zeromq-4.0.3.tar.gz')
-        EMBEDDED_ZMQ = True
-    except Exception as e:
-        print(e)
-        print('The ZeroMQ version 4.0.3 is not found under the current directory.')
 
 #
 # During development, if an interface file needs to be re-generated, please
