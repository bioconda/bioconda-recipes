{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ahocorasicktrie
  version: "0.1.0"

source:
  fn: AhoCorasickTrie_0.1.0.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/AhoCorasickTrie_0.1.0.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/AhoCorasickTrie/AhoCorasickTrie_0.1.0.tar.gz
  sha1: b93e226259017fe247df804be0ea546882e15b5b

build:
  # number: 1
  skip: True # [osx]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - r
    - r-rcpp
    - gcc                 # [not win]

  run:
    - r
    - r-rcpp

test:
  commands:
    - $R -e "library('AhoCorasickTrie')" # [not win]

about:
  home: https://github.com/chambm/AhoCorasickTrie
  license: Apache License 2.0
  summary: Aho-Corasick is an optimal algorithm for finding many keywords in a text. It can locate
    all matches in a text in O(N+M) time; i.e., the time needed scales linearly with
    the number of keywords (N) and the size of the text (M). Compare this to the naive
    approach which takes O(N*M) time to loop through each pattern and scan for it in
    the text. This implementation builds the trie (the generic name of the data structure)
    and runs the search in a single function call. If you want to search multiple texts
    with the same trie, the function will take a list or vector of texts and return
    a list of matches to each text. By default, all 128 ASCII characters are allowed
    in both the keywords and the text. A more efficient trie is possible if the alphabet
    size can be reduced. For example, DNA sequences use at most 19 distinct characters
    and usually only 4; protein sequences use at most 26 distinct characters and usually
    only 20. UTF-8 (Unicode) matching is not currently supported.
  license_family: Apache

# The original CRAN metadata for this package was:

# Package: AhoCorasickTrie
# Type: Package
# Title: Fast Searching for Multiple Keywords in Multiple Texts
# Version: 0.1.0
# Authors@R: c(person("Matt", "Chambers", email="matt.chambers42@gmail.com", role=c("aut", "cre")), person("Tomas", "Petricek", role=c("aut", "cph")), person("Vanderbilt University", role="cph"))
# Description: Aho-Corasick is an optimal algorithm for finding many keywords in a text. It can locate all matches in a text in O(N+M) time; i.e., the time needed scales linearly with the number of keywords (N) and the size of the text (M). Compare this to the naive approach which takes O(N*M) time to loop through each pattern and scan for it in the text. This implementation builds the trie (the generic name of the data structure) and runs the search in a single function call. If you want to search multiple texts with the same trie, the function will take a list or vector of texts and return a list of matches to each text. By default, all 128 ASCII characters are allowed in both the keywords and the text. A more efficient trie is possible if the alphabet size can be reduced. For example, DNA sequences use at most 19 distinct characters and usually only 4; protein sequences use at most 26 distinct characters and usually only 20. UTF-8 (Unicode) matching is not currently supported.
# License: Apache License 2.0
# URL: https://github.com/chambm/AhoCorasickTrie
# BugReports: https://github.com/chambm/AhoCorasickTrie/issues
# Encoding: UTF-8
# LazyData: true
# Imports: Rcpp (>= 0.12.5)
# LinkingTo: Rcpp
# Suggests: Biostrings, microbenchmark
# SystemRequirements: C++11
# RoxygenNote: 5.0.1
# NeedsCompilation: yes
# Packaged: 2016-07-29 00:25:38 UTC; chambem2
# Author: Matt Chambers [aut, cre], Tomas Petricek [aut, cph], Vanderbilt University [cph]
# Maintainer: Matt Chambers <matt.chambers42@gmail.com>
# Repository: CRAN
# Date/Publication: 2016-07-29 06:40:52

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
