diff --git a/configure.ac b/configure.ac
index ee6c39c..a7e1827 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2,7 +2,7 @@
 # Process this file with autoconf to produce a configure script.
 
 AC_PREREQ([2.69])
-AC_INIT([PRINSEQ++], [1.2], [garbanyo@gmail.com] ,[prinseq-plus-plus], [https://github.com/Adrian-Cantu/PRINSEQ-plus-plus])
+AC_INIT([PRINSEQ++], [1.2.4], [garbanyo@gmail.com] ,[prinseq-plus-plus], [https://github.com/Adrian-Cantu/PRINSEQ-plus-plus])
 ##AM_INIT_AUTOMAKE
 AC_CONFIG_SRCDIR([src/main.cpp])
 AC_LANG([C++])
diff --git a/m4/ax_boost_filesystem.m4 b/m4/ax_boost_filesystem.m4
index c392f9d..37513fa 100644
--- a/m4/ax_boost_filesystem.m4
+++ b/m4/ax_boost_filesystem.m4
@@ -104,7 +104,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],
 
             fi
             if test "x$ax_lib" = "x"; then
-                AC_MSG_ERROR(Could not find a version of the library!)
+                AC_MSG_ERROR(Could not find a version of the library Boost::Filesystem !)
             fi
 			if test "x$link_filesystem" != "xyes"; then
 				AC_MSG_ERROR(Could not link against $ax_lib !)
diff --git a/m4/ax_boost_iostreams.m4 b/m4/ax_boost_iostreams.m4
index 8f27f85..007a2c0 100644
--- a/m4/ax_boost_iostreams.m4
+++ b/m4/ax_boost_iostreams.m4
@@ -103,7 +103,7 @@ AC_DEFUN([AX_BOOST_IOSTREAMS],
 
             fi
             if test "x$ax_lib" = "x"; then
-                AC_MSG_ERROR(Could not find a version of the library!)
+                AC_MSG_ERROR(Could not find a version of the library Boost::Iostreams!)
             fi
 			if test "x$link_iostreams" != "xyes"; then
 				AC_MSG_ERROR(Could not link against $ax_lib !)
diff --git a/m4/ax_boost_system.m4 b/m4/ax_boost_system.m4
index 207d7be..f5507b4 100644
--- a/m4/ax_boost_system.m4
+++ b/m4/ax_boost_system.m4
@@ -108,7 +108,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],
 
             fi
             if test "x$ax_lib" = "x"; then
-                AC_MSG_ERROR(Could not find a version of the library!)
+                AC_MSG_ERROR(Could not find a version of the library boost::System !)
             fi
 			if test "x$link_system" = "xno"; then
 				AC_MSG_ERROR(Could not link against $ax_lib !)
diff --git a/src/main.cpp b/src/main.cpp
index 68198ce..2851ead 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -592,8 +592,8 @@ void* do_single (void * arguments) {
         if (noiupac) {(*(verbose_vec->noiupac))[id] += read->noiupac();}
         if (min_len) {(*(verbose_vec->min_len))[id] += read->min_len(min_len);}
         if (max_len) {(*(verbose_vec->max_len))[id] += read->max_len(max_len);}
-        if (max_gc < 100) {(*(verbose_vec->max_cg))[id] += read->max_gc(max_gc);}
-        if (min_gc > 0) {(*(verbose_vec->min_cg))[id] += read->min_gc(min_gc);}
+        if (max_gc < 100) {(*(verbose_vec->max_gc))[id] += read->max_gc(max_gc);}
+        if (min_gc > 0) {(*(verbose_vec->min_gc))[id] += read->min_gc(min_gc);}
         if (derep) {
             pthread_mutex_lock(& read_mutex4);
             derep_1=filter->contains(read->seq_seq);
@@ -633,8 +633,8 @@ void* do_pair (void * arguments) {
             if (noiupac) {(*(verbose_vec->noiupac))[id] += read->noiupac();}
             if (min_len) {(*(verbose_vec->min_len))[id] += read->min_len(min_len);}
             if (max_len) {(*(verbose_vec->max_len))[id] += read->max_len(max_len);}
-            if (max_gc < 100) {(*(verbose_vec->max_cg))[id] += read->max_gc(max_gc);}
-            if (min_gc > 0) {(*(verbose_vec->min_cg))[id] += read->min_gc(min_gc);}
+            if (max_gc < 100) {(*(verbose_vec->max_gc))[id] += read->max_gc(max_gc);}
+            if (min_gc > 0) {(*(verbose_vec->min_gc))[id] += read->min_gc(min_gc);}
             if (derep) {
                 pthread_mutex_lock(& read_mutex4);
                 derep_1=filter->contains(read->read1->seq_seq);
@@ -682,7 +682,7 @@ Option:
     -VERBOSE <int>
         Format of the report of filtered reads, VERBOSE=1 prints information only
         on the filters that removed sequences. VERBOSE=2 prints numbers for filters 
-        in order (min_len, max_len, min_cg, max_cg, min_qual_score, min_qual_mean,
+        in order (min_len, max_len, min_gc, max_gc, min_qual_score, min_qual_mean,
         ns_max_n, noiupac, derep, lc_entropy, lc_dust, trim_tail_left, trim_tail_right, 
         trim_qual_left, trim_qual_right, trim_left, trim_right) to compare stats of diferent files.
         VERBOSE=0 prints nothing.
diff --git a/src/verbose.cpp b/src/verbose.cpp
index ea7bd23..417477a 100644
--- a/src/verbose.cpp
+++ b/src/verbose.cpp
@@ -19,8 +19,8 @@
 verbose::verbose(int k, int verb) : threads(k), verbosity(verb)  {
     min_len=new std::vector<int>(threads,0);
     max_len=new std::vector<int>(threads,0);
-    min_cg=new std::vector<int>(threads,0);
-    max_cg=new std::vector<int>(threads,0);
+    min_gc=new std::vector<int>(threads,0);
+    max_gc=new std::vector<int>(threads,0);
     min_qual_score = new std::vector<int>(threads,0);
     min_qual_mean= new std::vector<int>(threads,0);
     ns_max_n= new std::vector<int>(threads,0);
@@ -39,8 +39,8 @@ verbose::verbose(int k, int verb) : threads(k), verbosity(verb)  {
 void verbose::accumulate(void) {
     total_min_len=std::accumulate((*min_len).begin(), (*min_len).end(), 0);
     total_max_len=std::accumulate((*max_len).begin(), (*max_len).end(), 0);
-    total_min_cg=std::accumulate((*min_cg).begin(), (*min_cg).end(), 0);
-    total_max_cg=std::accumulate((*max_cg).begin(), (*max_cg).end(), 0);
+    total_min_gc=std::accumulate((*min_gc).begin(), (*min_gc).end(), 0);
+    total_max_gc=std::accumulate((*max_gc).begin(), (*max_gc).end(), 0);
     total_min_qual_score=std::accumulate((*min_qual_score).begin(), (*min_qual_score).end(), 0);
     total_min_qual_mean=std::accumulate((*min_qual_mean).begin(),(*min_qual_mean).end(),0);
     total_ns_max_n=std::accumulate((*ns_max_n).begin(), (*ns_max_n).end(), 0);
@@ -61,8 +61,8 @@ void verbose::print(void){
     if (verbosity == 1 ) {
         if (total_min_len) { std::cout << total_min_len <<" reads removed by -min_len" << std::endl;}
         if (total_max_len) { std::cout << total_max_len <<" reads removed by -max_len" << std::endl;}
-        if (total_min_cg) { std::cout << total_min_cg <<" reads removed by -min_cg" << std::endl;}
-        if (total_max_cg) { std::cout << total_max_cg <<" reads removed by -max_cg" << std::endl;}
+        if (total_min_gc) { std::cout << total_min_gc <<" reads removed by -min_gc" << std::endl;}
+        if (total_max_gc) { std::cout << total_max_gc <<" reads removed by -max_gc" << std::endl;}
         if (total_min_qual_score) { std::cout << total_min_qual_score <<" reads removed by -min_qual_score" << std::endl;}
         if (total_min_qual_mean) { std::cout << total_min_qual_mean <<" reads removed by -min_qual_mean" << std::endl;}
         if (total_ns_max_n) { std::cout << total_ns_max_n <<" reads removed by -ns_max_n" << std::endl;}
@@ -79,8 +79,8 @@ void verbose::print(void){
     } else if (verbosity==2) {
         std::cout << total_min_len        << std::endl;
         std::cout << total_max_len        << std::endl;
-        std::cout << total_min_cg         << std::endl;
-        std::cout << total_max_cg         << std::endl;
+        std::cout << total_min_gc         << std::endl;
+        std::cout << total_max_gc         << std::endl;
         std::cout << total_min_qual_score << std::endl;
         std::cout << total_min_qual_mean  << std::endl;
         std::cout << total_ns_max_n       << std::endl;
diff --git a/src/verbose.h b/src/verbose.h
index aedc576..4db38cc 100644
--- a/src/verbose.h
+++ b/src/verbose.h
@@ -30,8 +30,8 @@ class verbose {
     
     int total_min_len;
     int total_max_len;
-    int total_min_cg;
-    int total_max_cg;
+    int total_min_gc;
+    int total_max_gc;
     int total_min_qual_score;
     int total_min_qual_mean;
     int total_ns_max_n;
@@ -48,8 +48,8 @@ class verbose {
     
     std::vector<int>* min_len;
     std::vector<int>* max_len;
-    std::vector<int>* min_cg;
-    std::vector<int>* max_cg;
+    std::vector<int>* min_gc;
+    std::vector<int>* max_gc;
     std::vector<int>* min_qual_score;
     std::vector<int>* min_qual_mean;
     std::vector<int>* ns_max_n;
