--- src/cli.rs	
+++ src/cli.rs	
@@ -42,7 +42,7 @@
 )]
 pub struct Command {
     #[clap(
-        short = "i",
+        short = 'i',
         long = "input",
         required = true,
         about = "path to input file overlap (.paf|.m4|.mhap) or yacrd report (.yacrd), format is autodetect and compression input is allowed (gz|bzip2|lzma)"
@@ -50,7 +50,7 @@
     pub input: String,
 
     #[clap(
-        short = "o",
+        short = 'o',
         long = "output",
         required = true,
         about = "path output file"
@@ -58,7 +58,7 @@
     pub output: String,
 
     #[clap(
-        short = "c",
+        short = 'c',
         long = "coverage",
         default_value = "0",
         about = "if coverage reach this value region is mark as bad"
@@ -66,7 +66,7 @@
     pub coverage: u64,
 
     #[clap(
-        short = "n",
+        short = 'n',
         long = "not-coverage",
         default_value = "0.8",
         about = "if the ratio of bad region length on total length is lower than this value, read is marked as NotCovered"
@@ -74,7 +74,7 @@
     pub not_coverage: f64,
 
     #[clap(
-        short = "d",
+        short = 'd',
         long = "ondisk",
         about = "yacrd switches to 'ondisk' mode which will reduce memory usage but increase computation time. The value passed as a parameter is used as a prefix for the temporary files created by yacrd. Be careful if the prefix contains path separators (`/` for unix or `\\` for windows) this folder will be deleted"
     )]
@@ -106,7 +106,7 @@
 #[derive(Clap, Debug)]
 pub struct Scrubb {
     #[clap(
-        short = "i",
+        short = 'i',
         long = "input",
         required = true,
         about = "path to sequence input (fasta|fastq) compression is autodetect (none|gzip|bzip2|lzma)"
@@ -114,7 +114,7 @@
     pub input: String,
 
     #[clap(
-        short = "o",
+        short = 'o',
         long = "output",
         required = true,
         about = "path to output file, format and compression of input is preserved"
@@ -125,7 +125,7 @@
 #[derive(Clap, Debug)]
 pub struct Filter {
     #[clap(
-        short = "i",
+        short = 'i',
         long = "input",
         required = true,
         about = "path to sequence input (fasta|fastq) compression is autodetect (none|gzip|bzip2|lzma)"
@@ -133,7 +133,7 @@
     pub input: String,
 
     #[clap(
-        short = "o",
+        short = 'o',
         long = "output",
         required = true,
         about = "path to output file, format and compression of input is preserved"
@@ -144,7 +144,7 @@
 #[derive(Clap, Debug)]
 pub struct Extract {
     #[clap(
-        short = "i",
+        short = 'i',
         long = "input",
         required = true,
         about = "path to sequence input (fasta|fastq) compression is autodetect (none|gzip|bzip2|lzma)"
@@ -152,7 +152,7 @@
     pub input: String,
 
     #[clap(
-        short = "o",
+        short = 'o',
         long = "output",
         required = true,
         about = "path to output file, format and compression of input is preserved"
@@ -163,7 +163,7 @@
 #[derive(Clap, Debug)]
 pub struct Split {
     #[clap(
-        short = "i",
+        short = 'i',
         long = "input",
         required = true,
         about = "path to sequence input (fasta|fastq) compression is autodetect (none|gzip|bzip2|lzma)"
@@ -171,7 +171,7 @@
     pub input: String,
 
     #[clap(
-        short = "o",
+        short = 'o',
         long = "output",
         required = true,
         about = "path to output file, format and compression of input is preserved"
