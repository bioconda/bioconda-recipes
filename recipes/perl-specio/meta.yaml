{% set name = "perl-specio" %}
{% set version = "0.47" %}
{% set sha256 = "f41307f14444f8777e572f27eeb6a964084399e7e382c47c577827ad8a286a1c" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://cpan.metacpan.org/authors/id/D/DR/DROLSKY/Specio-0.47.tar.gz
  sha256: {{ sha256 }}

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
build:
  number: 0
  run_exports:
    weak:
      - {{ name }} ={{ version }}

requirements:
  build:
    - make
  # Run exports are used now
  host:
    - perl
    - perl-module-runtime
    - perl-try-tiny
    - perl-mro-compat
    - perl-role-tiny
    - perl-eval-closure
    - perl-devel-stacktrace
    - perl-sub-quote
    - perl-test-fatal
    - perl-test-needs
  run:
    - perl
    - perl-module-runtime
    - perl-try-tiny
    - perl-mro-compat
    - perl-role-tiny
    - perl-eval-closure
    - perl-devel-stacktrace
    - perl-sub-quote
    - perl-test-fatal

test:
  # Perl 'use' tests
  imports:
    - Specio
    - Specio::Coercion
    - Specio::Constraint::AnyCan
    - Specio::Constraint::AnyDoes
    - Specio::Constraint::AnyIsa
    - Specio::Constraint::Enum
    - Specio::Constraint::Intersection
    - Specio::Constraint::ObjectCan
    - Specio::Constraint::ObjectDoes
    - Specio::Constraint::ObjectIsa
    - Specio::Constraint::Parameterizable
    - Specio::Constraint::Parameterized
    - Specio::Constraint::Role::CanType
    - Specio::Constraint::Role::DoesType
    - Specio::Constraint::Role::Interface
    - Specio::Constraint::Role::IsaType
    - Specio::Constraint::Simple
    - Specio::Constraint::Structurable
    - Specio::Constraint::Structured
    - Specio::Constraint::Union
    - Specio::Declare
    - Specio::DeclaredAt
    - Specio::Exception
    - Specio::Exporter
    - Specio::Helpers
    - Specio::Library::Builtins
    - Specio::Library::Numeric
    - Specio::Library::Perl
    - Specio::Library::String
    - Specio::Library::Structured
    - Specio::Library::Structured::Dict
    - Specio::Library::Structured::Map
    - Specio::Library::Structured::Tuple
    - Specio::OO
    - Specio::PartialDump
    - Specio::Registry
    - Specio::Role::Inlinable
    - Specio::Subs
    - Specio::TypeChecks

  # You can also put a file called run_test.pl (or run_test.py) in the recipe
  # that will be run at test time.

about:
  home: https://metacpan.org/release/Specio
  license: artistic_2
  summary: 'Type constraints and coercions for Perl'

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
