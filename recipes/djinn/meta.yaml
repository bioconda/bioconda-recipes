{% set name = "djinn" %}
{% set version = "1.0.1" %}
{% set sha256 = "436b142b6224e529585f18b95120231c806d60d24262bea724fdad823e27857c" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/pdimens/djinn/releases/download/{{ version }}/djinn.{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  noarch: python
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --no-cache-dir -vvv
  entry_points:
    - djinn = djinn.__main__:cli
  run_exports:
    - {{ pin_subpackage('djinn', max_pin="x") }}

requirements:
  host:
    - python >=3.11
    - pip
    - setuptools-scm >=8
  run:
    - click >=8.2
    - pysam >=0.23
    - python >=3.11
    - rich-click =1.9
    - samtools >=1.22

test:
  commands:
    - "djinn --version"

about:
  home: "https://github.com/pdimens/djinn"
  license: "GPL-3.0-or-later"
  license_family: GPL3
  license_file: LICENSE
  summary: "Convert your linked-read data between formats, almost like magic."
  description: |
    There are disagreements between formats for linked-read data. Haplotagging thinks
    linked-read barcodes and FASTQ files should look one way, stLFR a different way, and
    TELLseq yet another. Djinn lets you convert to a standard format, convert between these
    FASTQ formats, barcode styles, etc. It also provides a convenient method to upload linked-read
    data to NCBI that preserves barcode information.
  doc_url: "https://pdimens.github.io/djinn"
  dev_url: "https://github.com/pdimens/djinn"

extra:
  recipe-maintainers:
    - pdimens
