diff --git a/cmake_support/OST.cmake b/cmake_support/OST.cmake
index 3456bc0dc..74b5509a5 100644
--- a/cmake_support/OST.cmake
+++ b/cmake_support/OST.cmake
@@ -549,7 +549,7 @@ macro(pymod)
       set(_PARENT_LIB_NAME "${_PARENT_NAME}")
     endif()
     target_link_libraries("_${_LIB_NAME}" ${_PARENT_LIB_NAME} 
-                          ${Python_LIBRARIES} ${BOOST_PYTHON_LIBRARIES})
+                          ${BOOST_PYTHON_LIBRARIES})
 
     set_target_properties("_${_LIB_NAME}"
                           PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${PYMOD_STAGE_DIR})
@@ -864,14 +864,8 @@ macro(setup_stage)
   if (UNIX AND NOT APPLE)
     check_architecture()
   endif()
-  set (ARCH ${CMAKE_NATIVE_ARCH})
-  if ("${ARCH}" MATCHES "64" AND NOT _UBUNTU_LAYOUT)
-    set(LIB_DIR lib64  )
-    set(LIB_STAGE_PATH "${STAGE_DIR}/lib64"  )
-  else()
-    set(LIB_DIR lib  )
-    set(LIB_STAGE_PATH "${STAGE_DIR}/lib"  )
-  endif()
+  set(LIB_DIR lib  )
+  set(LIB_STAGE_PATH "${STAGE_DIR}/lib"  )
   if (_UBUNTU_LAYOUT)
     set(LIBEXEC_PATH ${LIB_DIR}/openstructure/libexec  )
     set(LIBEXEC_STAGE_PATH ${LIB_STAGE_PATH}/openstructure/libexec  )
diff --git a/modules/conop/src/chemdict_tool.cc b/modules/conop/src/chemdict_tool.cc
index 08b11ae0d..4527b2be2 100644
--- a/modules/conop/src/chemdict_tool.cc
+++ b/modules/conop/src/chemdict_tool.cc
@@ -24,7 +24,7 @@
 #include <iostream>
 #include <fstream>
 #include <boost/algorithm/string.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/iostreams/filtering_stream.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
 
@@ -93,7 +93,9 @@ int main(int argc, char const *argv[])
                 << strerror(errno) << std::endl;
       return 1;
   }
-  if (boost::iequals(".gz", boost::filesystem::extension(argv[2]))) {
+
+  boost::filesystem::path file_path(argv[2]);
+  if (boost::iequals(file_path.extension().string(), ".gz")) {
     filtered_istream.push(boost::iostreams::gzip_decompressor());
   }
   filtered_istream.push(istream);
diff --git a/modules/gui/src/CMakeLists.txt b/modules/gui/src/CMakeLists.txt
index e475fbdde..62adf70e3 100644
--- a/modules/gui/src/CMakeLists.txt
+++ b/modules/gui/src/CMakeLists.txt
@@ -452,7 +452,6 @@ module(NAME gui SOURCES ${OST_GUI_MOCS} ${OST_GUI_SOURCES}
                ${OST_GUI_HEADERS}
        DEPENDS_ON ost_gfx ost_io ost_mol_alg ost_seq_alg
        LINK ${QT_LIBRARIES}
-            ${Python_LIBRARIES} 
             ${BOOST_PYTHON_LIBRARIES}
             ${SPNAV_LIBRARIES}
         NO_STATIC)
@@ -469,10 +468,17 @@ qt5_wrap_cpp(OST_GOSTY_MOC "gosty.hh"
              OPTIONS -DBOOST_TT_HAS_OPERATOR_HPP_INCLUDED
                      -DBOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION)
 
-set(LINK LINK ${QT_LIBRARIES} ${BOOST_PROGRAM_OPTIONS_LIBRARIES})
+find_package(Python 3 COMPONENTS Interpreter Development REQUIRED)
 
-executable_libexec(NAME gosty SOURCES gosty.cc ${OST_GOSTY_MOC}
-                   ${OST_QT_RESOURCE} DEPENDS_ON ost_gui ${LINK})
+set(GOSTY_LINK_LIBS
+    ${QT_LIBRARIES}
+    ${BOOST_PROGRAM_OPTIONS_LIBRARIES}
+    Python::Python)
+
+executable_libexec(NAME gosty
+                   SOURCES gosty.cc ${OST_GOSTY_MOC} ${OST_QT_RESOURCE}
+                   DEPENDS_ON ost_gui
+                   LINK ${GOSTY_LINK_LIBS})
            
 file(GLOB MOC_CXX_FILES moc_*.cxx)
 
diff --git a/modules/gui/src/gosty.cc b/modules/gui/src/gosty.cc
index 689cbf9ee..853899a17 100644
--- a/modules/gui/src/gosty.cc
+++ b/modules/gui/src/gosty.cc
@@ -111,11 +111,7 @@ String setup_python_search_path(const String& root, PythonInterpreter& pi)
 #ifdef _MSC_VER
   String loc=root+"\\lib\\"+site_pkgs.str()+"\\site-packages";
 #else  
-# if (defined(__ppc64__) || defined(__x86_64__)) && !defined(__APPLE__) && !OST_UBUNTU_LAYOUT
-  String loc=root+"/lib64/"+site_pkgs.str()+"/site-packages";
-# else
   String loc=root+"/lib/"+site_pkgs.str()+"/site-packages";
-# endif
 #endif
   pi.AppendModulePath(QString::fromStdString(loc));
   // dng is an interactive python session, so add '.' to search path
diff --git a/modules/gui/src/python_shell/python_interpreter.cc b/modules/gui/src/python_shell/python_interpreter.cc
index 4c2afae41..740dbdc6a 100644
--- a/modules/gui/src/python_shell/python_interpreter.cc
+++ b/modules/gui/src/python_shell/python_interpreter.cc
@@ -29,7 +29,7 @@
 #include <string>
 #include <fstream>
 
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <ost/log.hh>
 
 #include <QFile>
diff --git a/modules/io/src/img/map_io_dx_handler.cc b/modules/io/src/img/map_io_dx_handler.cc
index ef43ef502..5e8dc4ed1 100644
--- a/modules/io/src/img/map_io_dx_handler.cc
+++ b/modules/io/src/img/map_io_dx_handler.cc
@@ -28,7 +28,7 @@
 #include <boost/iostreams/filter/gzip.hpp>
 #include <boost/iostreams/filtering_stream.hpp>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/algorithm/string/trim.hpp>
@@ -94,7 +94,7 @@ void MapIODxHandler::Import(img::MapHandle& mh, const bf::path& loc,const ImageF
     throw IOException("could not open "+loc.string());
   }
   boost::iostreams::filtering_stream<boost::iostreams::input> in;
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in.push(boost::iostreams::gzip_decompressor());
   }
   in.push(infile);
diff --git a/modules/io/src/mol/dcd_io.cc b/modules/io/src/mol/dcd_io.cc
index d70074433..54499a420 100644
--- a/modules/io/src/mol/dcd_io.cc
+++ b/modules/io/src/mol/dcd_io.cc
@@ -25,7 +25,7 @@
 #include <algorithm>
 
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 
 #include <ost/stdint.hh>
 #include <ost/log.hh>
diff --git a/modules/io/src/mol/entity_io_crd_handler.cc b/modules/io/src/mol/entity_io_crd_handler.cc
index 1c2c2327e..a7824cd97 100644
--- a/modules/io/src/mol/entity_io_crd_handler.cc
+++ b/modules/io/src/mol/entity_io_crd_handler.cc
@@ -24,7 +24,7 @@
 #include <iomanip>
 
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/format.hpp>
@@ -60,7 +60,7 @@ CRDReader::CRDReader(const boost::filesystem::path& loc):
   infile_(loc),
   in_()
 {
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in_.push(boost::iostreams::gzip_decompressor());    
   }
   in_.push(infile_);  
diff --git a/modules/io/src/mol/entity_io_mae_handler.cc b/modules/io/src/mol/entity_io_mae_handler.cc
index 98e4a830f..072083b88 100644
--- a/modules/io/src/mol/entity_io_mae_handler.cc
+++ b/modules/io/src/mol/entity_io_mae_handler.cc
@@ -28,7 +28,7 @@
 #include <ctype.h>
 
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/format.hpp>
 #include <boost/regex.hpp>
@@ -57,7 +57,7 @@ MAEReader::MAEReader(const boost::filesystem::path& loc):
   infile_(loc),
   in_()
 {
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in_.push(boost::iostreams::gzip_decompressor());    
   }
   in_.push(infile_);  
diff --git a/modules/io/src/mol/entity_io_mmcif_handler.cc b/modules/io/src/mol/entity_io_mmcif_handler.cc
index fe5674788..7538e3d63 100644
--- a/modules/io/src/mol/entity_io_mmcif_handler.cc
+++ b/modules/io/src/mol/entity_io_mmcif_handler.cc
@@ -24,7 +24,7 @@
 #include <iomanip>
 
 #include <boost/algorithm/string.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/format.hpp>
 #include <boost/lexical_cast.hpp>
 
diff --git a/modules/io/src/mol/entity_io_pdb_handler.cc b/modules/io/src/mol/entity_io_pdb_handler.cc
index f9f76eca6..a53e94cdc 100644
--- a/modules/io/src/mol/entity_io_pdb_handler.cc
+++ b/modules/io/src/mol/entity_io_pdb_handler.cc
@@ -24,7 +24,7 @@
 #include <iomanip>
 
 #include <boost/algorithm/string.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/format.hpp>
 #include <boost/lexical_cast.hpp>
 
@@ -49,7 +49,7 @@ void EntityIOPDBHandler::Export(const mol::EntityView& ent,
                                 const boost::filesystem::path& loc) const 
 {
   PDBWriter writer(loc, IOProfileRegistry::Instance().GetDefault());
-  if (boost::iequals(boost::filesystem::extension(loc), ".pqr")) {
+  if (boost::iequals(boost::filesystem::path(loc).extension().string(), ".pqr")) {
     writer.SetIsPQR(true);
   }
   writer.Write(ent);
diff --git a/modules/io/src/mol/entity_io_pqr_handler.cc b/modules/io/src/mol/entity_io_pqr_handler.cc
index ada62fb92..9dadb9708 100644
--- a/modules/io/src/mol/entity_io_pqr_handler.cc
+++ b/modules/io/src/mol/entity_io_pqr_handler.cc
@@ -25,7 +25,7 @@
 #include <iomanip>
 
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/format.hpp>
@@ -58,7 +58,7 @@ PQRReader::PQRReader(const boost::filesystem::path& loc):
   infile_(loc),
   in_()
 {
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in_.push(boost::iostreams::gzip_decompressor());    
   }
   in_.push(infile_);  
diff --git a/modules/io/src/mol/pdb_reader.cc b/modules/io/src/mol/pdb_reader.cc
index af1e5f729..0a8934226 100644
--- a/modules/io/src/mol/pdb_reader.cc
+++ b/modules/io/src/mol/pdb_reader.cc
@@ -17,7 +17,7 @@
 // 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 //------------------------------------------------------------------------------
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/algorithm/string/trim.hpp>
 
@@ -88,7 +88,7 @@ void PDBReader::Init(const boost::filesystem::path& loc)
   warned_rule_based_=false;
   charmm_style_=profile_.dialect=="CHARMM";
   num_model_records_=0;
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in_.push(boost::iostreams::gzip_decompressor());
   }
   in_.push(instream_);
@@ -96,7 +96,7 @@ void PDBReader::Init(const boost::filesystem::path& loc)
                      std::string(strerror(errno)) +
                      ": '" + loc.string() + "'");
   line_num_=0;
-  if(boost::iequals(boost::filesystem::extension(loc), ".pqr")) {
+  if(boost::iequals(boost::filesystem::path(loc).extension().string(), ".pqr")) {
     is_pqr_=true;
   } else {
     is_pqr_=false;
diff --git a/modules/io/src/mol/pdb_writer.cc b/modules/io/src/mol/pdb_writer.cc
index 265a8a024..0ff4d4469 100644
--- a/modules/io/src/mol/pdb_writer.cc
+++ b/modules/io/src/mol/pdb_writer.cc
@@ -25,7 +25,7 @@
 
 #include <boost/format.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 
 #include <ost/base.hh>
@@ -392,10 +392,10 @@ PDBWriter::PDBWriter(const boost::filesystem::path& filename,
   charmm_style_(profile.dialect=="CHARMM"), is_pqr_(false),
   profile_(profile), filename_("")
 {
-  if (boost::iequals(".pqr", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".pqr", boost::filesystem::path(filename).extension().string())) {
     is_pqr_=true;
   }
-  if (boost::iequals(".gz", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".gz", boost::filesystem::path(filename).extension().string())) {
     out_.push(boost::iostreams::gzip_compressor());
   }
   out_.push(outstream_);
@@ -411,10 +411,10 @@ PDBWriter::PDBWriter(const String& filename, const IOProfile& profile):
                       std::string(strerror(errno)) +
                       ": '" + filename + "'");
   }
-  if (boost::iequals(".pqr", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".pqr", boost::filesystem::path(filename).extension().string())) {
     is_pqr_=true;
   }
-  if (boost::iequals(".gz", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".gz", boost::filesystem::path(filename).extension().string())) {
     out_.push(boost::iostreams::gzip_compressor());
   }
   out_.push(outstream_);
diff --git a/modules/io/src/mol/sdf_reader.cc b/modules/io/src/mol/sdf_reader.cc
index edafc0ff1..9699125f2 100644
--- a/modules/io/src/mol/sdf_reader.cc
+++ b/modules/io/src/mol/sdf_reader.cc
@@ -21,7 +21,7 @@
  */
 
 #include <boost/algorithm/string.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/format.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
 #include <boost/lexical_cast.hpp>
@@ -122,7 +122,7 @@ void SDFReader::Import(mol::EntityHandle& ent)
 
 void SDFReader::ClearState(const boost::filesystem::path& loc)
 {
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in_.push(boost::iostreams::gzip_decompressor());
   }
   in_.push(instream_);
diff --git a/modules/io/src/mol/sdf_writer.hh b/modules/io/src/mol/sdf_writer.hh
index 929be1d35..36cc8bd29 100644
--- a/modules/io/src/mol/sdf_writer.hh
+++ b/modules/io/src/mol/sdf_writer.hh
@@ -27,7 +27,7 @@
 #include <iomanip>
 
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/format.hpp>
diff --git a/modules/io/src/mol/star_writer.cc b/modules/io/src/mol/star_writer.cc
index 73ff08f94..f426848f3 100644
--- a/modules/io/src/mol/star_writer.cc
+++ b/modules/io/src/mol/star_writer.cc
@@ -49,7 +49,7 @@ void StarWriter::Write(const String& data_name, const String& filename) {
                         ": '" + filename + "'");
   }
   boost::iostreams::filtering_stream<boost::iostreams::output> stream;
-  if (boost::iequals(".gz", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".gz", boost::filesystem::path(filename).extension().string())) {
     stream.push(boost::iostreams::gzip_compressor());
   }
   stream.push(fstream);
diff --git a/modules/io/src/mol/surface_io_msms_handler.cc b/modules/io/src/mol/surface_io_msms_handler.cc
index 25c45b925..19cc7d766 100644
--- a/modules/io/src/mol/surface_io_msms_handler.cc
+++ b/modules/io/src/mol/surface_io_msms_handler.cc
@@ -22,7 +22,7 @@
 #include <sstream>
 
 #include <ost/log.hh>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include "surface_io_msms_handler.hh"
 
 namespace bf = boost::filesystem;
@@ -33,8 +33,11 @@ namespace {
 
 std::pair<bf::path,bf::path> detect_files(const bf::path& loc)
 {
-  return std::make_pair(bf::change_extension(loc, ".vert"),
-                        bf::change_extension(loc, ".face"));
+  bf::path v = loc;
+  v.replace_extension(".vert");
+  bf::path f = loc;
+  f.replace_extension(".face");
+  return std::make_pair(v, f);
 }
 
 }
diff --git a/modules/io/src/seq/clustal_io_handler.cc b/modules/io/src/seq/clustal_io_handler.cc
index 8eb8eb650..d4d30a83e 100644
--- a/modules/io/src/seq/clustal_io_handler.cc
+++ b/modules/io/src/seq/clustal_io_handler.cc
@@ -20,7 +20,7 @@
 #include <map>
 #include <ost/message.hh>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/format.hpp>
 
diff --git a/modules/io/src/seq/fasta_io_handler.cc b/modules/io/src/seq/fasta_io_handler.cc
index 61bb43ba0..c35119c53 100644
--- a/modules/io/src/seq/fasta_io_handler.cc
+++ b/modules/io/src/seq/fasta_io_handler.cc
@@ -19,7 +19,7 @@
 #include "fasta_io_handler.hh"
 #include <ost/message.hh>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/format.hpp>
 
diff --git a/modules/io/src/seq/hhm_io_handler.cc b/modules/io/src/seq/hhm_io_handler.cc
index 3d976a571..2cb2d7ef8 100644
--- a/modules/io/src/seq/hhm_io_handler.cc
+++ b/modules/io/src/seq/hhm_io_handler.cc
@@ -24,7 +24,7 @@
 #include "hhm_io_handler.hh"
 
 #include <boost/algorithm/string/predicate.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/filesystem/fstream.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
 #include <boost/iostreams/filtering_stream.hpp>
@@ -130,7 +130,7 @@ void HhmIOHandler::Import(seq::ProfileHandle& prof,
     throw IOException("Could not open " + loc.string());
   }
   // add unzip if necessary
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in.push(boost::iostreams::gzip_decompressor());
   }
   in.push(stream);
diff --git a/modules/io/src/seq/pir_io_handler.cc b/modules/io/src/seq/pir_io_handler.cc
index a84710b7c..34ba6f287 100644
--- a/modules/io/src/seq/pir_io_handler.cc
+++ b/modules/io/src/seq/pir_io_handler.cc
@@ -19,7 +19,7 @@
 #include "pir_io_handler.hh"
 #include <ost/message.hh>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/format.hpp>
 
diff --git a/modules/io/src/seq/promod_io_handler.cc b/modules/io/src/seq/promod_io_handler.cc
index 612ca2b10..3c402913e 100644
--- a/modules/io/src/seq/promod_io_handler.cc
+++ b/modules/io/src/seq/promod_io_handler.cc
@@ -24,7 +24,7 @@
 
 #include <ost/message.hh>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 #include <boost/format.hpp>
 #include <boost/algorithm/string/erase.hpp>
diff --git a/modules/io/src/seq/pssm_io_handler.cc b/modules/io/src/seq/pssm_io_handler.cc
index 892bf10c7..c7813dfe4 100644
--- a/modules/io/src/seq/pssm_io_handler.cc
+++ b/modules/io/src/seq/pssm_io_handler.cc
@@ -24,7 +24,7 @@
 #include "pssm_io_handler.hh"
 
 #include <boost/algorithm/string/predicate.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/filesystem/fstream.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
 #include <boost/iostreams/filtering_stream.hpp>
@@ -44,7 +44,7 @@ void PssmIOHandler::Import(seq::ProfileHandle& prof,
     throw IOException("Could not open " + loc.string());
   }
   // add unzip if necessary
-  if (boost::iequals(".gz", boost::filesystem::extension(loc))) {
+  if (boost::iequals(".gz", boost::filesystem::path(loc).extension().string())) {
     in.push(boost::iostreams::gzip_decompressor());
   }
   in.push(stream);
diff --git a/modules/mol/alg/src/entity_to_density.cc b/modules/mol/alg/src/entity_to_density.cc
index b6ac49efc..201b7dfc8 100644
--- a/modules/mol/alg/src/entity_to_density.cc
+++ b/modules/mol/alg/src/entity_to_density.cc
@@ -2,7 +2,7 @@
 #include <cmath>
 
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/algorithm/string.hpp>
 
 #include <ost/log.hh>
diff --git a/modules/mol/alg/src/lddt.cc b/modules/mol/alg/src/lddt.cc
index 4b913efdb..07c01826b 100644
--- a/modules/mol/alg/src/lddt.cc
+++ b/modules/mol/alg/src/lddt.cc
@@ -24,7 +24,7 @@
 #endif
 #include <boost/program_options.hpp>
 #include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <ost/base.hh>
 #include <ost/boost_filesystem_helper.hh>
 #include <ost/mol/chain_view.hh>
@@ -135,8 +135,8 @@ CompoundLibPtr load_compound_lib(const String& custom_path)
        "look for compounds.chemlib in the current working directory" << std::endl;
   } else {
     fs::path path_and_exe(exe_path);
-    fs::path path_only=path_and_exe.branch_path();
-    fs::path share_path = path_only.branch_path();
+    fs::path path_only=path_and_exe.parent_path();
+    fs::path share_path = path_only.parent_path();
     share_path = share_path / "share" / "openstructure" / "compounds.chemlib";
 
     String share_path_string=BFPathToString(share_path);
diff --git a/modules/mol/alg/src/local_dist_diff_test.cc b/modules/mol/alg/src/local_dist_diff_test.cc
index 1182dc375..caf6f7bca 100644
--- a/modules/mol/alg/src/local_dist_diff_test.cc
+++ b/modules/mol/alg/src/local_dist_diff_test.cc
@@ -5,7 +5,7 @@
 #include <ost/platform.hh>
 #include "local_dist_diff_test.hh"
 #include <boost/concept_check.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <ost/mol/alg/consistency_checks.hh>
 
 namespace ost { namespace mol { namespace alg {
diff --git a/modules/seq/alg/src/hmm_pseudo_counts.cc b/modules/seq/alg/src/hmm_pseudo_counts.cc
index 37d2d490b..16e0bfd9e 100644
--- a/modules/seq/alg/src/hmm_pseudo_counts.cc
+++ b/modules/seq/alg/src/hmm_pseudo_counts.cc
@@ -1,7 +1,7 @@
 #include <ost/seq/alg/hmm_pseudo_counts.hh>
 
 #include <boost/algorithm/string/predicate.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/filesystem/fstream.hpp>
 #include <boost/iostreams/filter/gzip.hpp>
 #include <boost/iostreams/filtering_stream.hpp>
@@ -143,7 +143,7 @@ ContextProfileDBPtr ContextProfileDB::FromCRF(const String& filename) {
     throw Error("Could not open " + filename);
   }
   // add unzip if necessary
-  if(boost::iequals(".gz", boost::filesystem::extension(filename))) {
+  if (boost::iequals(".gz", boost::filesystem::path(filename).extension().string())) {
     in.push(boost::iostreams::gzip_decompressor());
   }
   in.push(stream);
diff --git a/scripts/dng.in b/scripts/dng.in
index 93e7d862e..624ec98b1 100755
--- a/scripts/dng.in
+++ b/scripts/dng.in
@@ -20,14 +20,30 @@
 # Startup script for a protein-centric user interface
 # Author: Marco Biasini
 
-if [ -h "$0" ] ; then
-  SCRIPT_NAME=`readlink "$0"`
+if [ -h "$0" ]; then
+  TARGET="$0"
+  while [ -h "$TARGET" ]; do
+    DIR="$(cd -P "$(dirname "$TARGET")" && pwd)"
+    TARGET="$(readlink "$TARGET")"
+    [[ $TARGET != /* ]] && TARGET="$DIR/$TARGET"
+  done
+  SCRIPT_PATH="$DIR/$(basename "$TARGET")"
 else
-  SCRIPT_NAME="$0"
+  SCRIPT_PATH="$0"
 fi
-BIN_DIR=`dirname "$SCRIPT_NAME"`
-source "$BIN_DIR/../@LIBEXEC_PATH@/ost_config"
 
+# Get the absolute path of the script
+if command -v realpath >/dev/null 2>&1; then
+  SCRIPT_PATH="$(realpath "$SCRIPT_PATH")"
+elif command -v readlink >/dev/null 2>&1; then
+  SCRIPT_PATH="$(readlink -f "$SCRIPT_PATH")"
+else
+  # Fallback for systems without realpath or readlink
+  SCRIPT_PATH="$(cd "$(dirname "$SCRIPT_PATH")" && pwd -P)/$(basename "$SCRIPT_PATH")"
+fi
+
+BIN_DIR=$(dirname "$SCRIPT_PATH")
+source "$BIN_DIR/../@LIBEXEC_PATH@/ost_config"
 
 opts=""
 
diff --git a/scripts/ost.in b/scripts/ost.in
index b85886a39..fc48014e0 100755
--- a/scripts/ost.in
+++ b/scripts/ost.in
@@ -22,12 +22,29 @@
 # convenience wrapper for non-gui openstructure interface 'ost'
 #
 # Self detect important directories
-if [ -h "$0" ] ; then
-  SCRIPT_NAME=`readlink "$0"`
+if [ -h "$0" ]; then
+  TARGET="$0"
+  while [ -h "$TARGET" ]; do
+    DIR="$(cd -P "$(dirname "$TARGET")" && pwd)"
+    TARGET="$(readlink "$TARGET")"
+    [[ $TARGET != /* ]] && TARGET="$DIR/$TARGET"
+  done
+  SCRIPT_PATH="$DIR/$(basename "$TARGET")"
 else
-  SCRIPT_NAME="$0"
+  SCRIPT_PATH="$0"
 fi
-BIN_DIR=`dirname "$SCRIPT_NAME"`
+
+# Get the absolute path of the script
+if command -v realpath >/dev/null 2>&1; then
+  SCRIPT_PATH="$(realpath "$SCRIPT_PATH")"
+elif command -v readlink >/dev/null 2>&1; then
+  SCRIPT_PATH="$(readlink -f "$SCRIPT_PATH")"
+else
+  # Fallback for systems without realpath or readlink
+  SCRIPT_PATH="$(cd "$(dirname "$SCRIPT_PATH")" && pwd -P)/$(basename "$SCRIPT_PATH")"
+fi
+
+BIN_DIR=$(dirname "$SCRIPT_PATH")
 OST_EXEC_DIR=$(cd $BIN_DIR/../@LIBEXEC_PATH@ && pwd)
 export OST_EXEC_DIR
 
diff --git a/tools/molck/main.cc b/tools/molck/main.cc
index efed0e21f..c6dd83e13 100644
--- a/tools/molck/main.cc
+++ b/tools/molck/main.cc
@@ -1,7 +1,7 @@
 #include <unistd.h>
 #include <boost/program_options.hpp>
 #include <boost/filesystem/path.hpp>
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem.hpp>
 #include <ost/base.hh>
 #include <ost/boost_filesystem_helper.hh>
 #include <ost/platform.hh>
@@ -116,8 +116,8 @@ ost::conop::CompoundLibPtr load_compound_lib(const String& custom_path)
              "look for compounds.chemlib in the current working directory");
   } else {
     fs::path path_and_exe(exe_path);
-    fs::path path_only=path_and_exe.branch_path();
-    fs::path share_path = path_only.branch_path();
+    fs::path path_only=path_and_exe.parent_path();
+    fs::path share_path = path_only.parent_path();
     share_path = share_path / "share" / "openstructure" / "compounds.chemlib";
 
     String share_path_string=BFPathToString(share_path);
