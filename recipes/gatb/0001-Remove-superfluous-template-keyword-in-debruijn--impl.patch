--- gatb-core/src/gatb/debruijn/impl/BranchingAlgorithm.cpp
+++ gatb-core/src/gatb/debruijn/impl/BranchingAlgorithm.cpp
@@ -151,8 +151,8 @@
     void operator() (Node& node)
     {
         // We get branching nodes neighbors for the current node.
-        GraphVector<Node> successors   = graph->template successors   (node);
-        GraphVector<Node> predecessors = graph->template predecessors (node);
+        GraphVector<Node> successors   = graph->successors   (node);
+        GraphVector<Node> predecessors = graph->predecessors (node);
 
         if ( ! (successors.size()==1 && predecessors.size()==1) )
         {
--- gatb-core/src/gatb/debruijn/impl/Terminator.cpp
+++ gatb-core/src/gatb/debruijn/impl/Terminator.cpp
@@ -46,7 +46,7 @@
     : TerminatorTemplate<Node,Edge,Graph> (graph)
 {
     /** We loop over the branching nodes. */
-    GraphIterator<BranchingNode_t<Node> > itBranching = this->_graph.Graph::template iteratorBranching();
+    GraphIterator<BranchingNode_t<Node> > itBranching = this->_graph.Graph::iteratorBranching();
     for (itBranching.first(); !itBranching.isDone(); itBranching.next())
     {
         /** We add the current branching node into the map. */
@@ -196,7 +196,7 @@
     }
 
     /** We loop the neighbors edges of the current node. */
-    GraphVector<Edge> neighbors = this->_graph.template neighborsEdge(node.kmer);
+    GraphVector<Edge> neighbors = this->_graph.neighborsEdge(node.kmer);
 
     /** We loop the branching neighbors. */
     for (size_t i=0; i<neighbors.size(); i++)
