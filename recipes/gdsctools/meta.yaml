{% set name="gdsctools" %}
{% set version="0.17.1" %}


package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  md5: 6eea5d390ebc99b25758f962b15be906

build:
  skip: True # [py34]
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    - gdsctools_anova=gdsctools.scripts.anova:main
    - gdsctools_regression=gdsctools.scripts.regression:main

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - numpy
    - numexpr
    - matplotlib >=1.4.3
    - pandas >=0.19
    - easydev >=0.9.34
    - xlrd
    - scipy
    - colormap >=1.0
    - jinja2 <=2.9.1
    - statsmodels
    - scikit-learn
    - reports >=0.3.0
    - biokit >=0.4
    - colorlog
    - snakemake # [py35]

test:
  # Python imports
  imports:
     - gdsctools
    #- gdsctools.data
    #- gdsctools.data.css
    #- gdsctools.data.images
    #- gdsctools.data.javascript
    #- gdsctools.data.templates
    #- gdsctools.pipelines
    #- gdsctools.scripts

  commands:
    - gdsctools_anova --help
    - gdsctools_regression --help # [py35]

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: ['http://pypi.python.org/pypi/gdsctools']
  license: "BSD 3-clause"
  summary: 'Set of tools and pipelines to analyse GDSC data (cancerrxgene.org)'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
