recipe_sha: 7912943d91e9bbca70cf5329534ead53618ac3d3c42509ec94f6ec5160db4c94  # The hash of the recipe's meta.yaml at which this recipe failed to build.
skiplist: true # Set to true to skiplist this recipe so that it will be ignored as long as its latest commit is the one given above.
log: |-
  [ 25%] Building CXX object CMakeFiles/gtest.dir/src/gtest-all.cc.o
  [ 50%] Linking CXX static library libgtest.a
  [ 50%] Built target gtest
  [ 75%] Building CXX object CMakeFiles/gtest_main.dir/src/gtest_main.cc.o
  [100%] Linking CXX static library libgtest_main.a
  [100%] Built target gtest_main
  [  9%] No install step for 'gtest160'
  [ 10%] Completed 'gtest160'
  [ 10%] Built target gtest160
  [ 12%] Creating directories for 'boost-1.55'
  [ 13%] Performing download step (verify and extract) for 'boost-1.55'
  -- extracting...
       src='$SRC_DIR/vendor/boost-1.55-bamrc.tar.gz'
       dst='$SRC_DIR/build/vendor/boost-src'
  -- extracting... [tar xfz]
  -- extracting... [analysis]
  -- extracting... [rename]
  -- extracting... [clean up]
  -- extracting... done
  [ 14%] No update step for 'boost-1.55'
  [ 16%] No patch step for 'boost-1.55'
  [ 17%] Performing configure step for 'boost-1.55'
  Building B2 engine..

  ###
  ###
  ### Using 'clang' toolset.
  ###
  ###

  clang version 18.1.8
  Target: x86_64-apple-darwin22.6.0
  Thread model: posix
  InstalledDir: $BUILD_PREFIX/bin

  ###
  ###

  > clang -x c -std=c11 -O3 -s -Wno-deprecated-declarations -DNDEBUG bindjam.cpp builtins.cpp class.cpp command.cpp compile.cpp constants.cpp cwd.cpp debug.cpp debugger.cpp execcmd.cpp execnt.cpp execunix.cpp filent.cpp filesys.cpp fileunix.cpp frames.cpp function.cpp glob.cpp hash.cpp hcache.cpp hdrmacro.cpp headers.cpp jam_strings.cpp jam.cpp jamgram.cpp lists.cpp make.cpp make1.cpp md5.cpp mem.cpp modules.cpp native.cpp option.cpp output.cpp parse.cpp pathnt.cpp pathsys.cpp pathunix.cpp regexp.cpp rules.cpp scan.cpp search.cpp startup.cpp tasks.cpp timestamp.cpp value.cpp variable.cpp w32_getreg.cpp mod_jam_builtin.cpp mod_jam_class.cpp mod_jam_errors.cpp mod_jam_modules.cpp mod_order.cpp mod_path.cpp mod_property_set.cpp mod_regex.cpp mod_sequence.cpp mod_set.cpp mod_string.cpp mod_summary.cpp mod_sysinfo.cpp mod_version.cpp -o b2
  tools/build/src/engine/b2
  Detecting Python version... 3.10
  Detecting Python root... /opt/mambaforge/envs/bioconda
  Unicode/ICU support for Boost.Regex?... not found.
  Generating B2 configuration in project-config.jam for clang...

  Bootstrapping is done. To build, run:

      ./b2

  To generate header files, run:

      ./b2 headers

  The configuration generated uses clang to build by default. If that is
  unintended either use the --with-toolset option or adjust configuration, by
  editing 'project-config.jam'.

  Further information:

     - Command line help:
       ./b2 --help

     - Getting started guide:
       http://www.boost.org/more/getting_started/unix-variants.html

     - B2 documentation:
       http://www.boost.org/build/

  [ 18%] Performing build step for 'boost-1.55'
  Building boost, build log is $SRC_DIR/build/vendor/boost-src/build.log
  [ 20%] Performing install step for 'boost-1.55'
  [ 21%] Completed 'boost-1.55'
  [ 21%] Built target boost-1.55
  [ 21%] Built target __bc_predepends
  [ 22%] Creating directories for 'zlib'
  [ 24%] Performing download step (verify and extract) for 'zlib'
  -- extracting...
       src='$SRC_DIR/vendor/zlib-1.2.11.tar.gz'
       dst='$SRC_DIR/build/vendor/zlib-src'
  -- extracting... [tar xfz]
  -- extracting... [analysis]
  -- extracting... [rename]
  -- extracting... [clean up]
  -- extracting... done
  [ 25%] No update step for 'zlib'
  [ 26%] No patch step for 'zlib'
  [ 28%] Performing configure step for 'zlib'
  Checking for shared library support...
  Building shared library libz.1.2.11.dylib with x86_64-apple-darwin13.4.0-clang.
  Checking for size_t... Yes.
  Checking for off64_t... No.
  Checking for fseeko... Yes.
  Checking for strerror... Yes.
  Checking for unistd.h... Yes.
  Checking for stdarg.h... Yes.
  Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
  Checking for vsnprintf() in stdio.h... Yes.
  Checking for return value of vsnprintf()... Yes.
  Checking for attribute(visibility) support... Yes.
  [ 29%] Performing build step for 'zlib'
# Last 100 lines of the build log.
category: |-
  compiler error
