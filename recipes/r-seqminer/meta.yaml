{% set version = '8.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-seqminer
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/seqminer_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/seqminer/seqminer_{{ version }}.tar.gz
  sha256: d184d7a12019c4e65b12cca2205ffc35e15c8d58813417298fea83c52b925f02

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, SKAT
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}sed               # [win]
    - {{posix}}grep              # [win]
    - {{posix}}autoconf
    - {{posix}}automake          # [not win]
    - {{posix}}automake-wrapper  # [win]
    - {{posix}}pkg-config
    - {{posix}}make
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base

  run:
    - r-base
    - {{native}}gcc-libs         # [win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('seqminer')"           # [not win]
    - "\"%R%\" -e \"library('seqminer')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://seqminer.genomic.codes
  license: GPL-3
  summary: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis
    results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal
    ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables
    from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow
    based on Makefile.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'
    - LICENSE

# The original CRAN metadata for this package was:

# Package: seqminer
# Type: Package
# Title: Efficiently Read Sequence Data (VCF Format, BCF Format, METAL Format and BGEN Format) into R
# Version: 8.0
# Date: 2020-2-28
# Authors@R: c(person("Xiaowei", "Zhan", email = "zhanxw@gmail.com", role = c("aut", "cre")), person("Dajiang", "Liu", email = "dajiang.liu@gmail.com", role = "aut"), person("Attractive Chaos", email = "attractor@live.co.uk", role = "cph", comment = "We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics."), person("Broad Institute / Massachusetts Institute of Technology", role = "cph"), person("Genome Research Ltd (GRL)", role = "cph"), person("Facebook, Inc", role = "cph"))
# Maintainer: Xiaowei Zhan <zhanxw@gmail.com>
# Description: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile.
# Copyright: We have used the following software and made minimal necessary changes: tabix, Heng Li <lh3@live.co.uk> (MIT license), SQLite (Public Domain), Zstandard (MIT license). For tabix, we removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics. For zstandard, we removed compiler (clang, MSVC) specific preprocessing flags.
# License: GPL | file LICENSE
# URL: http://seqminer.genomic.codes
# BugReports: https://github.com/zhanxw/seqminer/issues
# Packaged: 2020-03-01 01:51:14 UTC; zhanxw
# Repository: CRAN
# Suggests: testthat, SKAT
# SystemRequirements: C++11, zlib headers and libraries, GNU make, optionally also bzip2 and POSIX-compliant regex functions.
# NeedsCompilation: yes
# RoxygenNote: 6.1.1
# Encoding: UTF-8
# Author: Xiaowei Zhan [aut, cre], Dajiang Liu [aut], Attractive Chaos [cph] (We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.), Broad Institute / Massachusetts Institute of Technology [cph], Genome Research Ltd (GRL) [cph], Facebook, Inc [cph]
# Date/Publication: 2020-03-02 12:10:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
