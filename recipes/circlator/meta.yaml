package:
  name: circlator
  version: "1.1.2"

source:
  fn: circlator-1.1.2.tar.gz
  url: https://pypi.python.org/packages/source/c/circlator/circlator-1.1.2.tar.gz
  md5: 55a7ed5ab1795d04ba04cc0e80f67695
#  patches:
   # List any patch files here
   # - fix.patch

build:
  skip: True # [py27 or osx]
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - circlator = circlator:main
    #
    # Would create an entry point called circlator that calls circlator.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - openpyxl
    - pyfastaq >=3.10.0
    - pysam >=0.8.1
    - pymummer >=0.6.1
    - bio_assembly_refinement >=0.4.0

  run:
    - python
    - openpyxl
    - pyfastaq >=3.10.0
    - pysam >=0.8.1
    - pymummer >=0.6.1
    - bio_assembly_refinement >=0.4.0
    - bwa
    - prodigal
    - samtools
    - spades

test:
  # Python imports
  imports:
    - circlator
    - circlator.tasks

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - nose >=1.3
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/sanger-pathogens/circlator
  license: GNU General Public License v3 (GPLv3)
  summary: 'circlator: a tool to circularise genome assemblies'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
