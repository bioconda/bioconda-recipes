--- src/CumulativeSeqProb.h.orig	2024-10-07 12:43:16.904000000 +0000
+++ src/CumulativeSeqProb.h	2024-10-07 12:54:32.420000000 +0000
@@ -1,21 +1,22 @@
 #ifndef __CUMULATIVESEQPROB_H__
 #define __CUMULATIVESEQPROB_H__
 
+#include <math.h>
 #include "ME_REG.h"
 #include "Config.h"
 #include "FileManagement.h"
 
 struct SeqPath;
 
-const float qual_levels[]		= {0.10,0.25,0.5,0.75,0.9,0.95,0.98,POS_INF};
+const float qual_levels[]		= {0.10,0.25,0.5,0.75,0.9,0.95,0.98,INFINITY};
 const int num_qual_levels		= sizeof(qual_levels)/sizeof(float);
 const int rank_levels[]			= {0,1,2,4,8,16,32,64,128,256,POS_INF}; // at these ranks we fill the 
 const int num_rank_levels		= sizeof(rank_levels)/sizeof(int);
-const float rank_score_levels[] = {-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,POS_INF};
+const float rank_score_levels[] = {-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,INFINITY};
 const int num_rank_score_levels = sizeof(rank_score_levels)/sizeof(float);
-const float pnv_score_levels[]	= {0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,POS_INF};
+const float pnv_score_levels[]	= {0.f,10.f,20.f,30.f,40.f,50.f,60.f,70.f,80.f,90.f,100.f,110.f,120.f,130.f,140.f,INFINITY};
 const int num_pnv_score_levels	= sizeof(pnv_score_levels)/sizeof(float);
-const float avg_prob_levels[]	= {0.1,0.25,0.5,0.75,0.9,0.95,POS_INF};
+const float avg_prob_levels[]	= {0.1,0.25,0.5,0.75,0.9,0.95,INFINITY};
 const int num_avg_prob_levels	= sizeof(avg_prob_levels)/sizeof(float);
 const int special_ranks[]		= {0,8,128};	// at these ranks we fill the big set of rank score and pnv score features
 const int num_special_ranks		= sizeof(special_ranks)/sizeof(int);
