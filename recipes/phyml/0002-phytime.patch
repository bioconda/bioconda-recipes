diff --git a/src/mcmc.c b/src/mcmc.c
index 8670bf5..87cba01 100644
--- a/src/mcmc.c
+++ b/src/mcmc.c
@@ -1598,43 +1598,47 @@ void MCMC_Root_Time(t_tree *tree, int print)
       
 #ifdef PHYREX
       /* if(tree->mcmc->run > 4243300) */
-      /*   { */
-      /*     PhyML_Printf("\n. %c [%4d] t:%1f->%1f tmin:%12f tmax:%12f t1:%f t2:%f  R: %12f alnL:%10f->%10f[%d]  tlnL: %10f->%10f[%d]  glnL: %10f->%10f[%d]  (%10f->%10f,%10f->%10f) rlnL: %10f->%10f[%d] hr: %f ratio: %10f", */
-      /*                  (tree->aux_tree != NULL) ? '*' : 'X', */
-      /*                  tree->mcmc->run, */
-      /*                  t0_cur,t0_new, */
-      /*                  t_min,t_max, */
-      /*                  t1,t2, */
-      /*                  tree->rates->norm_fact, */
-      /*                  cur_lnL_seq,new_lnL_seq,tree->eval_alnL, */
-      /*                  cur_lnL_time,new_lnL_time,tree->eval_glnL, */
-      /*                  cur_lnL_loc,new_lnL_loc,tree->eval_glnL, */
-      /*                  cur_lnL_loc_loc,new_lnL_loc_loc, */
-      /*                  cur_lnL_loc_veloc,new_lnL_loc_veloc, */
-      /*                  cur_lnL_rate,new_lnL_rate,tree->eval_rlnL, */
-      /*                  hr, */
-      /*                  ratio); */
-      /*   } */
-      /* if(tree->aux_tree != NULL) */
-        /* { */
-          /* PhyML_Printf("\n."); */
-          /* PhyML_Printf("\n. %c [%4d] \n. t: %1f->%1f t1:%f t2: %f \n. r1: %10f->%10f r2: %10f->%10f \n. R: %12f alnL:%10f->%10f[%d] \n. tlnL: %10f->%10f[%d] \n. glnL: %10f->%10f[%d] \n. rlnL: %10f->%10f[%d] \n. tune: %10f hr: %f ratio: %10f K: %10f rate_failed: %d", */
-          /*              (tree->aux_tree != NULL) ? '*' : 'X', */
-          /*              tree->mcmc->run, */
-          /*              t0_cur,t0_new, */
-          /*              t1,t2, */
-          /*              r1_cur,r1_new, */
-          /*              r2_cur,r2_new, */
-          /*              tree->rates->norm_fact, */
-          /*              cur_lnL_seq,new_lnL_seq,tree->eval_alnL, */
-          /*              cur_lnL_time,new_lnL_time,tree->eval_glnL, */
-          /*              cur_lnL_loc,new_lnL_loc,tree->eval_glnL, */
-          /*              cur_lnL_rate,new_lnL_rate,tree->eval_rlnL, */
-          /*              tune, */
-          /*              hr, */
-          /*              ratio,K,rate_failed); */
-          /* PhyML_Printf("\n."); */
-        /* } */
+         {
+           PhyML_Printf("\n. %c [%4d] t:%1f->%1f tmin:%12f tmax:%12f t1:%f t2:%f  R: %12f alnL:%10f->%10f[%d]  tlnL: %10f->%10f[%d]  glnL: %10f->%10f[%d]  (%10f->%10f,%10f->%10f) rlnL: %10f->%10f[%d] hr: %f ratio: %10f",
+                        (tree->aux_tree != NULL) ? '*' : 'X',
+                        tree->mcmc->run,
+                        t0_cur,t0_new,
+                        t_min,t_max,
+                        t1,t2,
+                        tree->rates->norm_fact,
+                        cur_lnL_seq,new_lnL_seq,tree->eval_alnL,
+                        cur_lnL_time,new_lnL_time,tree->eval_glnL,
+                        cur_lnL_loc,new_lnL_loc,tree->eval_glnL,
+                        cur_lnL_loc_loc,new_lnL_loc_loc,
+                        cur_lnL_loc_veloc,new_lnL_loc_veloc,
+                        cur_lnL_rate,new_lnL_rate,tree->eval_rlnL,
+                        hr,
+                        ratio);
+         }
+       /* if(tree->aux_tree != NULL) */
+         {
+           PhyML_Printf("\n.");
+           PhyML_Printf("\n. %c [%4d] \n. t: %1f->%1f t1:%f t2: %f \n. r1: %10f->%10f r2: %10f->%10f \n. R: %12f alnL:%10f->%10f[%d] \n. tlnL: %10f->%10f[%d] ",
+                        (tree->aux_tree != NULL) ? '*' : 'X',
+                        tree->mcmc->run,
+                        t0_cur,t0_new,
+                        t1,t2,
+                        r1_cur,r1_new,
+                        r2_cur,r2_new,
+                        tree->rates->norm_fact,
+                        cur_lnL_seq,new_lnL_seq,tree->eval_alnL,
+                        cur_lnL_time,new_lnL_time,tree->eval_glnL);
+#ifdef PHYREX
+	   PhyML_Printf("\n. glnL: %10f->%10f[%d] ",
+                        cur_lnL_loc,new_lnL_loc,tree->eval_glnL);
+#endif
+	   PhyML_Printf("\n. rlnL: %10f->%10f[%d] \n. tune: %10f hr: %f [%f,%f] [%f,%f,%f] ratio: %10f K: %10f failed: %d",
+                        cur_lnL_rate,new_lnL_rate,tree->eval_rlnL,
+                        tune,
+                        hr,
+                        ratio,K,rate_failed);
+           PhyML_Printf("\n.");
+         }
 #endif
       
       assert(isnan(u) == NO && isinf(fabs(u)) == NO);
