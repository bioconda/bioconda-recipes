--- VIBRANT_run.py	2020-01-20 13:16:42.000000000 -0600
+++ VIBRANT_run.py.new	2020-01-22 16:21:45.464624906 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
@@ -26,7 +26,7 @@
 import numpy as np
 import os
 
-vibrant_path = str(os.path.dirname(os.path.abspath(__file__)))
+vibrant_path = str(os.getenv("VIBRANT_DATA_PATH"))
 working_path = str(os.getcwd())
 
 start = time.time()
@@ -34,7 +34,7 @@
 
 start_time = str(datetime.datetime.now().time()).rsplit(".",1)[0]
 
-vibrant = argparse.ArgumentParser(description='Usage: python3 VIBRANT_run.py -i <input_file> [options]. VIBRANT identifies bacterial and archaeal viruses (phages) from assembled metagenomic scaffolds or whole genomes, including the excision of integrated proviruses. VIBRANT also performs curation of identified viral scaffolds, estimation of viral genome completeness and analysis of viral metabolic capabilities.')
+vibrant = argparse.ArgumentParser(description='Usage: VIBRANT_run.py -i <input_file> [options]. VIBRANT identifies bacterial and archaeal viruses (phages) from assembled metagenomic scaffolds or whole genomes, including the excision of integrated proviruses. VIBRANT also performs curation of identified viral scaffolds, estimation of viral genome completeness and analysis of viral metabolic capabilities.')
 vibrant.add_argument('--version', action='version', version='VIBRANT v1.0.1')
 
 ####### Required
@@ -48,16 +48,16 @@
 vibrant.add_argument('-o', type=str, nargs=1, default='4', help='number of ORFs per scaffold to limit input sequences [default=4, can increase but not decrease]')
 vibrant.add_argument('-virome', action='store_true', help='use this setting if dataset is known to be comprised mainly of viruses. More sensitive to viruses, less sensitive to false identifications [default=off]')
 vibrant.add_argument('-no_plot', action='store_true', help='suppress the generation of summary plots [default=off]')
-vibrant.add_argument('-k', type=str, nargs=1, default=str(vibrant_path) + '/databases/KEGG_profiles_prokaryotes.HMM', help='path to KEGG HMMs (if moved from default location)')
-vibrant.add_argument('-p', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_v32.HMM', help='path to Pfam HMMs (if moved from default location)')
-vibrant.add_argument('-v', type=str, nargs=1, default=str(vibrant_path) + '/databases/VOGDB94_phage.HMM', help='path to VOG HMMs (if moved from default location)')
-vibrant.add_argument('-e', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_plasmid_v32.HMM', help='path to plasmid HMMs (if moved from default location)')
-vibrant.add_argument('-a', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_phage_v32.HMM', help='path to viral-subset Pfam HMMs (if moved from default location)')
-vibrant.add_argument('-c', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_categories.tsv', help='path to VIBRANT categories file (if moved from default location)')
-vibrant.add_argument('-n', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_names.tsv', help='path to VIBRANT annotation to name file (if moved from default location)')
-vibrant.add_argument('-s', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_KEGG_pathways_summary.tsv', help='path to VIBRANT summary of KEGG metabolism file (if moved from default location)')
-vibrant.add_argument('-m', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_machine_model.sav', help='path to VIBRANT neural network machine learning model (if moved from default location)')
-vibrant.add_argument('-g', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_AMGs.tsv', help='path to VIBRANT AMGs file (if moved from default location)')
+vibrant.add_argument('-k', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/KEGG_profiles_prokaryotes.HMM', help='path to KEGG HMMs (if moved from default location)')
+vibrant.add_argument('-p', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_v32.HMM', help='path to Pfam HMMs (if moved from default location)')
+vibrant.add_argument('-v', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/VOGDB94_phage.HMM', help='path to VOG HMMs (if moved from default location)')
+vibrant.add_argument('-e', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_plasmid_v32.HMM', help='path to plasmid HMMs (if moved from default location)')
+vibrant.add_argument('-a', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_phage_v32.HMM', help='path to viral-subset Pfam HMMs (if moved from default location)')
+vibrant.add_argument('-c', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_categories.tsv', help='path to VIBRANT categories file (if moved from default location)')
+vibrant.add_argument('-n', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_names.tsv', help='path to VIBRANT annotation to name file (if moved from default location)')
+vibrant.add_argument('-s', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_KEGG_pathways_summary.tsv', help='path to VIBRANT summary of KEGG metabolism file (if moved from default location)')
+vibrant.add_argument('-m', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_machine_model.sav', help='path to VIBRANT neural network machine learning model (if moved from default location)')
+vibrant.add_argument('-g', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_AMGs.tsv', help='path to VIBRANT AMGs file (if moved from default location)')
 args = vibrant.parse_args()
 
 if type(args.f) == str:
@@ -211,9 +211,9 @@
 p_list = []
 while n < len(parallels2):
 	if format == "nucl":
-		execute = str(vibrant_path) + '/scripts/VIBRANT_extract_nucleotide.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".fna " + str(args.i[0]) + " " + str(lim_low)
+		execute = 'VIBRANT_extract_nucleotide.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".fna " + str(args.i[0]) + " " + str(lim_low)
 	elif format == "prot":
-		execute = str(vibrant_path) + '/scripts/VIBRANT_extract_protein.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".faa " + str(args.i[0])
+		execute = 'VIBRANT_extract_protein.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".faa " + str(args.i[0])
 	p = subprocess.Popen(execute, shell=True)
 	p_list.append(p)
 	n += 1
@@ -258,7 +258,7 @@
 n = 0
 p_list = []
 while n < len(listing2):
-    execute = str(vibrant_path) + '/scripts/VIBRANT_annotation.py -i ' + str(listing2[n]) + str(command)
+    execute = 'VIBRANT_annotation.py -i ' + str(listing2[n]) + str(command)
     p = subprocess.Popen(execute, shell=True)
     p_list.append(p)
     n += 1
--- scripts/VIBRANT_annotation.py	2020-01-20 13:16:42.000000000 -0600
+++ scripts/VIBRANT_annotation.py.new	2020-01-22 14:47:57.314174650 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- scripts/VIBRANT_extract_nucleotide.py	2020-01-20 13:16:42.000000000 -0600
+++ scripts/VIBRANT_extract_nucleotide.py.new	2020-01-22 14:48:20.915247640 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- scripts/VIBRANT_extract_protein.py	2020-01-20 13:16:42.000000000 -0600
+++ scripts/VIBRANT_extract_protein.py.new	2020-01-22 14:48:42.954315796 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- databases/VIBRANT_setup.py	2020-01-20 13:16:42.000000000 -0600
+++ databases/VIBRANT_setup.py.new	2020-01-22 14:50:21.182619572 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT
@@ -14,7 +14,7 @@
 import sys
 from io import StringIO
 
-vibrant = argparse.ArgumentParser(description='Usage: python3 VIBRANT_setup.py.')
+vibrant = argparse.ArgumentParser(description='Usage: VIBRANT_setup.py.')
 vibrant.add_argument('-force', action='store_true', help='use this setting if this script is exiting and telling you to install a package/program that you know is already installed [default=off]')
 args = vibrant.parse_args()
 
--- databases/VIBRANT_test_setup.py	2020-01-20 13:16:42.000000000 -0600
+++ databases/VIBRANT_test_setup.py.new	2020-01-22 14:52:40.087049143 -0600
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT
@@ -121,5 +121,5 @@
 
 if error == 0:
     print("\n")
-    print("VIBRANT v1.0.0 is good to go!")
+    print("VIBRANT v1.0.1 is good to go!")
     print("\n")
