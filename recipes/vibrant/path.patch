--- scripts/VIBRANT_annotation.py	2019-10-23 14:37:43.000000000 -0500
+++ scripts/VIBRANT_annotation.py.new	2019-10-25 22:41:54.214285444 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- scripts/VIBRANT_extract_nucleotide.py	2019-10-23 14:37:43.000000000 -0500
+++ scripts/VIBRANT_extract_nucleotide.py.new	2019-10-25 22:42:10.666277719 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- scripts/VIBRANT_extract_protein.py	2019-10-23 14:37:43.000000000 -0500
+++ scripts/VIBRANT_extract_protein.py.new	2019-10-25 22:42:25.330270825 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
--- databases/VIBRANT_setup.py	2019-10-23 14:37:43.000000000 -0500
+++ databases/VIBRANT_setup.py.new	2019-10-25 22:55:05.291087049 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT
--- databases/VIBRANT_test_setup.py	2019-10-23 14:37:43.000000000 -0500
+++ databases/VIBRANT_test_setup.py.new	2019-10-26 01:38:19.371918907 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT
--- VIBRANT_run.py	2019-10-23 14:37:43.000000000 -0500
+++ VIBRANT_run.py.new	2019-10-26 12:49:34.017568299 -0500
@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/anaconda/envs/vibb/bin/python
 # Author: Kristopher Kieft, UW-Madison, 2019
 
 # VIBRANT v1.0.1
@@ -46,16 +46,16 @@
 vibrant.add_argument('-o', type=str, nargs=1, default='4', help='number of ORFs per scaffold to limit input sequences [default=4, can increase but not decrease]')
 vibrant.add_argument('-virome', action='store_true', help='use this setting if dataset is known to be comprised mainly of viruses. More sensitive to viruses, less sensitive to false identifications [default=off]')
 vibrant.add_argument('-no_plot', action='store_true', help='suppress the generation of summary plots [default=off]')
-vibrant.add_argument('-k', type=str, nargs=1, default=str(vibrant_path) + '/databases/KEGG_profiles_prokaryotes.HMM', help='path to KEGG HMMs (if moved from default location)')
-vibrant.add_argument('-p', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_v32.HMM', help='path to Pfam HMMs (if moved from default location)')
-vibrant.add_argument('-v', type=str, nargs=1, default=str(vibrant_path) + '/databases/VOGDB94_phage.HMM', help='path to VOG HMMs (if moved from default location)')
-vibrant.add_argument('-e', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_plasmid_v32.HMM', help='path to plasmid HMMs (if moved from default location)')
-vibrant.add_argument('-a', type=str, nargs=1, default=str(vibrant_path) + '/databases/Pfam-A_phage_v32.HMM', help='path to viral-subset Pfam HMMs (if moved from default location)')
-vibrant.add_argument('-c', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_categories.tsv', help='path to VIBRANT categories file (if moved from default location)')
-vibrant.add_argument('-n', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_names.tsv', help='path to VIBRANT annotation to name file (if moved from default location)')
-vibrant.add_argument('-s', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_KEGG_pathways_summary.tsv', help='path to VIBRANT summary of KEGG metabolism file (if moved from default location)')
-vibrant.add_argument('-m', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_machine_model.sav', help='path to VIBRANT neural network machine learning model (if moved from default location)')
-vibrant.add_argument('-g', type=str, nargs=1, default=str(vibrant_path) + '/files/VIBRANT_AMGs.tsv', help='path to VIBRANT AMGs file (if moved from default location)')
+vibrant.add_argument('-k', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/KEGG_profiles_prokaryotes.HMM', help='path to KEGG HMMs (if moved from default location)')
+vibrant.add_argument('-p', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_v32.HMM', help='path to Pfam HMMs (if moved from default location)')
+vibrant.add_argument('-v', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/VOGDB94_phage.HMM', help='path to VOG HMMs (if moved from default location)')
+vibrant.add_argument('-e', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_plasmid_v32.HMM', help='path to plasmid HMMs (if moved from default location)')
+vibrant.add_argument('-a', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/databases/Pfam-A_phage_v32.HMM', help='path to viral-subset Pfam HMMs (if moved from default location)')
+vibrant.add_argument('-c', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_categories.tsv', help='path to VIBRANT categories file (if moved from default location)')
+vibrant.add_argument('-n', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_names.tsv', help='path to VIBRANT annotation to name file (if moved from default location)')
+vibrant.add_argument('-s', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_KEGG_pathways_summary.tsv', help='path to VIBRANT summary of KEGG metabolism file (if moved from default location)')
+vibrant.add_argument('-m', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_machine_model.sav', help='path to VIBRANT neural network machine learning model (if moved from default location)')
+vibrant.add_argument('-g', type=str, nargs=1, default=str(os.getenv("VIBRANT_DATA_PATH")) + '/files/VIBRANT_AMGs.tsv', help='path to VIBRANT AMGs file (if moved from default location)')
 args = vibrant.parse_args()
 
 if type(args.f) == str:
@@ -193,9 +193,9 @@
 p_list = []
 while n < len(parallels2):
 	if format == "nucl":
-		execute = str(vibrant_path) + '/scripts/VIBRANT_extract_nucleotide.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".fna " + str(args.i[0]) + " " + str(lim_low)
+		execute = str(vibrant_path) + '/VIBRANT_extract_nucleotide.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".fna " + str(args.i[0]) + " " + str(lim_low)
 	elif format == "prot":
-		execute = str(vibrant_path) + '/scripts/VIBRANT_extract_protein.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".faa " + str(args.i[0])
+		execute = str(vibrant_path) + '/VIBRANT_extract_protein.py ' + str(parallels2[n]) + " " + str(parallels2[n]).rsplit(".",1)[0] + ".faa " + str(args.i[0])
 	p = subprocess.Popen(execute, shell=True)
 	p_list.append(p)
 	n += 1
@@ -240,7 +240,7 @@
 n = 0
 p_list = []
 while n < len(listing2):
-    execute = str(vibrant_path) + '/scripts/VIBRANT_annotation.py -i ' + str(listing2[n]) + str(command)
+    execute = str(vibrant_path) + '/VIBRANT_annotation.py -i ' + str(listing2[n]) + str(command)
     p = subprocess.Popen(execute, shell=True)
     p_list.append(p)
     n += 1
