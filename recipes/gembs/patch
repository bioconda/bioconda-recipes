diff --git a/gemBS/commands.py b/gemBS/commands.py
index 3db936d..c50591c 100644
--- a/gemBS/commands.py
+++ b/gemBS/commands.py
@@ -97,15 +97,6 @@ def gemBS_main():
         parser.add_argument('-j', '--json-file', dest="json", help="Location of gemBS JSON file")
         parser.add_argument('-d', '--dir', dest="wd", metavar="DIR",help="Set working directory")
         
-        if pkg_resources.resource_exists("gemBS", "bin"):
-            f = pkg_resources.resource_filename("gemBS", "bin")
-        path = os.environ.get("PATH")
-        if path == None:
-            path = f
-        else:
-            path = f + ":" + path
-            os.environ["PATH"] = path
-            
         commands = {
             "prepare" : PrepareConfiguration,            
             "index" : Index,
diff --git a/setup.py b/setup.py
index b095d25..bdb1c80 100644
--- a/setup.py
+++ b/setup.py
@@ -155,16 +155,16 @@ class install(_install):
     _install.boolean_options.extend(['no-samtools','no-gem3','no-bscall','minimal'])
 
     def initialize_options(self):
-        self.minimal = False
-        self.no_samtools = False
-        self.no_gem3 = False
-        self.no_bscall = False
-        self.disable_cuda = False
+        self.minimal = True
+        self.no_samtools = True
+        self.no_gem3 = True
+        self.no_bscall = True
+        self.disable_cuda = True
         self.enable_cuda = False
         _install.initialize_options(self)
         
     def run(self):
-        options=['setup', '_bcftools', '_utils']
+        options=['setup', '_utils']
         if not self.minimal:
             if not self.no_samtools:
                 options.append('_samtools')
@@ -176,7 +176,7 @@ class install(_install):
         if not self.enable_cuda:
             self.diable_cuda = True
             
-        compile_gemBS_tools(options, self.enable_cuda, self.disable_cuda)
+        #compile_gemBS_tools(options, self.enable_cuda, self.disable_cuda)
         _install.run(self)
 
         # find target folder
diff --git a/tools/Makefile b/tools/Makefile
index ebd8f3a..27e760d 100644
--- a/tools/Makefile
+++ b/tools/Makefile
@@ -47,7 +47,7 @@ _bcftools: $(HTSLIB_DIR) $(BCFTOOLS_DIR) $(BCFTOOLS_DIR)/config.h
 _bs_call: bs_call/src/Makefile.mk
 	$(MAKE) --directory=bs_call
 
-_utils: utils/Makefile 
+_utils:
 	$(MAKE) --directory=utils
 
 utils/Makefile: utils/Makefile.in utils/configure _samtools
diff --git a/tools/utils/configure b/tools/utils/configure
index 12aced1..369ef09 100755
--- a/tools/utils/configure
+++ b/tools/utils/configure
@@ -1681,7 +1681,7 @@ if test "x$with_htslib" != "x"; then
       HTSLIBS="$with_htslib/libhts.a -lcurl -lcrypto -llzma"
 		HTSINC="-I$with_htslib"
 else
-      HTSLIBS="-lhts -lcurl -lcrypto -llzma"
+      HTSLIBS="-lhts -lcrypto"
 		HTSINC=""
 fi
 
diff --git a/tools/utils/md5_fasta.c b/tools/utils/md5_fasta.c
index d87e2a7..4a3ea97 100644
--- a/tools/utils/md5_fasta.c
+++ b/tools/utils/md5_fasta.c
@@ -79,7 +79,7 @@ static int get_cache_fname(char *path, const char * cache, const char * str) {
 	s -= ln;
 	while(ln--) *path++ = *cache++;
 	bool need_slash = (*str && path > init && path[-1] != '/');
-	ln = strlen(str) + need_slash ? 1 : 0;
+	ln = strlen(str) + (need_slash ? 1 : 0);
 	if(ln >= s) return -1;
 	if(need_slash) *path++ = '/';
 	strcpy(path, str);
diff --git a/tools/utils/mextr/command_line.c b/tools/utils/mextr/command_line.c
index 2b0ce0d..816b347 100644
--- a/tools/utils/mextr/command_line.c
+++ b/tools/utils/mextr/command_line.c
@@ -299,10 +299,10 @@ if(!nr) error("None of the requested contigs are present in the input file\n");
 		qsort_r(ix, nr, sizeof(int), cmp_reg, reg);
 		char **tseq = malloc(sizeof(char *) * nr);
-		region_t *treg = malloc(sizeof(region_t) * nr);
+		struct bcf_sr_region_t *treg = malloc(sizeof(struct bcf_sr_region_t) * nr);
 		for(int i = 0; i < nr; i++) {
 			const int j = ix[i];
 			tseq[i] = reg->seq_names[j];
-			memcpy(treg + i, reg->regs + j, sizeof(region_t));
+			memcpy(treg + i, reg->regs + j, sizeof(struct bcf_sr_region_t));
 			khash_str2int_set(reg->seq_hash, tseq[i], i);
 		}
 		free(reg->seq_names);
@@ -337,6 +337,6 @@ reg->prev_start = reg->prev_end = reg->prev_seq = -1;
 			reg->seq_hash = khash_str2int_init();
 			reg->seq_names = calloc(nctgs, sizeof(char *));
-			reg->regs = calloc(nctgs, sizeof(region_t));
+			reg->regs = calloc(nctgs, sizeof(struct bcf_sr_region_t));
 			for(int i = 0; i < nctgs; i++) {
 				reg->nseqs++;
 				reg->seq_names[i] = ctgs[i].name;
diff --git a/tools/utils/mextr/mextr.h b/tools/utils/mextr/mextr.h
index ad7672a..378a2d2 100644
--- a/tools/utils/mextr/mextr.h
+++ b/tools/utils/mextr/mextr.h
@@ -192,7 +192,6 @@ void fill_base_prob_table(void);
 void print_headers(args_t *args);
 int calc_phred(double z);
 double *get_prob_dist(int ns, double *Q[]);
-extern char trans_base[256];
 
 #define ks_output(fp, s) { \
 	int r; \
diff --git a/tools/utils/mextr/output.c b/tools/utils/mextr/output.c
index 260457d..1cca3f7 100644
--- a/tools/utils/mextr/output.c
+++ b/tools/utils/mextr/output.c
@@ -4,7 +4,8 @@
 #include <math.h>
 #include <stdbool.h>
 #include <pthread.h>
-#include <values.h>
+#include <limits.h>
+#include <float.h>
 
 #include "mextr.h"
 #include "bbi.h"
@@ -12,6 +13,12 @@
 #include "htslib/hfile.h"
 #include "htslib/tbx.h"
 
+char trans_base[256] = {
+                ['A'] = 'T', ['C'] = 'G', ['G'] = 'C', ['T'] = 'A',
+                ['Y'] = 'R', ['R'] = 'Y', ['S'] = 'S', ['W'] = 'W', ['K'] = 'M', ['M'] = 'K',
+                ['B'] = 'V', ['V'] = 'B', ['D'] = 'H', ['H'] = 'D', ['N'] = 'N', ['.'] = '.'
+};
+
 void output_cpg(args_t *const args, rec_t ** const lrec, const int idx) {
 	static char *gt_iupac = "AMRWCSYGKT";
 	static uint8_t gt_msk[] = {0x11, 0xb3, 0x55, 0x99, 0xa2, 0xf6, 0xaa, 0x54, 0xdc, 0x88};
diff --git a/tools/utils/mextr/output_utils.c b/tools/utils/mextr/output_utils.c
index 1da6816..e8d7ae8 100644
--- a/tools/utils/mextr/output_utils.c
+++ b/tools/utils/mextr/output_utils.c
@@ -43,9 +43,3 @@ double *get_prob_dist(int ns, double *Q[]) {
 	return q0;
 }
 
-char trans_base[256] = {
-		['A'] = 'T', ['C'] = 'G', ['G'] = 'C', ['T'] = 'A',
-		['Y'] = 'R', ['R'] = 'Y', ['S'] = 'S', ['W'] = 'W', ['K'] = 'M', ['M'] = 'K',
-		['B'] = 'V', ['V'] = 'B', ['D'] = 'H', ['H'] = 'D', ['N'] = 'N', ['.'] = '.'
-};
-
