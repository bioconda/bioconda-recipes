diff --git a/setup.py b/setup.py
index 1367c1e..5fc6757 100644
--- a/setup.py
+++ b/setup.py
@@ -155,16 +155,16 @@ class install(_install):
     _install.boolean_options.extend(['no-samtools','no-gem3','no-bscall','minimal'])
 
     def initialize_options(self):
-        self.minimal = False
-        self.no_samtools = False
-        self.no_gem3 = False
-        self.no_bscall = False
-        self.disable_cuda = False
+        self.minimal = True
+        self.no_samtools = True
+        self.no_gem3 = True
+        self.no_bscall = True
+        self.disable_cuda = True
         self.enable_cuda = False
         _install.initialize_options(self)
         
     def run(self):
-        options=['setup', '_bcftools', '_utils']
+        options=['setup', '_utils']
         if not self.minimal:
             if not self.no_samtools:
                 options.append('_samtools')
@@ -176,7 +176,7 @@ class install(_install):
         if not self.enable_cuda:
             self.diable_cuda = True
             
-        compile_gemBS_tools(options, self.enable_cuda, self.disable_cuda)
+        #compile_gemBS_tools(options, self.enable_cuda, self.disable_cuda)
         _install.run(self)
 
         # find target folder
diff --git a/tools/Makefile b/tools/Makefile
index be3f646..5e17ef6 100644
--- a/tools/Makefile
+++ b/tools/Makefile
@@ -45,12 +45,9 @@ _bcftools: $(HTSLIB_DIR) $(BCFTOOLS_DIR) $(BCFTOOLS_DIR)/config.h
 _bs_call: bs_call/src/Makefile.mk
 	$(MAKE) --directory=bs_call
 
-_utils: utils/Makefile 
+_utils:
 	$(MAKE) --directory=utils
 
-utils/Makefile: utils/Makefile.in utils/configure _samtools
-	cd utils; ./configure --with-htslib=../${HTSLIB_DIR}
-
 setup:
 	@mkdir -p $(FOLDER_BIN) 
 
diff --git a/tools/utils/mextr/command_line.c b/tools/utils/mextr/command_line.c
index a7d8b1e..ffce87b 100644
--- a/tools/utils/mextr/command_line.c
+++ b/tools/utils/mextr/command_line.c
@@ -24,14 +24,14 @@
 // These are copied from htslib:synced_bcf_reader.c as the definitions are not visible
 // in the standard library and we need them to allow sorting of regions
 
-typedef struct {
-	hts_pos_t start, end;
-} region1_t;
+//typedef struct {
+//	hts_pos_t start, end;
+//} region1_t;
 
-typedef struct bcf_sr_region_t {
-	region1_t *regs;
-	int nregs, mregs, creg;
-} region_t;
+//typedef struct bcf_sr_region_t {
+//	region1_t *regs;
+//	int nregs, mregs, creg;
+//} region_t;
 
 const char *usage(void) {
 	return
