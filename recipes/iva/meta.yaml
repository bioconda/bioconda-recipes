package:
  name: iva
  version: "1.0.6"

source:
  fn: iva-1.0.6.tar.gz
  url: https://pypi.python.org/packages/3d/df/f8a1d735abea19137c9a940e90c171dd14415ad1b8add912ab9886ce98a1/iva-1.0.6.tar.gz
  md5: 5e2808848ba592381bea940bc43d8f75
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - iva = iva:main
    #
    # Would create an entry point called iva that calls iva.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  number: 0
  skip: True # [py2k or osx]

requirements:
  build:
    - python
    - setuptools
    - pyfastaq >=3.10.0
    - networkx >=1.7
    - pysam >=0.8.1,<=0.8.3
    - kmc
    - smalt
    - mummer
    - samtools

  run:
    - python
    - pyfastaq >=3.10.0
    - networkx >=1.7
    - pysam >=0.8.1,<=0.8.3
    - kmc
    - smalt
    - mummer
    - samtools

test:
  # Python imports
  imports:
    - iva
  commands:
    - iva -h 2>&1 | grep "SMALT mapping options" > /dev/null

    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - nose >=1.3
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/sanger-pathogens/iva
  license: GNU General Public License v3 (GPLv3)
  summary: 'Iterative Virus Assembler'
  license_family: Public-Domain

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
