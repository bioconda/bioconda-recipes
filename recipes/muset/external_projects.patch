--- a/cmake/fmt.cmake
+++ b/cmake/fmt.cmake
@@ -2,10 +2,12 @@
 
 ExternalProject_Add(FMT
   PREFIX ${external_bindir}/FMT
-  SOURCE_DIR ${external_dir}/fmt
+  SOURCE_DIR ${external_dir}/fmt
+  DOWNLOAD_COMMAND ""
   CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
              -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
-  INSTALL_COMMAND ""
+             -DFMT_TEST=OFF -DFMT_DOC=OFF
+  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Using existing fmt library"
   LOG_CONFIGURE ON
   LOG_BUILD ON
 )
 
+list(APPEND includes ${external_dir}/fmt/include)
+list(APPEND deps_libs ${external_bindir}/FMT/src/FMT-build/libfmt.a)
+list(APPEND deps FMT)
 
--- a/cmake/kff-cpp-api.cmake
+++ b/cmake/kff-cpp-api.cmake
@@ -2,10 +2,12 @@
 
 ExternalProject_Add(KFF
   PREFIX ${external_bindir}/KFF
-  SOURCE_DIR ${external_dir}/kff-cpp-api
+  SOURCE_DIR ${external_dir}/kff-cpp-api
+  DOWNLOAD_COMMAND ""
   CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
              -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
-  INSTALL_COMMAND ""
+  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Using existing kff-cpp-api library"
   LOG_CONFIGURE ON
   LOG_BUILD ON
 )
 
+list(APPEND includes ${external_bindir}/KFF/src/KFF-build)
+list(APPEND deps_libs ${external_bindir}/KFF/src/KFF-build/libkff.a)
+list(APPEND deps KFF)
 
--- a/cmake/lz4.cmake
+++ b/cmake/lz4.cmake
@@ -2,13 +2,15 @@
 
 ExternalProject_Add(LZ4
     PREFIX ${external_bindir}/LZ4
-    SOURCE_DIR ${external_dir}/lz4
     SOURCE_SUBDIR build/cmake
+    SOURCE_DIR ${external_dir}/lz4
+    DOWNLOAD_COMMAND ""
     CMAKE_ARGS -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF
                -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
                -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
-    INSTALL_COMMAND ""
+    INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Using existing lz4 library"
     LOG_CONFIGURE ON
     LOG_BUILD ON
 )
 
+list(APPEND includes ${external_dir}/lz4/lib)
+list(APPEND deps_libs ${external_bindir}/LZ4/src/LZ4-build/liblz4.a)
+list(APPEND deps LZ4)
 
--- a/cmake/spdlog.cmake
+++ b/cmake/spdlog.cmake
@@ -2,11 +2,13 @@
 
 ExternalProject_Add(SPDLOG
   PREFIX ${external_bindir}/SPDLOG
-  SOURCE_DIR ${external_dir}/spdlog
+  SOURCE_DIR ${external_dir}/spdlog
+  DOWNLOAD_COMMAND ""
   CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
              -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
              -DSPDLOG_BUILD_SHARED=OFF
-  INSTALL_COMMAND ""
+             -DSPDLOG_BUILD_TESTS=OFF -DSPDLOG_BUILD_EXAMPLE=OFF
+  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Using existing spdlog library"
   LOG_CONFIGURE ON
   LOG_BUILD ON
 )
 
+list(APPEND includes ${external_dir}/spdlog/include)
+list(APPEND deps SPDLOG)
 
--- a/cmake/xxHash.cmake
+++ b/cmake/xxHash.cmake
@@ -2,12 +2,14 @@
 
 ExternalProject_Add(XXHASH
   PREFIX ${external_bindir}/XXHASH
-  SOURCE_DIR ${external_dir}/xxHash
   SOURCE_SUBDIR "cmake_unofficial"
+  SOURCE_DIR ${external_dir}/xxHash
+  DOWNLOAD_COMMAND ""
   CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
              -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
              -DBUILD_SHARED_LIBS=OFF
-  INSTALL_COMMAND ""
+  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Using existing xxHash library"
   LOG_CONFIGURE
