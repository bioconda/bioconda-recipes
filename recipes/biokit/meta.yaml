package:
  name: biokit
  version: "0.1.4"

source:
  fn: biokit-0.1.4.tar.gz
  url: https://pypi.python.org/packages/source/b/biokit/biokit-0.1.4.tar.gz
  md5: b71b3aa4e75dbb10ed63f9459c23648b
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - biokit = biokit:main
    #
    # Would create an entry point called biokit that calls biokit.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  #number: 1

requirements:
  build:
    - python
    - setuptools
    - easydev >=0.9.11
    - pandas
    - bioservices >=1.4.5
    - colormap
    - scipy

  run:
    - python
    - easydev >=0.9.11
    - pandas
    - bioservices >=1.4.5
    - colormap
    - scipy

test:
  # Python imports
  imports:
    - biokit
    - biokit.data
    - biokit.data.viz
    - biokit.goid
    - biokit.io
    - biokit.misc
    - biokit.network
    - biokit.rtools
    - biokit.sequence
    - biokit.services
    - biokit.stats
    - biokit.taxonomy
    - biokit.viz
    - test
    - test.io
    - test.network
    - test.rtools
    - test.sequence
    - test.services
    - test.stats
    - test.taxonomy
    - test.viz

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: ['http://pypi.python.org/pypi/biokit']
  license: BSD License
  summary: 'Access to Biological Web Services from Python'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
