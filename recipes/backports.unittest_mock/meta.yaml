package:
  name: backports.unittest_mock
  version: "1.1.1"

source:
  fn: backports.unittest_mock-1.1.1.tar.gz
  url: https://files.pythonhosted.org/packages/83/f9/95f046b034d2f54692e97fddaccd3a9731896917ac47f8d3ce0689241c7b/backports.unittest_mock-1.1.1.tar.gz
  md5: 6ee907f7d8e35df16a06268e65d28e5f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - backports.unittest_mock = backports.unittest_mock:main
    #
    # Would create an entry point called backports.unittest_mock that calls backports.unittest_mock.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools_scm
    - mock

  run:
    - python

test:
  # Python imports
  imports:
    - backports
    - backports.unittest_mock

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - pytest >=2.8
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/jaraco/backports.unittest_mock
  license: MIT License
  summary: 'backports.unittest_mock'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
