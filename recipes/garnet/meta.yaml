package:
  name: garnet
  version: "0.2.20"

source:
  fn: GarNet-0.2.20.tar.gz
  url: https://pypi.python.org/packages/81/1a/9f714e4b5091e50f1584322cee2c11f4e5bc8bbf827e404e6c172d096436/GarNet-0.2.20.tar.gz
  md5: 53eaec2493856d8324ee1c630ce323dd
#  patches:
   # List any patch files here
   # - fix.patch

build:
  skip: True # [py2k or py34]
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - garnet = garnet:main
    #
    # Would create an entry point called garnet that calls garnet.main()

    - GarNet = src.__main__:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy
    - pandas
    - statsmodels
    - matplotlib
    - intervaltree
    - jinja2

  run:
    - python
    - numpy
    - pandas
    - statsmodels
    - matplotlib
    - intervaltree
    - jinja2

test:
  # Python imports
  imports:
    - GarNet

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - python -m GarNet -h

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/fraenkel-lab/GarNet
  license: MIT
  summary: 'For integrating epigenomics and transcriptomics data.'
  license_family: MIT
