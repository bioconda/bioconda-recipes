From d5d407402f2cbab3ef86cd9517715471cb76ae5a Mon Sep 17 00:00:00 2001
From: Nils Homer <nilshomer@gmail.com>
Date: Mon, 2 Aug 2021 16:39:24 -0700
Subject: [PATCH] fix string_utils.h warning:

    use of undeclared identifier 'setiosflags'; did you mean 'std::setiosflags'?
---
 chunk/src/utils/string_utils.h       | 4 ++--
 concordance/src/utils/string_utils.h | 4 ++--
 ligate/src/utils/string_utils.h      | 4 ++--
 phase/src/utils/string_utils.h       | 4 ++--
 sample/src/utils/string_utils.h      | 4 ++--
 snparray/src/utils/string_utils.h    | 4 ++--
 stats/src/utils/string_utils.h       | 4 ++--
 7 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/chunk/src/utils/string_utils.h b/chunk/src/utils/string_utils.h
index e861162..8e92201 100644
--- a/chunk/src/utils/string_utils.h
+++ b/chunk/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/concordance/src/utils/string_utils.h b/concordance/src/utils/string_utils.h
index e861162..8e92201 100644
--- a/concordance/src/utils/string_utils.h
+++ b/concordance/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/ligate/src/utils/string_utils.h b/ligate/src/utils/string_utils.h
index 13d0906..84fa457 100644
--- a/ligate/src/utils/string_utils.h
+++ b/ligate/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/phase/src/utils/string_utils.h b/phase/src/utils/string_utils.h
index 13d0906..84fa457 100644
--- a/phase/src/utils/string_utils.h
+++ b/phase/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/sample/src/utils/string_utils.h b/sample/src/utils/string_utils.h
index 13d0906..84fa457 100644
--- a/sample/src/utils/string_utils.h
+++ b/sample/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/snparray/src/utils/string_utils.h b/snparray/src/utils/string_utils.h
index 13d0906..84fa457 100644
--- a/snparray/src/utils/string_utils.h
+++ b/snparray/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
diff --git a/stats/src/utils/string_utils.h b/stats/src/utils/string_utils.h
index e861162..8e92201 100644
--- a/stats/src/utils/string_utils.h
+++ b/stats/src/utils/string_utils.h
@@ -63,7 +63,7 @@ public:
 	template < class T >
 	std::string str(T n, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		ss << n;
 		return ss.str();
 	}
@@ -71,7 +71,7 @@ public:
 	template < class T >
 	std::string str(std::vector < T > & v, int prec = -1) {
 		std::ostringstream ss( std::stringstream::out );
-		if (prec >= 0) { ss << setiosflags( std::ios::fixed ); ss.precision(prec); }
+		if (prec >= 0) { ss << std::setiosflags( std::ios::fixed ); ss.precision(prec); }
 		for (int e = 0 ; e < v.size() ; e ++) ss << (e>0?" ":"") << v[e] ;
 		return ss.str();
 	}
-- 
2.22.0

