package:
  name: viral-ngs
  version: 1.5.4

about:
  home: https://github.com/broadinstitute/viral-ngs
  license: https://raw.githubusercontent.com/broadinstitute/viral-ngs/master/LICENSE
  summary: A set of scripts and tools for the analysis of viral NGS data

source:
  fn: viral-ngs-v1.5.4.zip
  url: https://github.com/broadinstitute/viral-ngs/archive/v1.5.4.zip
  md5: 3e95fb946d79a5366a789e1dbc84865d

build:
    number: 2
    rpaths:
        - lib/
        - lib//

requirements:
  build:
    #- python >=3.5.0
    - biopython 
    - future >=0.15.2
    - futures ==3.0.5 # [py2k]
    - pytest 
    - pysam ==0.8.4
    - pyyaml >=3.11
    - boto ==2.38.0 
    - snakemake # [py3k]
    - blast ==2.2.31
    - bmtagger ==3.101
    - last ==719
    - gatk
    #- krona ==2.6.1
    - kraken-all # [linux]
    - mafft ==7.221
    - mummer ==3.23
    - muscle ==3.8.1551
    - mvicuna ==1.0
    - novoalign ==3.03.02
    - perl-threaded
    - picard ==1.126
    - prinseq ==0.20.4
    - samtools ==1.2
    - snpeff ==4.1l
    - trimmomatic ==0.35
    - trinity ==date.2011_11_26
    - vphaser2 ==2.0
    
    - gcc
    - boost ==1.60 # needed for diamond, among other packages

  run:
    #- python >=3.5.0
    - biopython 
    - future >=0.15.2
    - futures ==3.0.5 # [py2k]
    - pytest 
    - pysam ==0.8.4
    - pyyaml >=3.11
    - boto ==2.38.0 
    - snakemake # [py3k]
    - blast ==2.2.31
    - bmtagger ==3.101
    - last ==719
    - gatk
    #- krona ==2.6.1
    - kraken-all # [linux]
    - mafft ==7.221
    - mummer ==3.23
    - muscle ==3.8.1551
    - mvicuna ==1.0
    - novoalign ==3.03.02
    - perl-threaded
    - picard ==1.126
    - prinseq ==0.20.4
    - samtools ==1.2
    - snpeff ==4.1l
    - trimmomatic ==0.35
    - trinity ==date.2011_11_26
    - vphaser2 ==2.0

    - gcc # used for compiling any tools that are installed by viral-ngs itself (rather than conda)
    - libgcc
    - boost ==1.60 # needed for diamond, among other packages

    - perl-threaded

    - libgcc

    # testing-related
    - flake8 <=3
    - mock >=2.0.0
    - six <2
    - pytest-cov
    - pytest-xdist

test:
  commands:
    # preserve CONDA_DEFAULT_ENV to restore later
    - "export CONDA_DEFAULT_ENV_BAK=$CONDA_DEFAULT_ENV"
    # hack so _test env has the correct CONDA_DEFAULT_ENV (inspected by viral-ngs to determine tool install location)
    - "export CONDA_DEFAULT_ENV=$(echo $CONDA_DEFAULT_ENV | perl -lape 's/_build$/_test/g')"

    # test command-line tools
    - "assembly.py -h &> /dev/null"
    - "broad_utils.py -h &> /dev/null"
    - "illumina.py -h &> /dev/null"
    - "interhost.py -h &> /dev/null"
    - "intrahost.py -h &> /dev/null"
    - "metagenomics.py -h &> /dev/null"
    - "ncbi.py -h &> /dev/null"
    - "read_utils.py -h &> /dev/null"
    - "reports.py -h &> /dev/null"
    - "taxon_filter.py -h &> /dev/null"

    # test tool install
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_tools.py"

    # various unit tests
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_tools_vphaser2.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_tools_novoalign.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_tools_picard.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_tools_samtools.py"
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_taxon_filter.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_util_misc.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_util_vcf.py"    
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_read_utils.py"
    - "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_snake.py" # [py3k]

    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_interhost.py"
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_intrahost.py"
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_assembly.py"
    #- "cd $PREFIX/opt/$PKG_NAME-$PKG_VERSION && py.test -v test/unit/test_illumina.py"

    # Restore CONDA_DEFAULT_ENV after tool install
    - "export CONDA_DEFAULT_ENV=$CONDA_DEFAULT_ENV_BAK"
    
