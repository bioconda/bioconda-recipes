#!/bin/bash -e

# Function to print usage
usage() {
    echo USAGE:
    echo "kosudoku-poolsolve [--row_pools A,B,C] [--col_pools 1,2,3] [--ctrl_pools SoG,pta,Blank] --grid_layout <path> --pool_presence_table <path> --ref_genebank <path> --bayesian_params <path> [--tmp_dir <path>]"
}


VALID_ARGS=$(getopt -o r:c:l:g:p:b:y:t:h --long row_pools:,col_pools:,ctrl_pools:,grid_layout:,pool_presence_table:,ref_genebank:,bayesian_params:,tmp_dir:,help -- "$@")
if [[ $? -ne 0 ]]; then
    usage
    exit 1;
fi

eval set -- "$VALID_ARGS"
while [ : ]; do
  case "$1" in
    -r | --row_pools)
        row_pools=$2
        shift 2
        ;;
    -c | --col_pools)
        col_pools=$2
        shift 2
        ;;
    -l | --ctrl_pools)
        ctrl_pools=$2
        shift 2
        ;;
    -g | --grid_layout)
        grid_layout=$2
        shift 2
        ;;
    -p | --pool_presence_table)
        pool_presence_table=$2
        shift 2
        ;;
    -b | --ref_genebank)
        ref_genebank=$2
        shift 2
        ;;
    -y | --bayesian_params)
        bayesian_params=$2
        shift 2
        ;;
    -t | --tmp_dir)
        tmp_dir=$2
        shift 2
        ;;
    -h | --help)
        usage
        exit 0
        ;;
    --) shift; 
        break
        ;;
  esac
done


# Create a temporary folder for intermediate output
tmp_folder=${tmp_dir:-/tmp}/kosudoku-$(date | tr ' ' '_')-$RANDOM
mkdir -p $tmp_folder

job_file=$tmp_folder/config.inp
touch $job_file

# Generate the job file following the original repository's format.
# Input data
echo "rowPools = ${row_pools:-A,B,C,D,E,F,G,H}" >> $job_file
echo "colPools = ${col_pools:-1,2,3,4,5,6,7,8,9,10,11,12}" >> $job_file
echo "controlPools = ${ctrl_pools:-SoG,pta,Blank}" >> $job_file

echo "sudokuGridLayout = ${grid_layout:?input parameter undefined}" >> $job_file
echo "poolPresenceTableFileName = ${pool_presence_table:?input parameter undefined}" >> $job_file

echo "genBankFileName = ${ref_genebank:?input parameter undefined}" >> $job_file
echo "bayesianParameterFileName = ${bayesian_params:?input parameter undefined}" >> $job_file

echo "readCountThreshold = 5" >> $job_file
echo "maxGapForCoordGrouping = 4" >> $job_file
echo "voigtScoreThreshold = 1e-3" >> $job_file
echo "maxTotalCoords = 24" >> $job_file
echo "maxSinglePoolCoordNumber = 12" >> $job_file


# Output data
echo "sudokuGridXMLFile = ./progenitor_collection_catalog.xml" >> $job_file
echo "sudokuGridSummaryFileName = ./progenitor_collection_catalog_summary.csv" >> $job_file


# Run the script from the package
python "$CONDA_PREFIX/share/kosudoku/kosudoku-poolsolve" $job_file


# Delete the temporary data folder after successful tool execution.
rm -r $tmp_folder

