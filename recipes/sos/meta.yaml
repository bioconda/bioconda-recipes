{% set name = "sos" %}
{% set version = "0.9.14.5" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "8de38a91ccecb37ffe4a178abae88ec34677ef3d61dc2287e03a2f41518fc222" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  linux-64: python 
  number: 0
  skip: True  # [not py36]
  script: python -m pip install --no-deps --ignore-installed . --verbose

requirements:
  host:
    - python
    - pip

  run:
    - python
    - setuptools
    - psutil
    - tqdm
    - fasteners
    - pyyaml
    - pygments
    - networkx
    - pydot
    - pydotplus
    - pexpect
    - billiard
    - jinja2
    - nbformat
    - docker-py
    - sos-pbs
    - sos-rq
    - sos-bioinfo
    - xxhash

test:
  imports:
    - sos
    - sos.docker
  commands:
    - sos --help
    - sos-runner --help

about:
  home: https://github.com/vatlab/SoS
  license: GNU General Public License (GPL)
  license_family: LGPL
  summary: 'Script of Scripts (SoS): an interactive, cross-platform, and cross-language workflow system for reproducible data analysis'
  description: "Computationally intensive disciplines such as computational biology often\nrequires one to exploit a variety of tools implemented in different programming\nlanguages, and to analyze large\
    \ datasets on high performance computing systems.\nAlthough scientific workflow systems are powerful in organizing and executing\nlarge-scale data analysis processes, there are usually non-trivial learning\n\
    curve and engineering overhead in creating and maintaining such workflows,\nmaking them unsuitable for data exploration and prototyping. To bridge the\ngap between interactive analysis and workflow\
    \ systems, we developed Script\nof Scripts (SoS), a system with strong emphases on readability, practicality,\nand reproducibility for daily computational research. For exploratory analysis\nSoS provides\
    \ a multi-language file format and scripting engine that centralizes\nall computations, and creates dynamic report documents for publishing and\nsharing. As a workflow engine, SoS provides an intuitive\
    \ syntax to create\nworkflows in process-oriented, outcome-oriented and mixed styles, as well as\na unified interface to executing and managing tasks on a variety of computing\nplatforms with automatic\
    \ synchronization of files between isolated systems.\nIn this paper we illustrate with real-world examples the use of SoS as both\ninteractive analysis tool and pipeline platform for all stages of methods\n\
    development and data analysis projects. In particular we demonstrate how SoS\ncan easily be adopted based on existing scripts and pipelines, yet resulting\nin substantial improvement in terms of organization,\
    \ readability and\ncross-platform computation management.\n\nPlease refer to http://vatlab.github.io/SOS/ for more details on SoS.\n"
  doc_url: http://vatlab.github.io/SoS

extra:
  recipe-maintainers:
    - vibbits
