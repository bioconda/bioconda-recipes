# !! THIS FILE WAS AUTOMATICALLY GENERATED BY THE SBT-BIOCONDA PLUGIN !!
# !!                       DO NOT EDIT MANUALLY                       !!

package:
  name: biopet-sampleconfig
  version: '0.3'
source:
  url: https://github.com/biopet/sampleconfig/releases/download/v0.3/SampleConfig-assembly-0.3.jar
  sha256: f14655c26e5208a82d6a27fedef77b8961bc47eb3b9fdaa61ba67d60b282af7f
build:
  noarch: generic
  number: 0
requirements:
  run:
  - openjdk >=8,<9
  - python
about:
  home: https://github.com/biopet/sampleconfig
  license: MIT
  summary: '#### Tools - ExtractTsv  This mean can extract samples, libraries and
    readgroups from a sample config file.'
  description: |
    #### Tools - ExtractTsv

    This mean can extract samples, libraries and readgroups from a sample config file. This meant as a supporting tool inside wdl pipelines.
    It can also output a single layer as tsv file.


    #### Tools - ReadFromTsv

    This tool enables a user to create a full sample sheet in JSON format or
    YAML format, suitable for all Biopet Queue pipelines, from TSV file(s).


    #### Tools - CromwellArrays

    This tool will convert the sample configs to a array based format that can be used inside wdl pipelines.
    This tool is only to support biowdl pipelines.


    #### Tools - CaseControl

     This tool will extract the case-control pairs from a sample config file.
     It will read the headers of the bam files to confirm that samples do exist.

    For documentation and manuals visit our github.io page: https://biopet.github.io/sampleconfig
test:
  commands:
  - biopet-sampleconfig ExtractTsv --version
  - biopet-sampleconfig ExtractTsv --help
  - biopet-sampleconfig ReadFromTsv --version
  - biopet-sampleconfig ReadFromTsv --help
  - biopet-sampleconfig CromwellArrays --version
  - biopet-sampleconfig CromwellArrays --help
extra:
  notes: |
    biopet-sampleconfig is a Java program that comes with a custom wrapper shell script.
    By default 'no default java option' is set in the wrapper.
    The command that runs the program is 'biopet-sampleconfig'.
    If you want to overwrite it you can specify memory options directly after your binaries.
    If you have _JAVA_OPTIONS set globally this will take precedence.
    For example run it with 'biopet-sampleconfig -Xms512m -Xmx1g'.

