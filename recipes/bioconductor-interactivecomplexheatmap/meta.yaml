{% set version = "1.2.0" %}
{% set name = "InteractiveComplexHeatmap" %}
{% set bioc = "3.14" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name|lower }}/bioconductor-{{ name|lower }}_{{ version }}_src_all.tar.gz'
  md5: b8042dc6c826b04fbce4b0fa7d56fe26
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  noarch: generic
# Suggests: knitr, rmarkdown, testthat, EnrichedHeatmap, GenomicRanges, data.table, circlize, GenomicFeatures, tidyverse, tidyHeatmap, cluster, org.Hs.eg.db, simplifyEnrichment, GO.db, SC3, GOexpress, SingleCellExperiment, scater, gplots, pheatmap, airway, DESeq2, DT, cola, BiocManager, gridtext, HilbertCurve (>= 1.21.1), shinydashboard, SummarizedExperiment, pkgndep, ks
requirements:
  host:
    - 'bioconductor-complexheatmap >=2.10.0,<2.11.0'
    - 'bioconductor-iranges >=2.28.0,<2.29.0'
    - 'bioconductor-s4vectors >=0.32.0,<0.33.0'
    - r-base
    - r-clisymbols
    - r-digest
    - r-fontawesome
    - r-getoptlong
    - r-htmltools
    - r-jsonlite
    - 'r-kableextra >=1.3.1'
    - r-rcolorbrewer
    - r-shiny
    - r-svglite
  run:
    - 'bioconductor-complexheatmap >=2.10.0,<2.11.0'
    - 'bioconductor-iranges >=2.28.0,<2.29.0'
    - 'bioconductor-s4vectors >=0.32.0,<0.33.0'
    - r-base
    - r-clisymbols
    - r-digest
    - r-fontawesome
    - r-getoptlong
    - r-htmltools
    - r-jsonlite
    - 'r-kableextra >=1.3.1'
    - r-rcolorbrewer
    - r-shiny
    - r-svglite
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'MIT + file LICENSE'
  summary: 'Make Interactive Complex Heatmaps'
  description: 'This package can easily make heatmaps which are produced by the ComplexHeatmap package into interactive applications. It provides two types of interactivities: 1. on the interactive graphics device, and 2. on a Shiny app. It also provides functions for integrating the interactive heatmap widgets for more complex Shiny app development.'
  license_file: LICENSE

