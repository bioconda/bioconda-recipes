--- Makefile.bak	2016-03-07 21:43:37.000000000 +0100
+++ Makefile	2016-03-07 21:55:08.000000000 +0100
@@ -14,7 +14,7 @@
 CFLAGS=-O3
 CXX=g++
 CC=gcc
-HDF5=install
+#HDF5=install
 
 # Check operating system, OSX doesn't have -lrt
 UNAME_S := $(shell uname -s)
@@ -35,11 +35,11 @@
 endif
 
 # Bulild and link the libhts submodule
-HTS_LIB=./htslib/libhts.a
-HTS_INCLUDE=-I./htslib
+HTS_LIB=${PREFIX}/lib/libhts.a
+HTS_INCLUDE=-I${PREFIX}/include
 
 # Include the header-only fast5 library
-FAST5_INCLUDE=-I./fast5
+FAST5_INCLUDE=-I${PREFIX}/include/fast5
 
 # Include the src subdirectories
 NP_INCLUDE=$(addprefix -I./, $(SUBDIRS))
--- scripts/nanopolish_makerange.py.bak	2016-03-07 22:54:28.000000000 +0100
+++ scripts/nanopolish_makerange.py	2016-03-07 22:56:07.000000000 +0100
@@ -1,3 +1,5 @@
+#!/usr/bin/env python
+
 import sys
 from Bio import SeqIO
 
--- scripts/nanopolish_merge.py.bak	2016-03-07 22:56:44.000000000 +0100
+++ scripts/nanopolish_merge.py	2016-03-07 22:57:09.000000000 +0100
@@ -1,3 +1,5 @@
+#!/usr/bin/env python
+
 import sys
 import glob
 from Bio import SeqIO
--- src/nanopolish_poremodel.cpp.bak	2016-03-07 21:45:28.000000000 +0100
+++ src/nanopolish_poremodel.cpp	2016-03-07 21:53:10.000000000 +0100
@@ -11,7 +11,7 @@
 #include <sstream>
 #include <cstring>
 #include <bits/stl_algo.h>
-#include "../fast5/src/fast5.hpp"
+#include <fast5.hpp>
 
 void PoreModel::bake_gaussian_parameters()
 {
--- src/nanopolish_poremodel.h.bak	2016-03-07 21:44:10.000000000 +0100
+++ src/nanopolish_poremodel.h	2016-03-07 21:51:11.000000000 +0100
@@ -13,7 +13,7 @@
 #include "nanopolish_common.h"
 #include <inttypes.h>
 #include <string>
-#include "../fast5/src/fast5.hpp"
+#include <fast5.hpp>
 
 //
 struct PoreModelStateParams
--- src/nanopolish_squiggle_read.cpp.bak	2016-03-07 21:45:27.000000000 +0100
+++ src/nanopolish_squiggle_read.cpp	2016-03-07 21:53:24.000000000 +0100
@@ -9,7 +9,7 @@
 #include <algorithm>
 #include "nanopolish_common.h"
 #include "nanopolish_squiggle_read.h"
-#include "src/fast5.hpp"
+#include <fast5.hpp>
 
 //
 SquiggleRead::SquiggleRead(const std::string& name, const std::string& path) :
