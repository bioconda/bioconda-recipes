{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-progress
  # Note that conda versions cannot contain -, so any -'s in the version have
  # been replaced with _'s.
  version: "1.0.2"

source:
  fn: progress_1.0.2.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/progress_1.0.2.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/progress/progress_1.0.2.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat
requirements:
  build:
    - r
    - r-r6
    - r-prettyunits

  run:
    - r
    - r-r6
    - r-prettyunits

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('progress')" # [not win]
    - "\"%R%\" -e \"library('progress')\"" # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/gaborcsardi/progress
  license: MIT + file LICENSE
  summary: Terminal progress bars. They are configurable, may include percentage, elapsed time,
    and/or the estimated completion time. They work in the command line, in Emacs, R
    Studio, Windows Rgui and Mac OSX R.app. The package also provides a C++ API, that
    works with or without Rcpp.
  license_family: MIT

# The original CRAN metadata for this package was:

# Package: progress
# Title: Terminal Progress Bars
# Version: 1.0.2
# Author: Gabor Csardi [aut, cre]
# Maintainer: Gabor Csardi <csardi.gabor@gmail.com>
# Description: Terminal progress bars. They are configurable, may include percentage, elapsed time, and/or the estimated completion time. They work in the command line, in Emacs, R Studio, Windows Rgui and Mac OSX R.app. The package also provides a C++ API, that works with or without Rcpp.
# License: MIT + file LICENSE
# LazyData: true
# URL: https://github.com/gaborcsardi/progress
# BugReports: https://github.com/gaborcsardi/progress/issues
# Imports: prettyunits, R6
# Suggests: testthat
# NeedsCompilation: no
# Packaged: 2015-06-04 22:26:34 UTC; gaborcsardi
# Repository: CRAN
# Date/Publication: 2015-06-05 01:14:18

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
