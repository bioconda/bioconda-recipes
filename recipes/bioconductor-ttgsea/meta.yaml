{% set version = "1.0.0" %}
{% set name = "ttgsea" %}
{% set bioc = "3.13" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name }}/bioconductor-{{ name }}_{{ version }}_src_all.tar.gz'
  md5: 7bf4a9d487b77b6e51ff1d9b4089b039
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  noarch: generic
# Suggests: fgsea, knitr, testthat, reticulate, rmarkdown
requirements:
  host:
    - r-base
    - r-data.table
    - r-diagrammer
    - r-keras
    - r-purrr
    - r-stopwords
    - r-text2vec
    - r-textstem
    - r-tm
    - r-tokenizers
  run:
    - r-base
    - r-data.table
    - r-diagrammer
    - r-keras
    - r-purrr
    - r-stopwords
    - r-text2vec
    - r-textstem
    - r-tm
    - r-tokenizers
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: Artistic-2.0
  summary: 'Tokenizing Text of Gene Set Enrichment Analysis'
  description: 'Functional enrichment analysis methods such as gene set enrichment analysis (GSEA) have been widely used for analyzing gene expression data. GSEA is a powerful method to infer results of gene expression data at a level of gene sets by calculating enrichment scores for predefined sets of genes. GSEA depends on the availability and accuracy of gene sets. There are overlaps between terms of gene sets or categories because multiple terms may exist for a single biological process, and it can thus lead to redundancy within enriched terms. In other words, the sets of related terms are overlapping. Using deep learning, this pakage is aimed to predict enrichment scores for unique tokens or words from text in names of gene sets to resolve this overlapping set issue. Furthermore, we can coin a new term by combining tokens and find its enrichment score by predicting such a combined tokens.'

