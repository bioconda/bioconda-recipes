{% set name = "latch" %}
{% set version = "2.56.4" }

build:
  noarch: python
  number: 0
  skip: True  # [py < 39]
  script: {{ PYTHON }} -m pip install . -vvv --no-deps
  entry_points:
    - latch=latch_cli.main:main
  run_exports:
    - {{ pin_subpackage('latch', max_pin="x") }}
    
package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/latch-{{ version }}.tar.gz
    sha256: 8d0fa94d1a50cfd5e689d920c8ce14b5fa3ac7683993fdfe114173271cc56ef1

requirements:
  host:
    - python >=3.9
  run:
    - kubernetes >=24.2.0
    - pyjwt >=0.2.0
    - requests >=2.28.1
    - click >=8.0
    - docker >=7.1.0
    - paramiko >=3.4.0
    - scp >=0.14.0
    - boto3 >=1.26.0
    - tqdm >=4.63.0
    - lytekit ==0.15.25
    - lytekitplugins-pods ==0.7.1
    - typing-extensions >=4.12.0
    - apscheduler >=3.10.0
    - gql ==3.4.0
    - graphql-core ==3.2.3
    - requests-toolbelt ==0.10.1
    - python-dateutil >=2.8
    - GitPython ==3.1.40
    - aioconsole ==0.6.1
    - asyncssh ==2.13.2
    - websockets ==11.0.3
    - watchfiles ==0.19.0
    - setuptools >=75.3.0
    - pyxattr >=0.8.1
    - orjson >=3.10.12
    - latch-persistence >=0.1.3
  pip:
    - lyteidl ==0.2.1
    - lytekit ==0.15.25
    - lytekitplugins-pods ==0.7.1

test:
  imports:
    - flyteidl
    - validate
    - flytekit
    - plugins
    - flytekitplugins.pod
    - latch
    - latch_cli
  commands:
    - latch --help
  requires:
    - pip

about:
  home: https://pypi.org/project/latch/
  summary: A python bioinformatics framework
  description: |
    It takes months to build infrastructure with the compute, storage, and user-friendly interface necessary to run bioinformatics pipelines at scale.

    The Latch SDK is an open-source toolchain to define serverless bioinformatics workflows with plain python and deploy associated no-code interfaces using single command.

    Bioinformatics workflows developed with the SDK automatically receive:
      * Instant no-code interfaces for accessibility and publication
      * First class static typing
      * Containerization and versioning of every registered change
      * Reliable and scalable managed cloud infrastructure
      * Single line definition of arbitrary resource requirements (eg. CPU, GPU) for serverless execution
  license: MIT

extra:
  recipe-maintainers:
    - nh13
  skip-lints:
    - folder_and_package_name_must_match

