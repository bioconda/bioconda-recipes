{% set version = "1.2.1" %}
{% set name = "alabaster.base" %}
{% set bioc = "3.18" %}

package:
  name: 'bioconductor-{{ name|lower }}'
  version: '{{ version }}'
source:
  url:
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioconductor.org/packages/{{ bioc }}/bioc/src/contrib/Archive/{{ name }}/{{ name }}_{{ version }}.tar.gz'
    - 'https://bioarchive.galaxyproject.org/{{ name }}_{{ version }}.tar.gz'
    - 'https://depot.galaxyproject.org/software/bioconductor-{{ name }}/bioconductor-{{ name }}_{{ version }}_src_all.tar.gz'
  md5: 2d6215dfe9b8412438f9b05b54be2331
build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  run_exports: '{{ pin_subpackage("bioconductor-alabaster.base", max_pin="x.x") }}'
# Suggests: BiocStyle, rmarkdown, knitr, testthat, digest, Matrix
# SystemRequirements: C++17, GNU make
requirements:
  host:
    - 'bioconductor-alabaster.schemas >=1.2.0,<1.3.0'
    - 'bioconductor-rhdf5 >=2.46.0,<2.47.0'
    - 'bioconductor-rhdf5lib >=1.24.0,<1.25.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - r-base
    - r-jsonlite
    - r-jsonvalidate
    - r-rcpp
    - libblas
    - liblapack
  run:
    - 'bioconductor-alabaster.schemas >=1.2.0,<1.3.0'
    - 'bioconductor-rhdf5 >=2.46.0,<2.47.0'
    - 'bioconductor-rhdf5lib >=1.24.0,<1.25.0'
    - 'bioconductor-s4vectors >=0.40.0,<0.41.0'
    - r-base
    - r-jsonlite
    - r-jsonvalidate
    - r-rcpp
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
test:
  commands:
    - '$R -e "library(''{{ name }}'')"'
about:
  home: 'https://bioconductor.org/packages/{{ bioc }}/bioc/html/{{ name }}.html'
  license: 'MIT + file LICENSE'
  summary: 'Save Bioconductor Objects To File'
  description: 'Save Bioconductor data structures into file artifacts, and load them back into memory. This is a more robust and portable alternative to serialization of such objects into RDS files. Each artifact is associated with metadata for further interpretation; downstream applications can enrich this metadata with context-specific properties.'
  license_file: LICENSE

