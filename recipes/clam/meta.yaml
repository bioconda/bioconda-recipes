{% set version = "0.1.5" %}

package:
  name: clam
  version: {{ version }}

build:
  skip: True  # [osx]
  number: 0
  run_exports:
    - {{ pin_subpackage("clam", max_pin="x.x") }}
    
source:
  url: https://github.com/cademirch/clam/archive/v{{ version }}.tar.gz
  sha256: 9929049bf08cd85f0d5d1d92dfbdd793b789180d276cb8e00568a3ecde20232e

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('rust') }}
    - cargo-bundle-licenses
    - gcc  # [not osx]
    - clangdev
    - pkg-config
    - make
    - cmake

test:
  commands:
    - clam --help

about:
  home: https://github.com/cademirch/clam
  dev_url: https://github.com/cademirch/clam
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: "clam is a tool for classification of callable loci intervals, and accurate estimation of population genetic statistics."

extra:
  additional-platforms:
    - linux-aarch64
    - osx-arm64
  skip-lints:
    # below is copied from recipes/d4tools: (clam uses the d4 crate as a dependency, not the conda package d4tools)
    # Because the Rust build script in rust crate will build all the upstream dependencies and those dependencies contains make file that directly call gcc rather than use $(CC) variable. Thus not forcing install gcc into the environment can cause linking error as the conda system have it's own libc. 
    - should_use_compilers
